(function () {
this.MooTools = { version: "1.4.5", build: "ab8ea8824dc3b24b6666867a2c4ed58ebb762cf0" };
        var e = this.typeOf = function (i) {
        if (i == null) {
        return "null";
        }
        if (i.$family != null) {
        return i.$family();
        }
        if (i.nodeName) {
        if (i.nodeType == 1) {
        return "element";
        }
        if (i.nodeType == 3) {
        return (/\S/).test(i.nodeValue) ? "textnode" : "whitespace";
        }
        }
        else {
        if (typeof i.length == "number") {
        if (i.callee) {
        return "arguments";
        }
        if ("item" in i) {
        return "collection";
        }
        }
        }
        return typeof i;
        };
        var u = this.instanceOf = function (w, i) {
        if (w == null) {
        return false;
        }
        var v = w.$constructor || w.constructor;
                while (v) {
        if (v === i) {
        return true;
        }
        v = v.parent;
        }
        if (!w.hasOwnProperty) {
        return false;
        }
        return w instanceof i;
        };
        var f = this.Function;
        var r = true;
        for (var q in { toString: 1 }) {
r = null;
}
if (r) {
r = ["hasOwnProperty", "valueOf", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "constructor"];
}
f.prototype.overloadSetter = function (v) {
var i = this;
        return function (x, w) {
        if (x == null) {
        return this;
        }
        if (v || typeof x != "string") {
        for (var y in x) {
        i.call(this, y, x[y]);
        }
        if (r) {
        for (var z = r.length; z--; ) {
        y = r[z];
                if (x.hasOwnProperty(y)) {
        i.call(this, y, x[y]);
        }
        }
        }
        }
        else {
        i.call(this, x, w);
        }
        return this;
        };
};
        f.prototype.overloadGetter = function (v) {
        var i = this;
                return function (x) {
                var y, w;
                        if (typeof x != "string") {
                y = x;
                }
                else {
                if (arguments.length > 1) {
                y = arguments;
                }
                else {
                if (v) {
                y = [x];
                }
                }
                }
                if (y) {
                w = {};
                        for (var z = 0; z < y.length; z++) {
                w[y[z]] = i.call(this, y[z]);
                }
                }
                else {
                w = i.call(this, x);
                }
                return w;
                };
        };
        f.prototype.extend = function (i, v) {
        this[i] = v;
        }.overloadSetter();
        f.prototype.implement = function (i, v) {
        this.prototype[i] = v;
        }.overloadSetter();
        var o = Array.prototype.slice;
        f.from = function (i) {
        return (e(i) == "function") ? i : function () {
        return i;
        };
        };
        Array.from = function (i) {
        if (i == null) {
        return [];
        }
        return (k.isEnumerable(i) && typeof i != "string") ? (e(i) == "array") ? i : o.call(i) : [i];
        };
        Number.from = function (v) {
        var i = parseFloat(v);
                return isFinite(i) ? i : null;
        };
        String.from = function (i) {
        return i + "";
        };
        f.implement({ hide: function () {
        this.$hidden = true;
                return this;
        }, protect: function () {
        this.$protected = true;
                return this;
        } });
        var k = this.Type = function (x, w) {
        if (x) {
        var v = x.toLowerCase();
                var i = function (y) {
                return (e(y) == v);
                };
                k["is" + x] = i;
                if (w != null) {
        w.prototype.$family = (function () {
        return v;
        }).hide();
                w.type = i;
        }
        }
        if (w == null) {
        return null;
        }
        w.extend(this);
                w.$constructor = k;
                w.prototype.$constructor = w;
                return w;
        };
        var p = Object.prototype.toString;
        k.isEnumerable = function (i) {
        return (i != null && typeof i.length == "number" && p.call(i) != "[object Function]");
        };
        var b = {};
        var d = function (i) {
        var v = e(i.prototype);
                return b[v] || (b[v] = []);
        };
        var h = function (w, A) {
        if (A && A.$hidden) {
        return;
        }
        var v = d(this);
                for (var x = 0; x < v.length; x++) {
        var z = v[x];
                if (e(z) == "type") {
        h.call(z, w, A);
        }
        else {
        z.call(this, w, A);
        }
        }
        var y = this.prototype[w];
                if (y == null || !y.$protected) {
        this.prototype[w] = A;
        }
        if (this[w] == null && e(A) == "function") {
        t.call(this, w, function (i) {
        return A.apply(i, o.call(arguments, 1));
        });
        }
        };
        var t = function (i, w) {
        if (w && w.$hidden) {
        return;
        }
        var v = this[i];
                if (v == null || !v.$protected) {
        this[i] = w;
        }
        };
        k.implement({ implement: h.overloadSetter(), extend: t.overloadSetter(), alias: function (i, v) {
        h.call(this, i, this.prototype[v]);
        }.overloadSetter(), mirror: function (i) {
        d(this).push(i);
                return this;
        } });
        new k("Type", k);
        var c = function (v, A, y) {
        var x = (A != Object), E = A.prototype;
                if (x) {
        A = new k(v, A);
        }
        for (var B = 0, z = y.length; B < z; B++) {
        var F = y[B], D = A[F], C = E[F];
                if (D) {
        D.protect();
        }
        if (x && C) {
        A.implement(F, C.protect());
        }
        }
        if (x) {
        var w = E.propertyIsEnumerable(y[0]);
                A.forEachMethod = function (J) {
                if (!w) {
                for (var I = 0, G = y.length; I < G; I++) {
                J.call(E, E[y[I]], y[I]);
                }
                }
                for (var H in E) {
                J.call(E, E[H], H);
                }
                };
        }
        return c;
        };
        c("String", String, ["charAt", "charCodeAt", "concat", "indexOf", "lastIndexOf", "match", "quote", "replace", "search", "slice", "split", "substr", "substring", "trim", "toLowerCase", "toUpperCase"])("Array", Array, ["pop", "push", "reverse", "shift", "sort", "splice", "unshift", "concat", "join", "slice", "indexOf", "lastIndexOf", "filter", "forEach", "every", "map", "some", "reduce", "reduceRight"])("Number", Number, ["toExponential", "toFixed", "toLocaleString", "toPrecision"])("Function", f, ["apply", "call", "bind"])("RegExp", RegExp, ["exec", "test"])("Object", Object, ["create", "defineProperty", "defineProperties", "keys", "getPrototypeOf", "getOwnPropertyDescriptor", "getOwnPropertyNames", "preventExtensions", "isExtensible", "seal", "isSealed", "freeze", "isFrozen"])("Date", Date, ["now"]);
        Object.extend = t.overloadSetter();
        Date.extend("now", function () {
        return + (new Date);
        });
        new k("Boolean", Boolean);
        Number.prototype.$family = function () {
        return isFinite(this) ? "number" : "null";
        }.hide();
        Number.extend("random", function (v, i) {
        return Math.floor(Math.random() * (i - v + 1) + v);
        });
        var l = Object.prototype.hasOwnProperty;
        Object.extend("forEach", function (i, w, x) {
        for (var v in i) {
        if (l.call(i, v)) {
        w.call(x, i[v], v, i);
        }
        }
        });
        Object.each = Object.forEach;
        Array.implement({ forEach: function (x, y) {
        for (var w = 0, v = this.length; w < v; w++) {
        if (w in this) {
        x.call(y, this[w], w, this);
        }
        }
        }, each: function (i, v) {
        Array.forEach(this, i, v);
                return this;
        } });
        var s = function (i) {
        switch (e(i)) {
        case "array": return i.clone();
                case "object": return Object.clone(i);
                default: return i;
        }
        };
        Array.implement("clone", function () {
        var v = this.length, w = new Array(v);
                while (v--) {
        w[v] = s(this[v]);
        }
        return w;
        });
        var a = function (v, i, w) {
        switch (e(w)) {
        case "object":
                if (e(v[i]) == "object") {
        Object.merge(v[i], w);
        }
        else {
        v[i] = Object.clone(w);
        }
        break;
                case "array":
                v[i] = w.clone();
                break;
                default: v[i] = w;
        }
        return v;
        };
        Object.extend({ merge: function (C, y, x) {
        if (e(y) == "string") {
        return a(C, y, x);
        }
        for (var B = 1, w = arguments.length; B < w; B++) {
        var z = arguments[B];
                for (var A in z) {
        a(C, A, z[A]);
        }
        }
        return C;
        }, clone: function (i) {
        var w = {};
                for (var v in i) {
        w[v] = s(i[v]);
        }
        return w;
        }, append: function (z) {
        for (var y = 1, w = arguments.length; y < w; y++) {
        var v = arguments[y] || {};
                for (var x in v) {
        z[x] = v[x];
        }
        }
        return z;
        } });
        ["Object", "WhiteSpace", "TextNode", "Collection", "Arguments"].each(function (i) {
new k(i);
});
        var j = Date.now();
        String.extend("uniqueID", function () {
        return (j++).toString(36);
        });
        var g = this.Hash = new k("Hash", function (i) {
        if (e(i) == "hash") {
        i = Object.clone(i.getClean());
        }
        for (var v in i) {
        this[v] = i[v];
        }
        return this;
        });
        g.implement({ forEach: function (i, v) {
        Object.forEach(this, i, v);
        }, getClean: function () {
        var v = {};
                for (var i in this) {
        if (this.hasOwnProperty(i)) {
        v[i] = this[i];
        }
        }
        return v;
        }, getLength: function () {
        var v = 0;
                for (var i in this) {
        if (this.hasOwnProperty(i)) {
        v++;
        }
        }
        return v;
        } });
        g.alias("each", "forEach");
        Object.type = k.isObject;
        var n = this.Native = function (i) {
        return new k(i.name, i.initialize);
        };
        n.type = k.type;
        n.implement = function (x, v) {
        for (var w = 0; w < x.length; w++) {
        x[w].implement(v);
        }
        return n;
        };
        var m = Array.type;
        Array.type = function (i) {
        return u(i, Array) || m(i);
        };
        this.$A = function (i) {
        return Array.from(i).slice();
        };
        this.$arguments = function (v) {
        return function () {
        return arguments[v];
        };
        };
        this.$chk = function (i) {
        return !!(i || i === 0);
        };
        this.$clear = function (i) {
        clearTimeout(i);
                clearInterval(i);
                return null;
        };
        this.$defined = function (i) {
        return (i != null);
        };
        this.$each = function (w, v, x) {
        var i = e(w);
                ((i == "arguments" || i == "collection" || i == "array" || i == "elements") ? Array : Object).each(w, v, x);
        };
        this.$empty = function () {
        };
        this.$extend = function (v, i) {
        return Object.append(v, i);
        };
        this.$H = function (i) {
        return new g(i);
        };
        this.$merge = function () {
        var i = Array.slice(arguments);
                i.unshift({});
                return Object.merge.apply(null, i);
        };
        this.$lambda = f.from;
        this.$mixin = Object.merge;
        this.$random = Number.random;
        this.$splat = Array.from;
        this.$time = Date.now;
        this.$type = function (i) {
        var v = e(i);
                if (v == "elements") {
        return "array";
        }
        return (v == "null") ? false : v;
        };
        this.$unlink = function (i) {
        switch (e(i)) {
        case "object": return Object.clone(i);
                case "array": return Array.clone(i);
                case "hash": return new g(i);
                default: return i;
        }
        };
        })();
        Array.implement({ every: function (c, d) {
        for (var b = 0, a = this.length >>> 0; b < a; b++) {
        if ((b in this) && !c.call(d, this[b], b, this)) {
        return false;
        }
        }
        return true;
                }, filter: function (d, f) {
        var c = [];
                for (var e, b = 0, a = this.length >>> 0; b < a; b++) {
        if (b in this) {
        e = this[b];
                if (d.call(f, e, b, this)) {
        c.push(e);
        }
        }
        }
        return c;
                }, indexOf: function (c, d) {
        var b = this.length >>> 0;
                for (var a = (d < 0) ? Math.max(0, b + d) : d || 0; a < b; a++) {
        if (this[a] === c) {
        return a;
        }
        }
        return - 1;
                }, map: function (c, e) {
        var d = this.length >>> 0, b = Array(d);
                for (var a = 0; a < d; a++) {
        if (a in this) {
        b[a] = c.call(e, this[a], a, this);
        }
        }
        return b;
                }, some: function (c, d) {
        for (var b = 0, a = this.length >>> 0; b < a; b++) {
        if ((b in this) && c.call(d, this[b], b, this)) {
        return true;
        }
        }
        return false;
                }, clean: function () {
        return this.filter(function (a) {
        return a != null;
        });
                }, invoke: function (a) {
        var b = Array.slice(arguments, 1);
                return this.map(function (c) {
                return c[a].apply(c, b);
                });
                }, associate: function (c) {
        var d = {}, b = Math.min(this.length, c.length);
                for (var a = 0; a < b; a++) {
        d[c[a]] = this[a];
        }
        return d;
                }, link: function (c) {
        var a = {};
                for (var e = 0, b = this.length; e < b; e++) {
        for (var d in c) {
        if (c[d](this[e])) {
        a[d] = this[e];
                delete c[d];
                break;
        }
        }
        }
        return a;
                }, contains: function (a, b) {
        return this.indexOf(a, b) != - 1;
                }, append: function (a) {
        this.push.apply(this, a);
                return this;
                }, getLast: function () {
        return (this.length) ? this[this.length - 1] : null;
                }, getRandom: function () {
        return (this.length) ? this[Number.random(0, this.length - 1)] : null;
                }, include: function (a) {
        if (!this.contains(a)) {
        this.push(a);
        }
        return this;
                }, combine: function (c) {
        for (var b = 0, a = c.length; b < a; b++) {
        this.include(c[b]);
        }
        return this;
                }, erase: function (b) {
        for (var a = this.length; a--; ) {
        if (this[a] === b) {
        this.splice(a, 1);
        }
        }
        return this;
                }, empty: function () {
        this.length = 0;
                return this;
                }, flatten: function () {
        var d = [];
                for (var b = 0, a = this.length; b < a; b++) {
        var c = typeOf(this[b]);
                if (c == "null") {
        continue;
        }
        d = d.concat((c == "array" || c == "collection" || c == "arguments" || instanceOf(this[b], Array)) ? Array.flatten(this[b]) : this[b]);
        }
        return d;
                }, pick: function () {
        for (var b = 0, a = this.length; b < a; b++) {
        if (this[b] != null) {
        return this[b];
        }
        }
        return null;
                }, hexToRgb: function (b) {
        if (this.length != 3) {
        return null;
        }
        var a = this.map(function (c) {
        if (c.length == 1) {
        c += c;
        }
        return c.toInt(16);
        });
                return (b) ? a : "rgb(" + a + ")";
                }, rgbToHex: function (d) {
        if (this.length < 3) {
        return null;
        }
        if (this.length == 4 && this[3] == 0 && !d) {
        return "transparent";
        }
        var b = [];
                for (var a = 0; a < 3; a++) {
        var c = (this[a] - 0).toString(16);
                b.push((c.length == 1) ? "0" + c : c);
        }
        return (d) ? b : "#" + b.join("");
                } });
        Array.alias("extend", "append");
        var $pick = function () {
        return Array.from(arguments).pick();
                };
        String.implement({ test: function (a, b) {
        return ((typeOf(a) == "regexp") ? a : new RegExp("" + a, b)).test(this);
                }, contains: function (a, b) {
        return (b) ? (b + this + b).indexOf(b + a + b) > - 1 : String(this).indexOf(a) > - 1;
                }, trim: function () {
        return String(this).replace(/^\s+|\s+$/g, "");
                }, clean: function () {
        return String(this).replace(/\s+/g, " ").trim();
                }, camelCase: function () {
        return String(this).replace(/-\D/g, function (a) {
        return a.charAt(1).toUpperCase();
        });
                }, hyphenate: function () {
        return String(this).replace(/[A-Z]/g, function (a) {
        return ("-" + a.charAt(0).toLowerCase());
        });
                }, capitalize: function () {
        return String(this).replace(/\b[a-z]/g, function (a) {
        return a.toUpperCase();
        });
                }, escapeRegExp: function () {
        return String(this).replace(/([-.*+?^${}()|[\]\/\\])/g, "\\$1");
                }, toInt: function (a) {
        return parseInt(this, a || 10);
                }, toFloat: function () {
        return parseFloat(this);
                }, hexToRgb: function (b) {
        var a = String(this).match(/^#?(\w{1,2})(\w{1,2})(\w{1,2})$/);
                return (a) ? a.slice(1).hexToRgb(b) : null;
                }, rgbToHex: function (b) {
        var a = String(this).match(/\d{1,3}/g);
                return (a) ? a.rgbToHex(b) : null;
                }, substitute: function (a, b) {
        return String(this).replace(b || (/\\?\{([^{}]+)\}/g), function (d, c) {
        if (d.charAt(0) == "\\") {
        return d.slice(1);
        }
        return (a[c] != null) ? a[c] : "";
        });
                } });
        Number.implement({ limit: function (b, a) {
        return Math.min(a, Math.max(b, this));
                }, round: function (a) {
        a = Math.pow(10, a || 0).toFixed(a < 0 ? - a : 0);
                return Math.round(this * a) / a;
                }, times: function (b, c) {
        for (var a = 0; a < this; a++) {
        b.call(c, a, this);
        }
        }, toFloat: function () {
        return parseFloat(this);
                }, toInt: function (a) {
        return parseInt(this, a || 10);
                } });
        Number.alias("each", "times");
        (function (b) {
        var a = {};
                b.each(function (c) {
                if (!Number[c]) {
                a[c] = function () {
                return Math[c].apply(null, [this].concat(Array.from(arguments)));
                };
                }
                });
                Number.implement(a);
                })(["abs", "acos", "asin", "atan", "atan2", "ceil", "cos", "exp", "floor", "log", "max", "min", "pow", "sin", "sqrt", "tan"]);
        Function.extend({ attempt: function () {
        for (var b = 0, a = arguments.length; b < a; b++) {
        try {
        return arguments[b]();
        }
        catch (c) {
        }
        }
        return null;
                } });
        Function.implement({ attempt: function (a, c) {
        try {
        return this.apply(c, Array.from(a));
        }
        catch (b) {
        }
        return null;
                }, bind: function (e) {
        var a = this, b = arguments.length > 1 ? Array.slice(arguments, 1) : null, d = function () {
        };
                var c = function () {
                var g = e, h = arguments.length;
                        if (this instanceof c) {
                d.prototype = a.prototype;
                        g = new d;
                }
                var f = (!b && !h) ? a.call(g) : a.apply(g, b && h ? b.concat(Array.slice(arguments)) : b || arguments);
                        return g == e ? f : g;
                };
                return c;
                }, pass: function (b, c) {
        var a = this;
                if (b != null) {
        b = Array.from(b);
        }
        return function () {
        return a.apply(c, b || arguments);
        };
                }, delay: function (b, c, a) {
        return setTimeout(this.pass((a == null ? [] : a), c), b);
                }, periodical: function (c, b, a) {
        return setInterval(this.pass((a == null ? [] : a), b), c);
                } });
        delete Function.prototype.bind;
        Function.implement({ create: function (b) {
        var a = this;
                b = b || {};
                return function (d) {
                var c = b.arguments;
                        c = (c != null) ? Array.from(c) : Array.slice(arguments, (b.event) ? 1 : 0);
                        if (b.event) {
                c = [d || window.event].extend(c);
                }
                var e = function () {
                return a.apply(b.bind || null, c);
                };
                        if (b.delay) {
                return setTimeout(e, b.delay);
                }
                if (b.periodical) {
                return setInterval(e, b.periodical);
                }
                if (b.attempt) {
                return Function.attempt(e);
                }
                return e();
                };
                }, bind: function (c, b) {
        var a = this;
                if (b != null) {
        b = Array.from(b);
        }
        return function () {
        return a.apply(c, b || arguments);
        };
                }, bindWithEvent: function (c, b) {
        var a = this;
                if (b != null) {
        b = Array.from(b);
        }
        return function (d) {
        return a.apply(c, (b == null) ? arguments : [d].concat(b));
        };
                }, run: function (a, b) {
        return this.apply(b, Array.from(a));
                } });
        if (Object.create == Function.prototype.create) {
Object.create = null;
        }
var $try = Function.attempt;
        (function () {
        var a = Object.prototype.hasOwnProperty;
                Object.extend({ subset: function (d, g) {
                var f = {};
                        for (var e = 0, b = g.length; e < b; e++) {
                var c = g[e];
                        if (c in d) {
                f[c] = d[c];
                }
                }
                return f;
                }, map: function (b, e, f) {
                var d = {};
                        for (var c in b) {
                if (a.call(b, c)) {
                d[c] = e.call(f, b[c], c, b);
                }
                }
                return d;
                }, filter: function (b, e, g) {
                var d = {};
                        for (var c in b) {
                var f = b[c];
                        if (a.call(b, c) && e.call(g, f, c, b)) {
                d[c] = f;
                }
                }
                return d;
                }, every: function (b, d, e) {
                for (var c in b) {
                if (a.call(b, c) && !d.call(e, b[c], c)) {
                return false;
                }
                }
                return true;
                }, some: function (b, d, e) {
                for (var c in b) {
                if (a.call(b, c) && d.call(e, b[c], c)) {
                return true;
                }
                }
                return false;
                }, keys: function (b) {
                var d = [];
                        for (var c in b) {
                if (a.call(b, c)) {
                d.push(c);
                }
                }
                return d;
                }, values: function (c) {
                var b = [];
                        for (var d in c) {
                if (a.call(c, d)) {
                b.push(c[d]);
                }
                }
                return b;
                }, getLength: function (b) {
                return Object.keys(b).length;
                }, keyOf: function (b, d) {
                for (var c in b) {
                if (a.call(b, c) && b[c] === d) {
                return c;
                }
                }
                return null;
                }, contains: function (b, c) {
                return Object.keyOf(b, c) != null;
                }, toQueryString: function (b, c) {
                var d = [];
                        Object.each(b, function (h, g) {
                        if (c) {
                        g = c + "[" + g + "]";
                        }
                        var f;
                                switch (typeOf(h)) {
                        case "object":
                                f = Object.toQueryString(h, g);
                                break;
                                case "array":
                                var e = {};
                                h.each(function (k, j) {
                                e[j] = k;
                                });
                                f = Object.toQueryString(e, g);
                                break;
                                default: f = g + "=" + encodeURIComponent(h);
                        }
                        if (h != null) {
                        d.push(f);
                        }
                        });
                        return d.join("&");
                } });
                })();
        Hash.implement({ has: Object.prototype.hasOwnProperty, keyOf: function (a) {
        return Object.keyOf(this, a);
                }, hasValue: function (a) {
        return Object.contains(this, a);
                }, extend: function (a) {
        Hash.each(a || {}, function (c, b) {
        Hash.set(this, b, c);
        }, this);
                return this;
                }, combine: function (a) {
        Hash.each(a || {}, function (c, b) {
        Hash.include(this, b, c);
        }, this);
                return this;
                }, erase: function (a) {
        if (this.hasOwnProperty(a)) {
        delete this[a];
        }
        return this;
                }, get: function (a) {
        return (this.hasOwnProperty(a)) ? this[a] : null;
                }, set: function (a, b) {
        if (!this[a] || this.hasOwnProperty(a)) {
        this[a] = b;
        }
        return this;
                }, empty: function () {
        Hash.each(this, function (b, a) {
        delete this[a];
        }, this);
                return this;
                }, include: function (a, b) {
        if (this[a] == null) {
        this[a] = b;
        }
        return this;
                }, map: function (a, b) {
        return new Hash(Object.map(this, a, b));
                }, filter: function (a, b) {
        return new Hash(Object.filter(this, a, b));
                }, every: function (a, b) {
        return Object.every(this, a, b);
                }, some: function (a, b) {
        return Object.some(this, a, b);
                }, getKeys: function () {
        return Object.keys(this);
                }, getValues: function () {
        return Object.values(this);
                }, toQueryString: function (a) {
        return Object.toQueryString(this, a);
                } });
        Hash.extend = Object.append;
        Hash.alias({ indexOf: "keyOf", contains: "hasValue" });
        (function () {
        var k = this.document;
                var h = k.window = this;
                var a = navigator.userAgent.toLowerCase(), b = navigator.platform.toLowerCase(), i = a.match(/(opera|ie|firefox|chrome|version)[\s\/:]([\w\d\.]+)?.*?(safari|version[\s\/:]([\w\d\.]+)|$)/) || [null, "unknown", 0], f = i[1] == "ie" && k.documentMode;
                var o = this.Browser = { extend: Function.prototype.extend, name: (i[1] == "version") ? i[3] : i[1], version: f || parseFloat((i[1] == "opera" && i[4]) ? i[4] : i[2]), Platform: { name: a.match(/ip(?:ad|od|hone)/) ? "ios" : (a.match(/(?:webos|android)/) || b.match(/mac|win|linux/) || ["other"])[0] }, Features: { xpath: !!(k.evaluate), air: !!(h.runtime), query: !!(k.querySelector), json: !!(h.JSON) }, Plugins: {} };
                o[o.name] = true;
                o[o.name + parseInt(o.version, 10)] = true;
                o.Platform[o.Platform.name] = true;
                o.Request = (function () {
                var q = function () {
                return new XMLHttpRequest();
                };
                        var p = function () {
                        return new ActiveXObject("MSXML2.XMLHTTP");
                        };
                        var e = function () {
                        return new ActiveXObject("Microsoft.XMLHTTP");
                        };
                        return Function.attempt(function () {
                        q();
                                return q;
                        }, function () {
                        p();
                                return p;
                        }, function () {
                        e();
                                return e;
                        });
                })();
                o.Features.xhr = !!(o.Request);
                var j = (Function.attempt(function () {
                return navigator.plugins["Shockwave Flash"].description;
                }, function () {
                return new ActiveXObject("ShockwaveFlash.ShockwaveFlash").GetVariable("$version");
                }) || "0 r0").match(/\d+/g);
                o.Plugins.Flash = { version: Number(j[0] || "0." + j[1]) || 0, build: Number(j[2]) || 0 };
                o.exec = function (p) {
                if (!p) {
                return p;
                }
                if (h.execScript) {
                h.execScript(p);
                }
                else {
                var e = k.createElement("script");
                        e.setAttribute("type", "text/javascript");
                        e.text = p;
                        k.head.appendChild(e);
                        k.head.removeChild(e);
                }
                return p;
                };
                String.implement("stripScripts", function (p) {
                var e = "";
                        var q = this.replace(/<script[^>]*>([\s\S]*?)<\/script>/gi, function (r, s) {
                        e += s + "\n";
                                return "";
                        });
                        if (p === true) {
                o.exec(e);
                }
                else {
                if (typeOf(p) == "function") {
                p(e, q);
                }
                }
                return q;
                });
                o.extend({ Document: this.Document, Window: this.Window, Element: this.Element, Event: this.Event });
                this.Window = this.$constructor = new Type("Window", function () {
                });
                this.$family = Function.from("window").hide();
                Window.mirror(function (e, p) {
                h[e] = p;
                });
                this.Document = k.$constructor = new Type("Document", function () {
                });
                k.$family = Function.from("document").hide();
                Document.mirror(function (e, p) {
                k[e] = p;
                });
                k.html = k.documentElement;
                if (!k.head) {
        k.head = k.getElementsByTagName("head")[0];
        }
        if (k.execCommand) {
        try {
        k.execCommand("BackgroundImageCache", false, true);
        }
        catch (g) {
        }
        }
        if (this.attachEvent && !this.addEventListener) {
        var c = function () {
        this.detachEvent("onunload", c);
                k.head = k.html = k.window = null;
        };
                this.attachEvent("onunload", c);
        }
        var m = Array.from;
                try {
                m(k.html.childNodes);
                }
        catch (g) {
        Array.from = function (p) {
        if (typeof p != "string" && Type.isEnumerable(p) && typeOf(p) != "array") {
        var e = p.length, q = new Array(e);
                while (e--) {
        q[e] = p[e];
        }
        return q;
        }
        return m(p);
        };
                var l = Array.prototype, n = l.slice;
                ["pop", "push", "reverse", "shift", "sort", "splice", "unshift", "concat", "join", "slice"].each(function (e) {
        var p = l[e];
                Array[e] = function (q) {
        return p.apply(Array.from(q), n.call(arguments, 1));
        };
        });
        }
        if (o.Platform.ios) {
        o.Platform.ipod = true;
        }
        o.Engine = {};
                var d = function (p, e) {
                o.Engine.name = p;
                        o.Engine[p + e] = true;
                        o.Engine.version = e;
                };
                if (o.ie) {
        o.Engine.trident = true;
                switch (o.version) {
        case 6:
                d("trident", 4);
                break;
                case 7:
                d("trident", 5);
                break;
                case 8: d("trident", 6);
        }
        }
        if (o.firefox) {
        o.Engine.gecko = true;
                if (o.version >= 3) {
        d("gecko", 19);
        }
        else {
        d("gecko", 18);
        }
        }
        if (o.safari || o.chrome) {
        o.Engine.webkit = true;
                switch (o.version) {
        case 2:
                d("webkit", 419);
                break;
                case 3:
                d("webkit", 420);
                break;
                case 4: d("webkit", 525);
        }
        }
        if (o.opera) {
        o.Engine.presto = true;
                if (o.version >= 9.6) {
        d("presto", 960);
        }
        else {
        if (o.version >= 9.5) {
        d("presto", 950);
        }
        else {
        d("presto", 925);
        }
        }
        }
        if (o.name == "unknown") {
        switch ((a.match(/(?:webkit|khtml|gecko)/) || [])[0]) {
        case "webkit":
                case "khtml":
                o.Engine.webkit = true;
                break;
                case "gecko": o.Engine.gecko = true;
        }
        }
        this.$exec = o.exec;
                })();
        (function () {
        var b = {};
                var a = this.DOMEvent = new Type("DOMEvent", function (c, g) {
                if (!g) {
                g = window;
                }
                c = c || g.event;
                        if (c.$extended) {
                return c;
                }
                this.event = c;
                        this.$extended = true;
                        this.shift = c.shiftKey;
                        this.control = c.ctrlKey;
                        this.alt = c.altKey;
                        this.meta = c.metaKey;
                        var i = this.type = c.type;
                        var h = c.target || c.srcElement;
                        while (h && h.nodeType == 3) {
                h = h.parentNode;
                }
                this.target = document.id(h);
                        if (i.indexOf("key") == 0) {
                var d = this.code = (c.which || c.keyCode);
                        this.key = b[d] || Object.keyOf(Event.Keys, d);
                        if (i == "keydown") {
                if (d > 111 && d < 124) {
                this.key = "f" + (d - 111);
                }
                else {
                if (d > 95 && d < 106) {
                this.key = d - 96;
                }
                }
                }
                if (this.key == null) {
                this.key = String.fromCharCode(d).toLowerCase();
                }
                }
                else {
                if (i == "click" || i == "dblclick" || i == "contextmenu" || i == "DOMMouseScroll" || i.indexOf("mouse") == 0) {
                var j = g.document;
                        j = (!j.compatMode || j.compatMode == "CSS1Compat") ? j.html : j.body;
                        this.page = { x: (c.pageX != null) ? c.pageX : c.clientX + j.scrollLeft, y: (c.pageY != null) ? c.pageY : c.clientY + j.scrollTop };
                        this.client = { x: (c.pageX != null) ? c.pageX - g.pageXOffset : c.clientX, y: (c.pageY != null) ? c.pageY - g.pageYOffset : c.clientY };
                        if (i == "DOMMouseScroll" || i == "mousewheel") {
                this.wheel = (c.wheelDelta) ? c.wheelDelta / 120 : - (c.detail || 0) / 3;
                }
                this.rightClick = (c.which == 3 || c.button == 2);
                        if (i == "mouseover" || i == "mouseout") {
                var k = c.relatedTarget || c[(i == "mouseover" ? "from" : "to") + "Element"];
                        while (k && k.nodeType == 3) {
                k = k.parentNode;
                }
                this.relatedTarget = document.id(k);
                }
                }
                else {
                if (i.indexOf("touch") == 0 || i.indexOf("gesture") == 0) {
                this.rotation = c.rotation;
                        this.scale = c.scale;
                        this.targetTouches = c.targetTouches;
                        this.changedTouches = c.changedTouches;
                        var f = this.touches = c.touches;
                        if (f && f[0]) {
                var e = f[0];
                        this.page = { x: e.pageX, y: e.pageY };
                        this.client = { x: e.clientX, y: e.clientY };
                }
                }
                }
                }
                if (!this.client) {
                this.client = {};
                }
                if (!this.page) {
                this.page = {};
                }
                });
                a.implement({ stop: function () {
                return this.preventDefault().stopPropagation();
                }, stopPropagation: function () {
                if (this.event.stopPropagation) {
                this.event.stopPropagation();
                }
                else {
                this.event.cancelBubble = true;
                }
                return this;
                }, preventDefault: function () {
                if (this.event.preventDefault) {
                this.event.preventDefault();
                }
                else {
                this.event.returnValue = false;
                }
                return this;
                } });
                a.defineKey = function (d, c) {
                b[d] = c;
                        return this;
                };
                a.defineKeys = a.defineKey.overloadSetter(true);
                a.defineKeys({ "38": "up", "40": "down", "37": "left", "39": "right", "27": "esc", "32": "space", "8": "backspace", "9": "tab", "46": "delete", "13": "enter" });
                })();
        var Event = DOMEvent;
        Event.Keys = {};
        Event.Keys = new Hash(Event.Keys);
        (function () {
        var a = this.Class = new Type("Class", function (h) {
        if (instanceOf(h, Function)) {
        h = { initialize: h };
        }
        var g = function () {
        e(this);
                if (g.$prototyping) {
        return this;
        }
        this.$caller = null;
                var i = (this.initialize) ? this.initialize.apply(this, arguments) : this;
                this.$caller = this.caller = null;
                return i;
        }.extend(this).implement(h);
                g.$constructor = a;
                g.prototype.$constructor = g;
                g.prototype.parent = c;
                return g;
        });
                var c = function () {
                if (!this.$caller) {
                throw new Error('The method "parent" cannot be called.');
                }
                var g = this.$caller.$name, h = this.$caller.$owner.parent, i = (h) ? h.prototype[g] : null;
                        if (!i) {
                throw new Error('The method "' + g + '" has no parent.');
                }
                return i.apply(this, arguments);
                };
                var e = function (g) {
                for (var h in g) {
                var j = g[h];
                        switch (typeOf(j)) {
                case "object":
                        var i = function () {
                        };
                        i.prototype = j;
                        g[h] = e(new i);
                        break;
                        case "array":
                        g[h] = j.clone();
                        break;
                }
                }
                return g;
                };
                var b = function (g, h, j) {
                if (j.$origin) {
                j = j.$origin;
                }
                var i = function () {
                if (j.$protected && this.$caller == null) {
                throw new Error('The method "' + h + '" cannot be called.');
                }
                var l = this.caller, m = this.$caller;
                        this.caller = m;
                        this.$caller = i;
                        var k = j.apply(this, arguments);
                        this.$caller = m;
                        this.caller = l;
                        return k;
                }.extend({ $owner: g, $origin: j, $name: h });
                        return i;
                };
                var f = function (h, i, g) {
                if (a.Mutators.hasOwnProperty(h)) {
                i = a.Mutators[h].call(this, i);
                        if (i == null) {
                return this;
                }
                }
                if (typeOf(i) == "function") {
                if (i.$hidden) {
                return this;
                }
                this.prototype[h] = (g) ? i : b(this, h, i);
                }
                else {
                Object.merge(this.prototype, h, i);
                }
                return this;
                };
                var d = function (g) {
                g.$prototyping = true;
                        var h = new g;
                        delete g.$prototyping;
                        return h;
                };
                a.implement("implement", f.overloadSetter());
                a.Mutators = { Extends: function (g) {
                this.parent = g;
                        this.prototype = d(g);
                }, Implements: function (g) {
                Array.from(g).each(function (j) {
                var h = new j;
                        for (var i in h) {
                f.call(this, i, h[i], true);
                }
                }, this);
                } };
                })();
        (function () {
        this.Chain = new Class({ $chain: [], chain: function () {
        this.$chain.append(Array.flatten(arguments));
                return this;
        }, callChain: function () {
        return (this.$chain.length) ? this.$chain.shift().apply(this, arguments) : false;
        }, clearChain: function () {
        this.$chain.empty();
                return this;
        } });
                var a = function (b) {
                return b.replace(/^on([A-Z])/, function (c, d) {
                return d.toLowerCase();
                });
                };
                this.Events = new Class({ $events: {}, addEvent: function (d, c, b) {
                d = a(d);
                        if (c == $empty) {
                return this;
                }
                this.$events[d] = (this.$events[d] || []).include(c);
                        if (b) {
                c.internal = true;
                }
                return this;
                }, addEvents: function (b) {
                for (var c in b) {
                this.addEvent(c, b[c]);
                }
                return this;
                }, fireEvent: function (e, c, b) {
                e = a(e);
                        var d = this.$events[e];
                        if (!d) {
                return this;
                }
                c = Array.from(c);
                        d.each(function (f) {
                        if (b) {
                        f.delay(b, this, c);
                        }
                        else {
                        f.apply(this, c);
                        }
                        }, this);
                        return this;
                }, removeEvent: function (e, d) {
                e = a(e);
                        var c = this.$events[e];
                        if (c && !d.internal) {
                var b = c.indexOf(d);
                        if (b != - 1) {
                delete c[b];
                }
                }
                return this;
                }, removeEvents: function (d) {
                var e;
                        if (typeOf(d) == "object") {
                for (e in d) {
                this.removeEvent(e, d[e]);
                }
                return this;
                }
                if (d) {
                d = a(d);
                }
                for (e in this.$events) {
                if (d && d != e) {
                continue;
                }
                var c = this.$events[e];
                        for (var b = c.length; b--; ) {
                if (b in c) {
                this.removeEvent(e, c[b]);
                }
                }
                }
                return this;
                } });
                this.Options = new Class({ setOptions: function () {
                var b = this.options = Object.merge.apply(null, [{}, this.options].append(arguments));
                        if (this.addEvent) {
                for (var c in b) {
                if (typeOf(b[c]) != "function" || !(/^on[A-Z]/).test(c)) {
                continue;
                }
                this.addEvent(c, b[c]);
                        delete b[c];
                }
                }
                return this;
                } });
                })();
        (function () {
        var k, n, l, g, a = {}, c = {}, m = /\\/g;
                var e = function (q, p) {
                if (q == null) {
                return null;
                }
                if (q.Slick === true) {
                return q;
                }
                q = ("" + q).replace(/^\s+|\s+$/g, "");
                        g = !!p;
                        var o = (g) ? c : a;
                        if (o[q]) {
                return o[q];
                }
                k = { Slick: true, expressions: [], raw: q, reverse: function () {
                return e(this.raw, true);
                } };
                        n = - 1;
                        while (q != (q = q.replace(j, b))) {
                }
                k.length = k.expressions.length;
                        return o[k.raw] = (g) ? h(k) : k;
                };
                var i = function (o) {
                if (o === "!") {
                return " ";
                }
                else {
                if (o === " ") {
                return "!";
                }
                else {
                if ((/^!/).test(o)) {
                return o.replace(/^!/, "");
                }
                else {
                return "!" + o;
                }
                }
                }
                };
                var h = function (u) {
                var r = u.expressions;
                        for (var p = 0; p < r.length; p++) {
                var t = r[p];
                        var q = { parts: [], tag: "*", combinator: i(t[0].combinator) };
                        for (var o = 0; o < t.length; o++) {
                var s = t[o];
                        if (!s.reverseCombinator) {
                s.reverseCombinator = " ";
                }
                s.combinator = s.reverseCombinator;
                        delete s.reverseCombinator;
                }
                t.reverse().push(q);
                }
                return u;
                };
                var f = function (o) {
                return o.replace(/[-[\]{}()*+?.\\^$|,#\s]/g, function (p) {
                return "\\" + p;
                });
                };
                var j = new RegExp("^(?:\\s*(,)\\s*|\\s*(<combinator>+)\\s*|(\\s+)|(<unicode>+|\\*)|\\#(<unicode>+)|\\.(<unicode>+)|\\[\\s*(<unicode1>+)(?:\\s*([*^$!~|]?=)(?:\\s*(?:([\"']?)(.*?)\\9)))?\\s*\\](?!\\])|(:+)(<unicode>+)(?:\\((?:(?:([\"'])([^\\13]*)\\13)|((?:\\([^)]+\\)|[^()]*)+))\\))?)".replace(/<combinator>/, "[" + f(">+~`!@$%^&={}\\;</") + "]").replace(/<unicode>/g, "(?:[\\w\\u00a1-\\uFFFF-]|\\\\[^\\s0-9a-f])").replace(/<unicode1>/g, "(?:[:\\w\\u00a1-\\uFFFF-]|\\\\[^\\s0-9a-f])"));
                function b(x, s, D, z, r, C, q, B, A, y, u, F, G, v, p, w) {
                if (s || n === - 1) {
                k.expressions[++n] = [];
                        l = - 1;
                        if (s) {
                return "";
                }
                }
                if (D || z || l === - 1) {
                D = D || " ";
                        var t = k.expressions[n];
                        if (g && t[l]) {
                t[l].reverseCombinator = i(D);
                }
                t[++l] = { combinator: D, tag: "*" };
                }
                var o = k.expressions[n][l];
                        if (r) {
                o.tag = r.replace(m, "");
                }
                else {
                if (C) {
                o.id = C.replace(m, "");
                }
                else {
                if (q) {
                q = q.replace(m, "");
                        if (!o.classList) {
                o.classList = [];
                }
                if (!o.classes) {
                o.classes = [];
                }
                o.classList.push(q);
                        o.classes.push({ value: q, regexp: new RegExp("(^|\\s)" + f(q) + "(\\s|$)") });
                }
                else {
                if (G) {
                w = w || p;
                        w = w ? w.replace(m, "") : null;
                        if (!o.pseudos) {
                o.pseudos = [];
                }
                o.pseudos.push({ key: G.replace(m, ""), value: w, type: F.length == 1 ? "class" : "element" });
                }
                else {
                if (B) {
                B = B.replace(m, "");
                        u = (u || "").replace(m, "");
                        var E, H;
                        switch (A) {
                case "^=":
                        H = new RegExp("^" + f(u));
                        break;
                        case "$=":
                        H = new RegExp(f(u) + "$");
                        break;
                        case "~=":
                        H = new RegExp("(^|\\s)" + f(u) + "(\\s|$)");
                        break;
                        case "|=":
                        H = new RegExp("^" + f(u) + "(-|$)");
                        break;
                        case "=":
                        E = function (I) {
                        return u == I;
                        };
                        break;
                        case "*=":
                        E = function (I) {
                        return I && I.indexOf(u) > - 1;
                        };
                        break;
                        case "!=":
                        E = function (I) {
                        return u != I;
                        };
                        break;
                        default: E = function (I) {
                        return !!I;
                        };
                }
                if (u == "" && (/^[*$^]=$/).test(A)) {
                E = function () {
                return false;
                };
                }
                if (!E) {
                E = function (I) {
                return I && H.test(I);
                };
                }
                if (!o.attributes) {
                o.attributes = [];
                }
                o.attributes.push({ key: B, operator: A, value: u, test: E });
                }
                }
                }
                }
                }
                return "";
                }
        var d = (this.Slick || {});
                d.parse = function (o) {
                return e(o);
                };
                d.escapeRegExp = f;
                if (!this.Slick) {
        this.Slick = d;
        }
        }).apply((typeof exports != "undefined") ? exports : this);
        (function () {
        var k = {}, m = {}, d = Object.prototype.toString;
                k.isNativeCode = function (c) {
                return (/\{\s*\[native code\]\s*\}/).test("" + c);
                };
                k.isXML = function (c) {
                return (!!c.xmlVersion) || (!!c.xml) || (d.call(c) == "[object XMLDocument]") || (c.nodeType == 9 && c.documentElement.nodeName != "HTML");
                };
                k.setDocument = function (w) {
                var p = w.nodeType;
                        if (p == 9) {
                }
                else {
                if (p) {
                w = w.ownerDocument;
                }
                else {
                if (w.navigator) {
                w = w.document;
                }
                else {
                return;
                }
                }
                }
                if (this.document === w) {
                return;
                }
                this.document = w;
                        var A = w.documentElement, o = this.getUIDXML(A), s = m[o], r;
                        if (s) {
                for (r in s) {
                this[r] = s[r];
                }
                return;
                }
                s = m[o] = {};
                        s.root = A;
                        s.isXMLDocument = this.isXML(w);
                        s.brokenStarGEBTN = s.starSelectsClosedQSA = s.idGetsName = s.brokenMixedCaseQSA = s.brokenGEBCN = s.brokenCheckedQSA = s.brokenEmptyAttributeQSA = s.isHTMLDocument = s.nativeMatchesSelector = false;
                        var q, u, y, z, t;
                        var x, v = "slick_uniqueid";
                        var c = w.createElement("div");
                        var n = w.body || w.getElementsByTagName("body")[0] || A;
                        n.appendChild(c);
                        try {
                        c.innerHTML = '<a id="' + v + '"></a>';
                                s.isHTMLDocument = !!w.getElementById(v);
                        }
                catch (C) {
                }
                if (s.isHTMLDocument) {
                c.style.display = "none";
                        c.appendChild(w.createComment(""));
                        u = (c.getElementsByTagName("*").length > 1);
                        try {
                        c.innerHTML = "foo</foo>";
                                x = c.getElementsByTagName("*");
                                q = (x && !!x.length && x[0].nodeName.charAt(0) == "/");
                        }
                catch (C) {
                }
                s.brokenStarGEBTN = u || q;
                        try {
                        c.innerHTML = '<a name="' + v + '"></a><b id="' + v + '"></b>';
                                s.idGetsName = w.getElementById(v) === c.firstChild;
                        }
                catch (C) {
                }
                if (c.getElementsByClassName) {
                try {
                c.innerHTML = '<a class="f"></a><a class="b"></a>';
                        c.getElementsByClassName("b").length;
                        c.firstChild.className = "b";
                        z = (c.getElementsByClassName("b").length != 2);
                }
                catch (C) {
                }
                try {
                c.innerHTML = '<a class="a"></a><a class="f b a"></a>';
                        y = (c.getElementsByClassName("a").length != 2);
                }
                catch (C) {
                }
                s.brokenGEBCN = z || y;
                }
                if (c.querySelectorAll) {
                try {
                c.innerHTML = "foo</foo>";
                        x = c.querySelectorAll("*");
                        s.starSelectsClosedQSA = (x && !!x.length && x[0].nodeName.charAt(0) == "/");
                }
                catch (C) {
                }
                try {
                c.innerHTML = '<a class="MiX"></a>';
                        s.brokenMixedCaseQSA = !c.querySelectorAll(".MiX").length;
                }
                catch (C) {
                }
                try {
                c.innerHTML = '<select><option selected="selected">a</option></select>';
                        s.brokenCheckedQSA = (c.querySelectorAll(":checked").length == 0);
                }
                catch (C) {
                }
                try {
                c.innerHTML = '<a class=""></a>';
                        s.brokenEmptyAttributeQSA = (c.querySelectorAll('[class*=""]').length != 0);
                }
                catch (C) {
                }
                }
                try {
                c.innerHTML = '<form action="s"><input id="action"/></form>';
                        t = (c.firstChild.getAttribute("action") != "s");
                }
                catch (C) {
                }
                s.nativeMatchesSelector = A.matchesSelector || A.mozMatchesSelector || A.webkitMatchesSelector;
                        if (s.nativeMatchesSelector) {
                try {
                s.nativeMatchesSelector.call(A, ":slick");
                        s.nativeMatchesSelector = null;
                }
                catch (C) {
                }
                }
                }
                try {
                A.slick_expando = 1;
                        delete A.slick_expando;
                        s.getUID = this.getUIDHTML;
                }
                catch (C) {
                s.getUID = this.getUIDXML;
                }
                n.removeChild(c);
                        c = x = n = null;
                        s.getAttribute = (s.isHTMLDocument && t) ? function (G, E) {
                var H = this.attributeGetters[E];
                        if (H) {
                return H.call(G);
                }
                var F = G.getAttributeNode(E);
                        return (F) ? F.nodeValue : null;
                } : function (F, E) {
                var G = this.attributeGetters[E];
                        return (G) ? G.call(F) : F.getAttribute(E);
                };
                        s.hasAttribute = (A && this.isNativeCode(A.hasAttribute)) ? function (F, E) {
                return F.hasAttribute(E);
                } : function (F, E) {
                F = F.getAttributeNode(E);
                        return !!(F && (F.specified || F.nodeValue));
                };
                        var D = A && this.isNativeCode(A.contains), B = w && this.isNativeCode(w.contains);
                        s.contains = (D && B) ? function (E, F) {
                return E.contains(F);
                } : (D && !B) ? function (E, F) {
                return E === F || ((E === w) ? w.documentElement : E).contains(F);
                } : (A && A.compareDocumentPosition) ? function (E, F) {
                return E === F || !!(E.compareDocumentPosition(F) & 16);
                } : function (E, F) {
                if (F) {
                do {
                if (F === E) {
                return true;
                }
                } while ((F = F.parentNode));
                }
                return false;
                };
                        s.documentSorter = (A.compareDocumentPosition) ? function (F, E) {
                if (!F.compareDocumentPosition || !E.compareDocumentPosition) {
                return 0;
                }
                return F.compareDocumentPosition(E) & 4 ? - 1 : F === E ? 0 : 1;
                } : ("sourceIndex" in A) ? function (F, E) {
                if (!F.sourceIndex || !E.sourceIndex) {
                return 0;
                }
                return F.sourceIndex - E.sourceIndex;
                } : (w.createRange) ? function (H, F) {
                if (!H.ownerDocument || !F.ownerDocument) {
                return 0;
                }
                var G = H.ownerDocument.createRange(), E = F.ownerDocument.createRange();
                        G.setStart(H, 0);
                        G.setEnd(H, 0);
                        E.setStart(F, 0);
                        E.setEnd(F, 0);
                        return G.compareBoundaryPoints(Range.START_TO_END, E);
                } : null;
                        A = null;
                        for (r in s) {
                this[r] = s[r];
                }
                };
                var f = /^([#.]?)((?:[\w-]+|\*))$/, h = /\[.+[*$^]=(?:""|'')?\]/, g = {};
                k.search = function (U, z, H, s) {
                var p = this.found = (s) ? null : (H || []);
                        if (!U) {
                return p;
                }
                else {
                if (U.navigator) {
                U = U.document;
                }
                else {
                if (!U.nodeType) {
                return p;
                }
                }
                }
                var F, O, V = this.uniques = {}, I = !!(H && H.length), y = (U.nodeType == 9);
                        if (this.document !== (y ? U : U.ownerDocument)) {
                this.setDocument(U);
                }
                if (I) {
                for (O = p.length; O--; ) {
                V[this.getUID(p[O])] = true;
                }
                }
                if (typeof z == "string") {
                var r = z.match(f);
                        simpleSelectors: if (r) {
                var u = r[1], v = r[2], A, E;
                        if (!u) {
                if (v == "*" && this.brokenStarGEBTN) {
                break simpleSelectors;
                }
                E = U.getElementsByTagName(v);
                        if (s) {
                return E[0] || null;
                }
                for (O = 0; A = E[O++]; ) {
                if (!(I && V[this.getUID(A)])) {
                p.push(A);
                }
                }
                }
                else {
                if (u == "#") {
                if (!this.isHTMLDocument || !y) {
                break simpleSelectors;
                }
                A = U.getElementById(v);
                        if (!A) {
                return p;
                }
                if (this.idGetsName && A.getAttributeNode("id").nodeValue != v) {
                break simpleSelectors;
                }
                if (s) {
                return A || null;
                }
                if (!(I && V[this.getUID(A)])) {
                p.push(A);
                }
                }
                else {
                if (u == ".") {
                if (!this.isHTMLDocument || ((!U.getElementsByClassName || this.brokenGEBCN) && U.querySelectorAll)) {
                break simpleSelectors;
                }
                if (U.getElementsByClassName && !this.brokenGEBCN) {
                E = U.getElementsByClassName(v);
                        if (s) {
                return E[0] || null;
                }
                for (O = 0; A = E[O++]; ) {
                if (!(I && V[this.getUID(A)])) {
                p.push(A);
                }
                }
                }
                else {
                var T = new RegExp("(^|\\s)" + e.escapeRegExp(v) + "(\\s|$)");
                        E = U.getElementsByTagName("*");
                        for (O = 0; A = E[O++]; ) {
                className = A.className;
                        if (!(className && T.test(className))) {
                continue;
                }
                if (s) {
                return A;
                }
                if (!(I && V[this.getUID(A)])) {
                p.push(A);
                }
                }
                }
                }
                }
                }
                if (I) {
                this.sort(p);
                }
                return (s) ? null : p;
                }
                querySelector: if (U.querySelectorAll) {
                if (!this.isHTMLDocument || g[z] || this.brokenMixedCaseQSA || (this.brokenCheckedQSA && z.indexOf(":checked") > - 1) || (this.brokenEmptyAttributeQSA && h.test(z)) || (!y && z.indexOf(",") > - 1) || e.disableQSA) {
                break querySelector;
                }
                var S = z, x = U;
                        if (!y) {
                var C = x.getAttribute("id"), t = "slickid__";
                        x.setAttribute("id", t);
                        S = "#" + t + " " + S;
                        U = x.parentNode;
                }
                try {
                if (s) {
                return U.querySelector(S) || null;
                }
                else {
                E = U.querySelectorAll(S);
                }
                }
                catch (Q) {
                g[z] = 1;
                        break querySelector;
                }
                finally {
                if (!y) {
                if (C) {
                x.setAttribute("id", C);
                }
                else {
                x.removeAttribute("id");
                }
                U = x;
                }
                }
                if (this.starSelectsClosedQSA) {
                for (O = 0; A = E[O++]; ) {
                if (A.nodeName > "@" && !(I && V[this.getUID(A)])) {
                p.push(A);
                }
                }
                }
                else {
                for (O = 0; A = E[O++]; ) {
                if (!(I && V[this.getUID(A)])) {
                p.push(A);
                }
                }
                }
                if (I) {
                this.sort(p);
                }
                return p;
                }
                F = this.Slick.parse(z);
                        if (!F.length) {
                return p;
                }
                }
                else {
                if (z == null) {
                return p;
                }
                else {
                if (z.Slick) {
                F = z;
                }
                else {
                if (this.contains(U.documentElement || U, z)) {
                (p) ? p.push(z) : p = z;
                        return p;
                }
                else {
                return p;
                }
                }
                }
                }
                this.posNTH = {};
                        this.posNTHLast = {};
                        this.posNTHType = {};
                        this.posNTHTypeLast = {};
                        this.push = (!I && (s || (F.length == 1 && F.expressions[0].length == 1))) ? this.pushArray : this.pushUID;
                        if (p == null) {
                p = [];
                }
                var M, L, K;
                        var B, J, D, c, q, G, W;
                        var N, P, o, w, R = F.expressions;
                        search: for (O = 0; (P = R[O]); O++) {
                for (M = 0; (o = P[M]); M++) {
                B = "combinator:" + o.combinator;
                        if (!this[B]) {
                continue search;
                }
                J = (this.isXMLDocument) ? o.tag : o.tag.toUpperCase();
                        D = o.id;
                        c = o.classList;
                        q = o.classes;
                        G = o.attributes;
                        W = o.pseudos;
                        w = (M === (P.length - 1));
                        this.bitUniques = {};
                        if (w) {
                this.uniques = V;
                        this.found = p;
                }
                else {
                this.uniques = {};
                        this.found = [];
                }
                if (M === 0) {
                this[B](U, J, D, q, G, W, c);
                        if (s && w && p.length) {
                break search;
                }
                }
                else {
                if (s && w) {
                for (L = 0, K = N.length; L < K; L++) {
                this[B](N[L], J, D, q, G, W, c);
                        if (p.length) {
                break search;
                }
                }
                }
                else {
                for (L = 0, K = N.length; L < K; L++) {
                this[B](N[L], J, D, q, G, W, c);
                }
                }
                }
                N = this.found;
                }
                }
                if (I || (F.expressions.length > 1)) {
                this.sort(p);
                }
                return (s) ? (p[0] || null) : p;
                };
                k.uidx = 1;
                k.uidk = "slick-uniqueid";
                k.getUIDXML = function (n) {
                var c = n.getAttribute(this.uidk);
                        if (!c) {
                c = this.uidx++;
                        n.setAttribute(this.uidk, c);
                }
                return c;
                };
                k.getUIDHTML = function (c) {
                return c.uniqueNumber || (c.uniqueNumber = this.uidx++);
                };
                k.sort = function (c) {
                if (!this.documentSorter) {
                return c;
                }
                c.sort(this.documentSorter);
                        return c;
                };
                k.cacheNTH = {};
                k.matchNTH = /^([+-]?\d*)?([a-z]+)?([+-]\d+)?$/;
                k.parseNTHArgument = function (q) {
                var o = q.match(this.matchNTH);
                        if (!o) {
                return false;
                }
                var p = o[2] || false;
                        var n = o[1] || 1;
                        if (n == "-") {
                n = - 1;
                }
                var c = + o[3] || 0;
                        o = (p == "n") ? { a: n, b: c } : (p == "odd") ? { a: 2, b: 1 } : (p == "even") ? { a: 2, b: 0 } : { a: 0, b: n };
                        return (this.cacheNTH[q] = o);
                };
                k.createNTHPseudo = function (p, n, c, o) {
                return function (s, q) {
                var u = this.getUID(s);
                        if (!this[c][u]) {
                var A = s.parentNode;
                        if (!A) {
                return false;
                }
                var r = A[p], t = 1;
                        if (o) {
                var z = s.nodeName;
                        do {
                        if (r.nodeName != z) {
                        continue;
                        }
                        this[c][this.getUID(r)] = t++;
                        } while ((r = r[n]));
                }
                else {
                do {
                if (r.nodeType != 1) {
                continue;
                }
                this[c][this.getUID(r)] = t++;
                } while ((r = r[n]));
                }
                }
                q = q || "n";
                        var v = this.cacheNTH[q] || this.parseNTHArgument(q);
                        if (!v) {
                return false;
                }
                var y = v.a, x = v.b, w = this[c][u];
                        if (y == 0) {
                return x == w;
                }
                if (y > 0) {
                if (w < x) {
                return false;
                }
                }
                else {
                if (x < w) {
                return false;
                }
                }
                return ((w - x) % y) == 0;
                };
                };
                k.pushArray = function (p, c, r, o, n, q) {
                if (this.matchSelector(p, c, r, o, n, q)) {
                this.found.push(p);
                }
                };
                k.pushUID = function (q, c, s, p, n, r) {
                var o = this.getUID(q);
                        if (!this.uniques[o] && this.matchSelector(q, c, s, p, n, r)) {
                this.uniques[o] = true;
                        this.found.push(q);
                }
                };
                k.matchNode = function (n, o) {
                if (this.isHTMLDocument && this.nativeMatchesSelector) {
                try {
                return this.nativeMatchesSelector.call(n, o.replace(/\[([^=]+)=\s*([^'"\]]+?)\s*\]/g, '[$1="$2"]'));
                }
                catch (u) {
                }
                }
                var t = this.Slick.parse(o);
                        if (!t) {
                return true;
                }
                var r = t.expressions, s = 0, q;
                        for (q = 0; (currentExpression = r[q]); q++) {
                if (currentExpression.length == 1) {
                var p = currentExpression[0];
                        if (this.matchSelector(n, (this.isXMLDocument) ? p.tag : p.tag.toUpperCase(), p.id, p.classes, p.attributes, p.pseudos)) {
                return true;
                }
                s++;
                }
                }
                if (s == t.length) {
                return false;
                }
                var c = this.search(this.document, t), v;
                        for (q = 0; v = c[q++]; ) {
                if (v === n) {
                return true;
                }
                }
                return false;
                };
                k.matchPseudo = function (q, c, p) {
                var n = "pseudo:" + c;
                        if (this[n]) {
                return this[n](q, p);
                }
                var o = this.getAttribute(q, c);
                        return (p) ? p == o : !!o;
                };
                k.matchSelector = function (o, v, c, p, q, s) {
                if (v) {
                var t = (this.isXMLDocument) ? o.nodeName : o.nodeName.toUpperCase();
                        if (v == "*") {
                if (t < "@") {
                return false;
                }
                }
                else {
                if (t != v) {
                return false;
                }
                }
                }
                if (c && o.getAttribute("id") != c) {
                return false;
                }
                var r, n, u;
                        if (p) {
                for (r = p.length; r--; ) {
                u = this.getAttribute(o, "class");
                        if (!(u && p[r].regexp.test(u))) {
                return false;
                }
                }
                }
                if (q) {
                for (r = q.length; r--; ) {
                n = q[r];
                        if (n.operator ? !n.test(this.getAttribute(o, n.key)) : !this.hasAttribute(o, n.key)) {
                return false;
                }
                }
                }
                if (s) {
                for (r = s.length; r--; ) {
                n = s[r];
                        if (!this.matchPseudo(o, n.key, n.value)) {
                return false;
                }
                }
                }
                return true;
                };
                var j = { " ": function (q, w, n, r, s, u, p) {
                var t, v, o;
                        if (this.isHTMLDocument) {
                getById: if (n) {
                v = this.document.getElementById(n);
                        if ((!v && q.all) || (this.idGetsName && v && v.getAttributeNode("id").nodeValue != n)) {
                o = q.all[n];
                        if (!o) {
                return;
                }
                if (!o[0]) {
                o = [o];
                }
                for (t = 0; v = o[t++]; ) {
                var c = v.getAttributeNode("id");
                        if (c && c.nodeValue == n) {
                this.push(v, w, null, r, s, u);
                        break;
                }
                }
                return;
                }
                if (!v) {
                if (this.contains(this.root, q)) {
                return;
                }
                else {
                break getById;
                }
                }
                else {
                if (this.document !== q && !this.contains(q, v)) {
                return;
                }
                }
                this.push(v, w, null, r, s, u);
                        return;
                }
                getByClass: if (r && q.getElementsByClassName && !this.brokenGEBCN) {
                o = q.getElementsByClassName(p.join(" "));
                        if (!(o && o.length)) {
                break getByClass;
                }
                for (t = 0; v = o[t++]; ) {
                this.push(v, w, n, null, s, u);
                }
                return;
                }
                }
                getByTag: {
                o = q.getElementsByTagName(w);
                        if (!(o && o.length)) {
                break getByTag;
                }
                if (!this.brokenStarGEBTN) {
                w = null;
                }
                for (t = 0; v = o[t++]; ) {
                this.push(v, w, n, r, s, u);
                }
                }
                }, ">": function (p, c, r, o, n, q) {
                if ((p = p.firstChild)) {
                do {
                if (p.nodeType == 1) {
                this.push(p, c, r, o, n, q);
                }
                } while ((p = p.nextSibling));
                }
                }, "+": function (p, c, r, o, n, q) {
                while ((p = p.nextSibling)) {
                if (p.nodeType == 1) {
                this.push(p, c, r, o, n, q);
                        break;
                }
                }
                }, "^": function (p, c, r, o, n, q) {
                p = p.firstChild;
                        if (p) {
                if (p.nodeType == 1) {
                this.push(p, c, r, o, n, q);
                }
                else {
                this["combinator:+"](p, c, r, o, n, q);
                }
                }
                }, "~": function (q, c, s, p, n, r) {
                while ((q = q.nextSibling)) {
                if (q.nodeType != 1) {
                continue;
                }
                var o = this.getUID(q);
                        if (this.bitUniques[o]) {
                break;
                }
                this.bitUniques[o] = true;
                        this.push(q, c, s, p, n, r);
                }
                }, "++": function (p, c, r, o, n, q) {
                this["combinator:+"](p, c, r, o, n, q);
                        this["combinator:!+"](p, c, r, o, n, q);
                }, "~~": function (p, c, r, o, n, q) {
                this["combinator:~"](p, c, r, o, n, q);
                        this["combinator:!~"](p, c, r, o, n, q);
                }, "!": function (p, c, r, o, n, q) {
                while ((p = p.parentNode)) {
                if (p !== this.document) {
                this.push(p, c, r, o, n, q);
                }
                }
                }, "!>": function (p, c, r, o, n, q) {
                p = p.parentNode;
                        if (p !== this.document) {
                this.push(p, c, r, o, n, q);
                }
                }, "!+": function (p, c, r, o, n, q) {
                while ((p = p.previousSibling)) {
                if (p.nodeType == 1) {
                this.push(p, c, r, o, n, q);
                        break;
                }
                }
                }, "!^": function (p, c, r, o, n, q) {
                p = p.lastChild;
                        if (p) {
                if (p.nodeType == 1) {
                this.push(p, c, r, o, n, q);
                }
                else {
                this["combinator:!+"](p, c, r, o, n, q);
                }
                }
                }, "!~": function (q, c, s, p, n, r) {
                while ((q = q.previousSibling)) {
                if (q.nodeType != 1) {
                continue;
                }
                var o = this.getUID(q);
                        if (this.bitUniques[o]) {
                break;
                }
                this.bitUniques[o] = true;
                        this.push(q, c, s, p, n, r);
                }
                } };
                for (var i in j) {
        k["combinator:" + i] = j[i];
        }
        var l = { empty: function (c) {
        var n = c.firstChild;
                return !(n && n.nodeType == 1) && !(c.innerText || c.textContent || "").length;
        }, not: function (c, n) {
        return !this.matchNode(c, n);
        }, contains: function (c, n) {
        return (c.innerText || c.textContent || "").indexOf(n) > - 1;
        }, "first-child": function (c) {
        while ((c = c.previousSibling)) {
        if (c.nodeType == 1) {
        return false;
        }
        }
        return true;
        }, "last-child": function (c) {
        while ((c = c.nextSibling)) {
        if (c.nodeType == 1) {
        return false;
        }
        }
        return true;
        }, "only-child": function (o) {
        var n = o;
                while ((n = n.previousSibling)) {
        if (n.nodeType == 1) {
        return false;
        }
        }
        var c = o;
                while ((c = c.nextSibling)) {
        if (c.nodeType == 1) {
        return false;
        }
        }
        return true;
        }, "nth-child": k.createNTHPseudo("firstChild", "nextSibling", "posNTH"), "nth-last-child": k.createNTHPseudo("lastChild", "previousSibling", "posNTHLast"), "nth-of-type": k.createNTHPseudo("firstChild", "nextSibling", "posNTHType", true), "nth-last-of-type": k.createNTHPseudo("lastChild", "previousSibling", "posNTHTypeLast", true), index: function (n, c) {
        return this["pseudo:nth-child"](n, "" + (c + 1));
        }, even: function (c) {
        return this["pseudo:nth-child"](c, "2n");
        }, odd: function (c) {
        return this["pseudo:nth-child"](c, "2n+1");
        }, "first-of-type": function (c) {
        var n = c.nodeName;
                while ((c = c.previousSibling)) {
        if (c.nodeName == n) {
        return false;
        }
        }
        return true;
        }, "last-of-type": function (c) {
        var n = c.nodeName;
                while ((c = c.nextSibling)) {
        if (c.nodeName == n) {
        return false;
        }
        }
        return true;
        }, "only-of-type": function (o) {
        var n = o, p = o.nodeName;
                while ((n = n.previousSibling)) {
        if (n.nodeName == p) {
        return false;
        }
        }
        var c = o;
                while ((c = c.nextSibling)) {
        if (c.nodeName == p) {
        return false;
        }
        }
        return true;
        }, enabled: function (c) {
        return !c.disabled;
        }, disabled: function (c) {
        return c.disabled;
        }, checked: function (c) {
        return c.checked || c.selected;
        }, focus: function (c) {
        return this.isHTMLDocument && this.document.activeElement === c && (c.href || c.type || this.hasAttribute(c, "tabindex"));
        }, root: function (c) {
        return (c === this.root);
        }, selected: function (c) {
        return c.selected;
        } };
                for (var b in l) {
        k["pseudo:" + b] = l[b];
        }
        var a = k.attributeGetters = { "for": function () {
        return ("htmlFor" in this) ? this.htmlFor : this.getAttribute("for");
        }, href: function () {
        return ("href" in this) ? this.getAttribute("href", 2) : this.getAttribute("href");
        }, style: function () {
        return (this.style) ? this.style.cssText : this.getAttribute("style");
        }, tabindex: function () {
        var c = this.getAttributeNode("tabindex");
                return (c && c.specified) ? c.nodeValue : null;
        }, type: function () {
        return this.getAttribute("type");
        }, maxlength: function () {
        var c = this.getAttributeNode("maxLength");
                return (c && c.specified) ? c.nodeValue : null;
        } };
                a.MAXLENGTH = a.maxLength = a.maxlength;
                var e = k.Slick = (this.Slick || {});
                e.version = "1.1.7";
                e.search = function (n, o, c) {
                return k.search(n, o, c);
                };
                e.find = function (c, n) {
                return k.search(c, n, null, true);
                };
                e.contains = function (c, n) {
                k.setDocument(c);
                        return k.contains(c, n);
                };
                e.getAttribute = function (n, c) {
                k.setDocument(n);
                        return k.getAttribute(n, c);
                };
                e.hasAttribute = function (n, c) {
                k.setDocument(n);
                        return k.hasAttribute(n, c);
                };
                e.match = function (n, c) {
                if (!(n && c)) {
                return false;
                }
                if (!c || c === n) {
                return true;
                }
                k.setDocument(n);
                        return k.matchNode(n, c);
                };
                e.defineAttributeGetter = function (c, n) {
                k.attributeGetters[c] = n;
                        return this;
                };
                e.lookupAttributeGetter = function (c) {
                return k.attributeGetters[c];
                };
                e.definePseudo = function (c, n) {
                k["pseudo:" + c] = function (p, o) {
                return n.call(p, o);
                };
                        return this;
                };
                e.lookupPseudo = function (c) {
                var n = k["pseudo:" + c];
                        if (n) {
                return function (o) {
                return n.call(this, o);
                };
                }
                return null;
                };
                e.override = function (n, c) {
                k.override(n, c);
                        return this;
                };
                e.isXML = k.isXML;
                e.uidOf = function (c) {
                return k.getUIDHTML(c);
                };
                if (!this.Slick) {
        this.Slick = e;
        }
        }).apply((typeof exports != "undefined") ? exports : this);
        var Element = function (b, g) {
        var h = Element.Constructors[b];
                if (h) {
        return h(g);
        }
        if (typeof b != "string") {
        return document.id(b).set(g);
        }
        if (!g) {
        g = {};
        }
        if (!(/^[\w-]+$/).test(b)) {
        var e = Slick.parse(b).expressions[0][0];
                b = (e.tag == "*") ? "div" : e.tag;
                if (e.id && g.id == null) {
        g.id = e.id;
        }
        var d = e.attributes;
                if (d) {
        for (var a, f = 0, c = d.length; f < c; f++) {
        a = d[f];
                if (g[a.key] != null) {
        continue;
        }
        if (a.value != null && a.operator == "=") {
        g[a.key] = a.value;
        }
        else {
        if (!a.value && !a.operator) {
        g[a.key] = true;
        }
        }
        }
        }
        if (e.classList && g["class"] == null) {
        g["class"] = e.classList.join(" ");
        }
        }
        return document.newElement(b, g);
                };
        if (Browser.Element) {
Element.prototype = Browser.Element.prototype;
        Element.prototype._fireEvent = (function (a) {
        return function (b, c) {
        return a.call(this, b, c);
        };
        })(Element.prototype.fireEvent);
        }
new Type("Element", Element).mirror(function (a) {
if (Array.prototype[a]) {
return;
}
var b = {};
        b[a] = function () {
var h = [], e = arguments, j = true;
        for (var g = 0, d = this.length; g < d; g++) {
var f = this[g], c = h[g] = f[a].apply(f, e);
        j = (j && typeOf(c) == "element");
}
return (j) ? new Elements(h) : h;
};
        Elements.implement(b);
        });
        if (!Browser.Element) {
Element.parent = Object;
        Element.Prototype = { "$constructor": Element, "$family": Function.from("element").hide() };
        Element.mirror(function (a, b) {
        Element.Prototype[a] = b;
        });
        }
Element.Constructors = {};
        Element.Constructors = new Hash;
        var IFrame = new Type("IFrame", function () {
        var e = Array.link(arguments, { properties: Type.isObject, iframe: function (f) {
        return (f != null);
        } });
                var c = e.properties || {}, b;
                if (e.iframe) {
        b = document.id(e.iframe);
        }
        var d = c.onload || function () {
        };
                delete c.onload;
                c.id = c.name = [c.id, c.name, b ? (b.id || b.name) : "IFrame_" + String.uniqueID()].pick();
                b = new Element(b || "iframe", c);
                var a = function () {
                d.call(b.contentWindow);
                };
                if (window.frames[c.id]) {
        a();
        }
        else {
        b.addListener("load", a);
        }
        return b;
                });
        var Elements = this.Elements = function (a) {
        if (a && a.length) {
        var e = {}, d;
                for (var c = 0; d = a[c++]; ) {
        var b = Slick.uidOf(d);
                if (!e[b]) {
        e[b] = true;
                this.push(d);
        }
        }
        }
        };
        Elements.prototype = { length: 0 };
        Elements.parent = Array;
        new Type("Elements", Elements).implement({ filter: function (a, b) {
if (!a) {
return this;
}
return new Elements(Array.filter(this, (typeOf(a) == "string") ? function (c) {
return c.match(a);
} : a, b));
        }.protect(), push: function () {
var d = this.length;
        for (var b = 0, a = arguments.length; b < a; b++) {
var c = document.id(arguments[b]);
        if (c) {
this[d++] = c;
}
}
return (this.length = d);
        }.protect(), unshift: function () {
var b = [];
        for (var c = 0, a = arguments.length; c < a; c++) {
var d = document.id(arguments[c]);
        if (d) {
b.push(d);
}
}
return Array.prototype.unshift.apply(this, b);
        }.protect(), concat: function () {
var b = new Elements(this);
        for (var c = 0, a = arguments.length; c < a; c++) {
var d = arguments[c];
        if (Type.isEnumerable(d)) {
b.append(d);
}
else {
b.push(d);
}
}
return b;
        }.protect(), append: function (c) {
for (var b = 0, a = c.length; b < a; b++) {
this.push(c[b]);
}
return this;
        }.protect(), empty: function () {
while (this.length) {
delete this[--this.length];
}
return this;
        }.protect() });
        Elements.alias("extend", "append");
        (function () {
        var f = Array.prototype.splice, a = { "0": 0, "1": 1, length: 2 };
                f.call(a, 1, 1);
                if (a[1] == 1) {
        Elements.implement("splice", function () {
        var g = this.length;
                var e = f.apply(this, arguments);
                while (g >= this.length) {
        delete this[g--];
        }
        return e;
        }.protect());
        }
        Array.forEachMethod(function (g, e) {
        Elements.implement(e, g);
        });
                Array.mirror(Elements);
                var d;
                try {
                d = (document.createElement("<input name=x>").name == "x");
                }
        catch (b) {
        }
        var c = function (e) {
        return ("" + e).replace(/&/g, "&amp;").replace(/"/g, "&quot;");
        };
                Document.implement({ newElement: function (e, g) {
                if (g && g.checked != null) {
                g.defaultChecked = g.checked;
                }
                if (d && g) {
                e = "<" + e;
                        if (g.name) {
                e += ' name="' + c(g.name) + '"';
                }
                if (g.type) {
                e += ' type="' + c(g.type) + '"';
                }
                e += ">";
                        delete g.name;
                        delete g.type;
                }
                return this.id(this.createElement(e)).set(g);
                } });
                })();
        (function () {
        Slick.uidOf(window);
                Slick.uidOf(document);
                Document.implement({ newTextNode: function (e) {
                return this.createTextNode(e);
                }, getDocument: function () {
                return this;
                }, getWindow: function () {
                return this.window;
                }, id: (function () {
                var e = { string: function (E, D, l) {
                E = Slick.find(l, "#" + E.replace(/(\W)/g, "\\$1"));
                        return (E) ? e.element(E, D) : null;
                }, element: function (D, E) {
                Slick.uidOf(D);
                        if (!E && !D.$family && !(/^(?:object|embed)$/i).test(D.tagName)) {
                var l = D.fireEvent;
                        D._fireEvent = function (F, G) {
                        return l(F, G);
                        };
                        Object.append(D, Element.Prototype);
                }
                return D;
                }, object: function (D, E, l) {
                if (D.toElement) {
                return e.element(D.toElement(l), E);
                }
                return null;
                } };
                        e.textnode = e.whitespace = e.window = e.document = function (l) {
                        return l;
                        };
                        return function (D, F, E) {
                        if (D && D.$family && D.uniqueNumber) {
                        return D;
                        }
                        var l = typeOf(D);
                                return (e[l]) ? e[l](D, F, E || document) : null;
                        };
                })() });
                if (window.$ == null) {
        Window.implement("$", function (e, l) {
        return document.id(e, l, this.document);
        });
        }
        Window.implement({ getDocument: function () {
        return this.document;
        }, getWindow: function () {
        return this;
        } });
                [Document, Element].invoke("implement", { getElements: function (e) {
        return Slick.search(this, e, new Elements);
        }, getElement: function (e) {
        return document.id(Slick.find(this, e));
        } });
                var m = { contains: function (e) {
                return Slick.contains(this, e);
                } };
                if (!document.contains) {
        Document.implement(m);
        }
        if (!document.createElement("div").contains) {
        Element.implement(m);
        }
        Element.implement("hasChild", function (e) {
        return this !== e && this.contains(e);
        });
                (function (l, E, e) {
                this.Selectors = {};
                        var F = this.Selectors.Pseudo = new Hash();
                        var D = function () {
                        for (var G in F) {
                        if (F.hasOwnProperty(G)) {
                        Slick.definePseudo(G, F[G]);
                                delete F[G];
                        }
                        }
                        };
                        Slick.search = function (H, I, G) {
                        D();
                                return l.call(this, H, I, G);
                        };
                        Slick.find = function (G, H) {
                        D();
                                return E.call(this, G, H);
                        };
                        Slick.match = function (H, G) {
                        D();
                                return e.call(this, H, G);
                        };
                })(Slick.search, Slick.find, Slick.match);
                var r = function (E, D) {
                if (!E) {
                return D;
                }
                E = Object.clone(Slick.parse(E));
                        var l = E.expressions;
                        for (var e = l.length; e--; ) {
                l[e][0].combinator = D;
                }
                return E;
                };
                Object.forEach({ getNext: "~", getPrevious: "!~", getParent: "!" }, function (e, l) {
                Element.implement(l, function (D) {
                return this.getElement(r(D, e));
                });
                });
                Object.forEach({ getAllNext: "~", getAllPrevious: "!~", getSiblings: "~~", getChildren: ">", getParents: "!" }, function (e, l) {
                Element.implement(l, function (D) {
                return this.getElements(r(D, e));
                });
                });
                Element.implement({ getFirst: function (e) {
                return document.id(Slick.search(this, r(e, ">"))[0]);
                }, getLast: function (e) {
                return document.id(Slick.search(this, r(e, ">")).getLast());
                }, getWindow: function () {
                return this.ownerDocument.window;
                }, getDocument: function () {
                return this.ownerDocument;
                }, getElementById: function (e) {
                return document.id(Slick.find(this, "#" + ("" + e).replace(/(\W)/g, "\\$1")));
                }, match: function (e) {
                return !e || Slick.match(this, e);
                } });
                if (window.$$ == null) {
        Window.implement("$$", function (e) {
        var H = new Elements;
                if (arguments.length == 1 && typeof e == "string") {
        return Slick.search(this.document, e, H);
        }
        var E = Array.flatten(arguments);
                for (var F = 0, D = E.length; F < D; F++) {
        var G = E[F];
                switch (typeOf(G)) {
        case "element":
                H.push(G);
                break;
                case "string": Slick.search(this.document, G, H);
        }
        }
        return H;
        });
        }
        if (window.$$ == null) {
        Window.implement("$$", function (e) {
        if (arguments.length == 1) {
        if (typeof e == "string") {
        return Slick.search(this.document, e, new Elements);
        }
        else {
        if (Type.isEnumerable(e)) {
        return new Elements(e);
        }
        }
        }
        return new Elements(arguments);
        });
        }
        var w = { before: function (l, e) {
        var D = e.parentNode;
                if (D) {
        D.insertBefore(l, e);
        }
        }, after: function (l, e) {
        var D = e.parentNode;
                if (D) {
        D.insertBefore(l, e.nextSibling);
        }
        }, bottom: function (l, e) {
        e.appendChild(l);
        }, top: function (l, e) {
        e.insertBefore(l, e.firstChild);
        } };
                w.inside = w.bottom;
                Object.each(w, function (l, D) {
                D = D.capitalize();
                        var e = {};
                        e["inject" + D] = function (E) {
                l(this, document.id(E, true));
                        return this;
                };
                        e["grab" + D] = function (E) {
                l(document.id(E, true), this);
                        return this;
                };
                        Element.implement(e);
                });
                var j = {}, d = {};
                var k = {};
                Array.forEach(["type", "value", "defaultValue", "accessKey", "cellPadding", "cellSpacing", "colSpan", "frameBorder", "rowSpan", "tabIndex", "useMap"], function (e) {
                k[e.toLowerCase()] = e;
                });
                k.html = "innerHTML";
                k.text = (document.createElement("div").textContent == null) ? "innerText" : "textContent";
                Object.forEach(k, function (l, e) {
                d[e] = function (D, E) {
                D[l] = E;
                };
                        j[e] = function (D) {
                return D[l];
                };
                });
                var x = ["compact", "nowrap", "ismap", "declare", "noshade", "checked", "disabled", "readOnly", "multiple", "selected", "noresize", "defer", "defaultChecked", "autofocus", "controls", "autoplay", "loop"];
                var h = {};
                Array.forEach(x, function (e) {
                var l = e.toLowerCase();
                        h[l] = e;
                        d[l] = function (D, E) {
                D[e] = !!E;
                };
                        j[l] = function (D) {
                return !!D[e];
                };
                });
                Object.append(d, { "class": function (e, l) {
                ("className" in e) ? e.className = (l || "") : e.setAttribute("class", l);
                }, "for": function (e, l) {
                ("htmlFor" in e) ? e.htmlFor = l : e.setAttribute("for", l);
                }, style: function (e, l) {
                (e.style) ? e.style.cssText = l : e.setAttribute("style", l);
                }, value: function (e, l) {
                e.value = (l != null) ? l : "";
                } });
                j["class"] = function (e) {
        return ("className" in e) ? e.className || null : e.getAttribute("class");
        };
                var f = document.createElement("button");
                try {
                f.type = "button";
                }
        catch (z) {
        }
        if (f.type != "button") {
        d.type = function (e, l) {
        e.setAttribute("type", l);
        };
        }
        f = null;
                var p = document.createElement("input");
                p.value = "t";
                p.type = "submit";
                if (p.value != "t") {
        d.type = function (l, e) {
        var D = l.value;
                l.type = e;
                l.value = D;
        };
        }
        p = null;
                var q = (function (e) {
                e.random = "attribute";
                        return (e.getAttribute("random") == "attribute");
                })(document.createElement("div"));
                Element.implement({ setProperty: function (l, D) {
                var E = d[l.toLowerCase()];
                        if (E) {
                E(this, D);
                }
                else {
                if (q) {
                var e = this.retrieve("$attributeWhiteList", {});
                }
                if (D == null) {
                this.removeAttribute(l);
                        if (q) {
                delete e[l];
                }
                }
                else {
                this.setAttribute(l, "" + D);
                        if (q) {
                e[l] = true;
                }
                }
                }
                return this;
                }, setProperties: function (e) {
                for (var l in e) {
                this.setProperty(l, e[l]);
                }
                return this;
                }, getProperty: function (F) {
                var D = j[F.toLowerCase()];
                        if (D) {
                return D(this);
                }
                if (q) {
                var l = this.getAttributeNode(F), E = this.retrieve("$attributeWhiteList", {});
                        if (!l) {
                return null;
                }
                if (l.expando && !E[F]) {
                var G = this.outerHTML;
                        if (G.substr(0, G.search(/\/?['"]?>(?![^<]*<['"])/)).indexOf(F) < 0) {
                return null;
                }
                E[F] = true;
                }
                }
                var e = Slick.getAttribute(this, F);
                        return (!e && !Slick.hasAttribute(this, F)) ? null : e;
                }, getProperties: function () {
                var e = Array.from(arguments);
                        return e.map(this.getProperty, this).associate(e);
                }, removeProperty: function (e) {
                return this.setProperty(e, null);
                }, removeProperties: function () {
                Array.each(arguments, this.removeProperty, this);
                        return this;
                }, set: function (D, l) {
                var e = Element.Properties[D];
                        (e && e.set) ? e.set.call(this, l) : this.setProperty(D, l);
                }.overloadSetter(), get: function (l) {
                var e = Element.Properties[l];
                        return (e && e.get) ? e.get.apply(this) : this.getProperty(l);
                }.overloadGetter(), erase: function (l) {
                var e = Element.Properties[l];
                        (e && e.erase) ? e.erase.apply(this) : this.removeProperty(l);
                        return this;
                }, hasClass: function (e) {
                return this.className.clean().contains(e, " ");
                }, addClass: function (e) {
                if (!this.hasClass(e)) {
                this.className = (this.className + " " + e).clean();
                }
                return this;
                }, removeClass: function (e) {
                this.className = this.className.replace(new RegExp("(^|\\s)" + e + "(?:\\s|$)"), "$1");
                        return this;
                }, toggleClass: function (e, l) {
                if (l == null) {
                l = !this.hasClass(e);
                }
                return (l) ? this.addClass(e) : this.removeClass(e);
                }, adopt: function () {
                var E = this, e, G = Array.flatten(arguments), F = G.length;
                        if (F > 1) {
                E = e = document.createDocumentFragment();
                }
                for (var D = 0; D < F; D++) {
                var l = document.id(G[D], true);
                        if (l) {
                E.appendChild(l);
                }
                }
                if (e) {
                this.appendChild(e);
                }
                return this;
                }, appendText: function (l, e) {
                return this.grab(this.getDocument().newTextNode(l), e);
                }, grab: function (l, e) {
                w[e || "bottom"](document.id(l, true), this);
                        return this;
                }, inject: function (l, e) {
                w[e || "bottom"](this, document.id(l, true));
                        return this;
                }, replaces: function (e) {
                e = document.id(e, true);
                        e.parentNode.replaceChild(this, e);
                        return this;
                }, wraps: function (l, e) {
                l = document.id(l, true);
                        return this.replaces(l).grab(l, e);
                }, getSelected: function () {
                this.selectedIndex;
                        return new Elements(Array.from(this.options).filter(function (e) {
                        return e.selected;
                        }));
                }, toQueryString: function () {
                var e = [];
                        this.getElements("input, select, textarea").each(function (D) {
                var l = D.type;
                        if (!D.name || D.disabled || l == "submit" || l == "reset" || l == "file" || l == "image") {
                return;
                }
                var E = (D.get("tag") == "select") ? D.getSelected().map(function (F) {
                return document.id(F).get("value");
                }) : ((l == "radio" || l == "checkbox") && !D.checked) ? null : D.get("value");
                        Array.from(E).each(function (F) {
                if (typeof F != "undefined") {
                e.push(encodeURIComponent(D.name) + "=" + encodeURIComponent(F));
                }
                });
                });
                        return e.join("&");
                } });
                var i = {}, A = {};
                var B = function (e) {
                return (A[e] || (A[e] = {}));
                };
                var v = function (l) {
                var e = l.uniqueNumber;
                        if (l.removeEvents) {
                l.removeEvents();
                }
                if (l.clearAttributes) {
                l.clearAttributes();
                }
                if (e != null) {
                delete i[e];
                        delete A[e];
                }
                return l;
                };
                var C = { input: "checked", option: "selected", textarea: "value" };
                Element.implement({ destroy: function () {
                var e = v(this).getElementsByTagName("*");
                        Array.each(e, v);
                        Element.dispose(this);
                        return null;
                }, empty: function () {
                Array.from(this.childNodes).each(Element.dispose);
                        return this;
                }, dispose: function () {
                return (this.parentNode) ? this.parentNode.removeChild(this) : this;
                }, clone: function (G, E) {
                G = G !== false;
                        var L = this.cloneNode(G), D = [L], F = [this], J;
                        if (G) {
                D.append(Array.from(L.getElementsByTagName("*")));
                        F.append(Array.from(this.getElementsByTagName("*")));
                }
                for (J = D.length; J--; ) {
                var H = D[J], K = F[J];
                        if (!E) {
                H.removeAttribute("id");
                }
                if (H.clearAttributes) {
                H.clearAttributes();
                        H.mergeAttributes(K);
                        H.removeAttribute("uniqueNumber");
                        if (H.options) {
                var O = H.options, e = K.options;
                        for (var I = O.length; I--; ) {
                O[I].selected = e[I].selected;
                }
                }
                }
                var l = C[K.tagName.toLowerCase()];
                        if (l && K[l]) {
                H[l] = K[l];
                }
                }
                if (Browser.ie) {
                var M = L.getElementsByTagName("object"), N = this.getElementsByTagName("object");
                        for (J = M.length; J--; ) {
                M[J].outerHTML = N[J].outerHTML;
                }
                }
                return document.id(L);
                } });
                [Element, Window, Document].invoke("implement", { addListener: function (E, D) {
        if (E == "unload") {
        var e = D, l = this;
                D = function () {
                l.removeListener("unload", D);
                        e();
                };
        }
        else {
        i[Slick.uidOf(this)] = this;
        }
        if (this.addEventListener) {
        this.addEventListener(E, D, !!arguments[2]);
        }
        else {
        this.attachEvent("on" + E, D);
        }
        return this;
        }, removeListener: function (l, e) {
        if (this.removeEventListener) {
        this.removeEventListener(l, e, !!arguments[2]);
        }
        else {
        this.detachEvent("on" + l, e);
        }
        return this;
        }, retrieve: function (l, e) {
        var E = B(Slick.uidOf(this)), D = E[l];
                if (e != null && D == null) {
        D = E[l] = e;
        }
        return D != null ? D : null;
        }, store: function (l, e) {
        var D = B(Slick.uidOf(this));
                D[l] = e;
                return this;
        }, eliminate: function (e) {
        var l = B(Slick.uidOf(this));
                delete l[e];
                return this;
        } });
                if (window.attachEvent && !window.addEventListener) {
        window.addListener("unload", function () {
        Object.each(i, v);
                if (window.CollectGarbage) {
        CollectGarbage();
        }
        });
        }
        Element.Properties = {};
                Element.Properties = new Hash;
                Element.Properties.style = { set: function (e) {
                this.style.cssText = e;
                }, get: function () {
                return this.style.cssText;
                }, erase: function () {
                this.style.cssText = "";
                } };
                Element.Properties.tag = { get: function () {
                return this.tagName.toLowerCase();
                } };
                Element.Properties.html = { set: function (e) {
                if (e == null) {
                e = "";
                }
                else {
                if (typeOf(e) == "array") {
                e = e.join("");
                }
                }
                this.innerHTML = e;
                }, erase: function () {
                this.innerHTML = "";
                } };
                var t = document.createElement("div");
                t.innerHTML = "<nav></nav>";
                var a = (t.childNodes.length == 1);
                if (!a) {
        var s = "abbr article aside audio canvas datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video".split(" "), b = document.createDocumentFragment(), u = s.length;
                while (u--) {
        b.createElement(s[u]);
        }
        }
        t = null;
                var g = Function.attempt(function () {
                var e = document.createElement("table");
                        e.innerHTML = "<tr><td></td></tr>";
                        return true;
                });
                var c = document.createElement("tr"), o = "<td></td>";
                c.innerHTML = o;
                var y = (c.innerHTML == o);
                c = null;
                if (!g || !y || !a) {
        Element.Properties.html.set = (function (l) {
        var e = { table: [1, "<table>", "</table>"], select: [1, "<select>", "</select>"], tbody: [2, "<table><tbody>", "</tbody></table>"], tr: [3, "<table><tbody><tr>", "</tr></tbody></table>"] };
                e.thead = e.tfoot = e.tbody;
                return function (D) {
                var E = e[this.get("tag")];
                        if (!E && !a) {
                E = [0, "", ""];
                }
                if (!E) {
                return l.call(this, D);
                }
                var H = E[0], G = document.createElement("div"), F = G;
                        if (!a) {
                b.appendChild(G);
                }
                G.innerHTML = [E[1], D, E[2]].flatten().join("");
                        while (H--) {
                F = F.firstChild;
                }
                this.empty().adopt(F.childNodes);
                        if (!a) {
                b.removeChild(G);
                }
                G = null;
                };
        })(Element.Properties.html.set);
        }
        var n = document.createElement("form");
                n.innerHTML = "<select><option>s</option></select>";
                if (n.firstChild.value != "s") {
        Element.Properties.value = { set: function (G) {
        var l = this.get("tag");
                if (l != "select") {
        return this.setProperty("value", G);
        }
        var D = this.getElements("option");
                for (var E = 0; E < D.length; E++) {
        var F = D[E], e = F.getAttributeNode("value"), H = (e && e.specified) ? F.value : F.get("text");
                if (H == G) {
        return F.selected = true;
        }
        }
        }, get: function () {
        var D = this, l = D.get("tag");
                if (l != "select" && l != "option") {
        return this.getProperty("value");
        }
        if (l == "select" && !(D = D.getSelected()[0])) {
        return "";
        }
        var e = D.getAttributeNode("value");
                return (e && e.specified) ? D.value : D.get("text");
        } };
        }
        n = null;
                if (document.createElement("div").getAttributeNode("id")) {
        Element.Properties.id = { set: function (e) {
        this.id = this.getAttributeNode("id").value = e;
        }, get: function () {
        return this.id || null;
        }, erase: function () {
        this.id = this.getAttributeNode("id").value = "";
        } };
        }
        })();
        (function () {
        var i = document.html;
                var d = document.createElement("div");
                d.style.color = "red";
                d.style.color = null;
                var c = d.style.color == "red";
                d = null;
                Element.Properties.styles = { set: function (k) {
                this.setStyles(k);
                } };
                var h = (i.style.opacity != null), e = (i.style.filter != null), j = /alpha\(opacity=([\d.]+)\)/i;
                var a = function (l, k) {
                l.store("$opacity", k);
                        l.style.visibility = k > 0 || k == null ? "visible" : "hidden";
                };
                var f = (h ? function (l, k) {
                l.style.opacity = k;
                } : (e ? function (l, k) {
                var n = l.style;
                        if (!l.currentStyle || !l.currentStyle.hasLayout) {
                n.zoom = 1;
                }
                if (k == null || k == 1) {
                k = "";
                }
                else {
                k = "alpha(opacity=" + (k * 100).limit(0, 100).round() + ")";
                }
                var m = n.filter || l.getComputedStyle("filter") || "";
                        n.filter = j.test(m) ? m.replace(j, k) : m + k;
                        if (!n.filter) {
                n.removeAttribute("filter");
                }
                } : a));
                var g = (h ? function (l) {
                var k = l.style.opacity || l.getComputedStyle("opacity");
                        return (k == "") ? 1 : k.toFloat();
                } : (e ? function (l) {
                var m = (l.style.filter || l.getComputedStyle("filter")), k;
                        if (m) {
                k = m.match(j);
                }
                return (k == null || m == null) ? 1 : (k[1] / 100);
                } : function (l) {
                var k = l.retrieve("$opacity");
                        if (k == null) {
                k = (l.style.visibility == "hidden" ? 0 : 1);
                }
                return k;
                }));
                var b = (i.style.cssFloat == null) ? "styleFloat" : "cssFloat";
                Element.implement({ getComputedStyle: function (m) {
                if (this.currentStyle) {
                return this.currentStyle[m.camelCase()];
                }
                var l = Element.getDocument(this).defaultView, k = l ? l.getComputedStyle(this, null) : null;
                        return (k) ? k.getPropertyValue((m == b) ? "float" : m.hyphenate()) : null;
                }, setStyle: function (l, k) {
                if (l == "opacity") {
                if (k != null) {
                k = parseFloat(k);
                }
                f(this, k);
                        return this;
                }
                l = (l == "float" ? b : l).camelCase();
                        if (typeOf(k) != "string") {
                var m = (Element.Styles[l] || "@").split(" ");
                        k = Array.from(k).map(function (o, n) {
                if (!m[n]) {
                return "";
                }
                return (typeOf(o) == "number") ? m[n].replace("@", Math.round(o)) : o;
                }).join(" ");
                }
                else {
                if (k == String(Number(k))) {
                k = Math.round(k);
                }
                }
                this.style[l] = k;
                        if ((k == "" || k == null) && c && this.style.removeAttribute) {
                this.style.removeAttribute(l);
                }
                return this;
                }, getStyle: function (q) {
                if (q == "opacity") {
                return g(this);
                }
                q = (q == "float" ? b : q).camelCase();
                        var k = this.style[q];
                        if (!k || q == "zIndex") {
                k = [];
                        for (var p in Element.ShortStyles) {
                if (q != p) {
                continue;
                }
                for (var o in Element.ShortStyles[p]) {
                k.push(this.getStyle(o));
                }
                return k.join(" ");
                }
                k = this.getComputedStyle(q);
                }
                if (k) {
                k = String(k);
                        var m = k.match(/rgba?\([\d\s,]+\)/);
                        if (m) {
                k = k.replace(m[0], m[0].rgbToHex());
                }
                }
                if (Browser.opera || Browser.ie) {
                if ((/^(height|width)$/).test(q) && !(/px$/.test(k))) {
                var l = (q == "width") ? ["left", "right"] : ["top", "bottom"], n = 0;
                        l.each(function (r) {
                        n += this.getStyle("border-" + r + "-width").toInt() + this.getStyle("padding-" + r).toInt();
                        }, this);
                        return this["offset" + q.capitalize()] - n + "px";
                }
                if (Browser.ie && (/^border(.+)Width|margin|padding/).test(q) && isNaN(parseFloat(k))) {
                return "0px";
                }
                }
                return k;
                }, setStyles: function (l) {
                for (var k in l) {
                this.setStyle(k, l[k]);
                }
                return this;
                }, getStyles: function () {
                var k = {};
                        Array.flatten(arguments).each(function (l) {
                k[l] = this.getStyle(l);
                }, this);
                        return k;
                } });
                Element.Styles = { left: "@px", top: "@px", bottom: "@px", right: "@px", width: "@px", height: "@px", maxWidth: "@px", maxHeight: "@px", minWidth: "@px", minHeight: "@px", backgroundColor: "rgb(@, @, @)", backgroundPosition: "@px @px", color: "rgb(@, @, @)", fontSize: "@px", letterSpacing: "@px", lineHeight: "@px", clip: "rect(@px @px @px @px)", margin: "@px @px @px @px", padding: "@px @px @px @px", border: "@px @ rgb(@, @, @) @px @ rgb(@, @, @) @px @ rgb(@, @, @)", borderWidth: "@px @px @px @px", borderStyle: "@ @ @ @", borderColor: "rgb(@, @, @) rgb(@, @, @) rgb(@, @, @) rgb(@, @, @)", zIndex: "@", zoom: "@", fontWeight: "@", textIndent: "@px", opacity: "@" };
                Element.implement({ setOpacity: function (k) {
                f(this, k);
                        return this;
                }, getOpacity: function () {
                return g(this);
                } });
                Element.Properties.opacity = { set: function (k) {
                f(this, k);
                        a(this, k);
                }, get: function () {
                return g(this);
                } };
                Element.Styles = new Hash(Element.Styles);
                Element.ShortStyles = { margin: {}, padding: {}, border: {}, borderWidth: {}, borderStyle: {}, borderColor: {} };
                ["Top", "Right", "Bottom", "Left"].each(function (q) {
        var p = Element.ShortStyles;
                var l = Element.Styles;
                ["margin", "padding"].each(function (r) {
        var s = r + q;
                p[r][s] = l[s] = "@px";
        });
                var o = "border" + q;
                p.border[o] = l[o] = "@px @ rgb(@, @, @)";
                var n = o + "Width", k = o + "Style", m = o + "Color";
                p[o] = {};
                p.borderWidth[n] = p[o][n] = l[n] = "@px";
                p.borderStyle[k] = p[o][k] = l[k] = "@";
                p.borderColor[m] = p[o][m] = l[m] = "rgb(@, @, @)";
        });
                })();
        (function () {
        Element.Properties.events = { set: function (b) {
        this.addEvents(b);
        } };
                [Element, Window, Document].invoke("implement", { addEvent: function (f, h) {
        var i = this.retrieve("events", {});
                if (!i[f]) {
        i[f] = { keys: [], values: [] };
        }
        if (i[f].keys.contains(h)) {
        return this;
        }
        i[f].keys.push(h);
                var g = f, b = Element.Events[f], d = h, j = this;
                if (b) {
        if (b.onAdd) {
        b.onAdd.call(this, h, f);
        }
        if (b.condition) {
        d = function (k) {
        if (b.condition.call(this, k, f)) {
        return h.call(this, k);
        }
        return true;
        };
        }
        if (b.base) {
        g = Function.from(b.base).call(this, f);
        }
        }
        var e = function () {
        return h.call(j);
        };
                var c = Element.NativeEvents[g];
                if (c) {
        if (c == 2) {
        e = function (k) {
        k = new DOMEvent(k, j.getWindow());
                if (d.call(j, k) === false) {
        k.stop();
        }
        };
        }
        this.addListener(g, e, arguments[2]);
        }
        i[f].values.push(e);
                return this;
        }, removeEvent: function (e, d) {
        var c = this.retrieve("events");
                if (!c || !c[e]) {
        return this;
        }
        var h = c[e];
                var b = h.keys.indexOf(d);
                if (b == - 1) {
        return this;
        }
        var g = h.values[b];
                delete h.keys[b];
                delete h.values[b];
                var f = Element.Events[e];
                if (f) {
        if (f.onRemove) {
        f.onRemove.call(this, d, e);
        }
        if (f.base) {
        e = Function.from(f.base).call(this, e);
        }
        }
        return (Element.NativeEvents[e]) ? this.removeListener(e, g, arguments[2]) : this;
        }, addEvents: function (b) {
        for (var c in b) {
        this.addEvent(c, b[c]);
        }
        return this;
        }, removeEvents: function (b) {
        var d;
                if (typeOf(b) == "object") {
        for (d in b) {
        this.removeEvent(d, b[d]);
        }
        return this;
        }
        var c = this.retrieve("events");
                if (!c) {
        return this;
        }
        if (!b) {
        for (d in c) {
        this.removeEvents(d);
        }
        this.eliminate("events");
        }
        else {
        if (c[b]) {
        c[b].keys.each(function (e) {
        this.removeEvent(b, e);
        }, this);
                delete c[b];
        }
        }
        return this;
        }, fireEvent: function (e, c, b) {
        var d = this.retrieve("events");
                if (!d || !d[e]) {
        return this;
        }
        c = Array.from(c);
                d[e].keys.each(function (f) {
        if (b) {
        f.delay(b, this, c);
        }
        else {
        f.apply(this, c);
        }
        }, this);
                return this;
        }, cloneEvents: function (e, d) {
        e = document.id(e);
                var c = e.retrieve("events");
                if (!c) {
        return this;
        }
        if (!d) {
        for (var b in c) {
        this.cloneEvents(e, b);
        }
        }
        else {
        if (c[d]) {
        c[d].keys.each(function (f) {
        this.addEvent(d, f);
        }, this);
        }
        }
        return this;
        } });
                Element.NativeEvents = { click: 2, dblclick: 2, mouseup: 2, mousedown: 2, contextmenu: 2, mousewheel: 2, DOMMouseScroll: 2, mouseover: 2, mouseout: 2, mousemove: 2, selectstart: 2, selectend: 2, keydown: 2, keypress: 2, keyup: 2, orientationchange: 2, touchstart: 2, touchmove: 2, touchend: 2, touchcancel: 2, gesturestart: 2, gesturechange: 2, gestureend: 2, focus: 2, blur: 2, change: 2, reset: 2, select: 2, submit: 2, paste: 2, input: 2, load: 2, unload: 1, beforeunload: 2, resize: 1, move: 1, DOMContentLoaded: 1, readystatechange: 1, error: 1, abort: 1, scroll: 1 };
                Element.Events = { mousewheel: { base: (Browser.firefox) ? "DOMMouseScroll" : "mousewheel" } };
                if ("onmouseenter" in document.documentElement) {
        Element.NativeEvents.mouseenter = Element.NativeEvents.mouseleave = 2;
        }
        else {
        var a = function (b) {
        var c = b.relatedTarget;
                if (c == null) {
        return true;
        }
        if (!c) {
        return false;
        }
        return (c != this && c.prefix != "xul" && typeOf(this) != "document" && !this.contains(c));
        };
                Element.Events.mouseenter = { base: "mouseover", condition: a };
                Element.Events.mouseleave = { base: "mouseout", condition: a };
        }
        if (!window.addEventListener) {
        Element.NativeEvents.propertychange = 2;
                Element.Events.change = { base: function () {
                var b = this.type;
                        return (this.get("tag") == "input" && (b == "radio" || b == "checkbox")) ? "propertychange" : "change";
                }, condition: function (b) {
                return this.type != "radio" || (b.event.propertyName == "checked" && this.checked);
                } };
        }
        Element.Events = new Hash(Element.Events);
                })();
        (function () {
        var c = !!window.addEventListener;
                Element.NativeEvents.focusin = Element.NativeEvents.focusout = 2;
                var k = function (l, m, n, o, p) {
                while (p && p != l) {
                if (m(p, o)) {
                return n.call(p, o, p);
                }
                p = document.id(p.parentNode);
                }
                };
                var a = { mouseenter: { base: "mouseover" }, mouseleave: { base: "mouseout" }, focus: { base: "focus" + (c ? "" : "in"), capture: true }, blur: { base: c ? "blur" : "focusout", capture: true } };
                var b = "$delegation:";
                var i = function (l) {
                return { base: "focusin", remove: function (m, o) {
                var p = m.retrieve(b + l + "listeners", {})[o];
                        if (p && p.forms) {
                for (var n = p.forms.length; n--; ) {
                p.forms[n].removeEvent(l, p.fns[n]);
                }
                }
                }, listen: function (x, r, v, n, t, s) {
                var o = (t.get("tag") == "form") ? t : n.target.getParent("form");
                        if (!o) {
                return;
                }
                var u = x.retrieve(b + l + "listeners", {}), p = u[s] || { forms: [], fns: [] }, m = p.forms, w = p.fns;
                        if (m.indexOf(o) != - 1) {
                return;
                }
                m.push(o);
                        var q = function (y) {
                        k(x, r, v, y, t);
                        };
                        o.addEvent(l, q);
                        w.push(q);
                        u[s] = p;
                        x.store(b + l + "listeners", u);
                } };
                };
                var d = function (l) {
                return { base: "focusin", listen: function (m, n, p, q, r) {
                var o = { blur: function () {
                this.removeEvents(o);
                } };
                        o[l] = function (s) {
                k(m, n, p, s, r);
                };
                        q.target.addEvents(o);
                } };
                };
                if (!c) {
        Object.append(a, { submit: i("submit"), reset: i("reset"), change: d("change"), select: d("select") });
        }
        var h = Element.prototype, f = h.addEvent, j = h.removeEvent;
                var e = function (l, m) {
                return function (r, q, n) {
                if (r.indexOf(":relay") == - 1) {
                return l.call(this, r, q, n);
                }
                var o = Slick.parse(r).expressions[0][0];
                        if (o.pseudos[0].key != "relay") {
                return l.call(this, r, q, n);
                }
                var p = o.tag;
                        o.pseudos.slice(1).each(function (s) {
                p += ":" + s.key + (s.value ? "(" + s.value + ")" : "");
                });
                        l.call(this, r, q);
                        return m.call(this, p, o.pseudos[0].value, q);
                };
                };
                var g = { addEvent: function (v, q, x) {
                var t = this.retrieve("$delegates", {}), r = t[v];
                        if (r) {
                for (var y in r) {
                if (r[y].fn == x && r[y].match == q) {
                return this;
                }
                }
                }
                var p = v, u = q, o = x, n = a[v] || {};
                        v = n.base || p;
                        q = function (B) {
                        return Slick.match(B, u);
                        };
                        var w = Element.Events[p];
                        if (w && w.condition) {
                var l = q, m = w.condition;
                        q = function (C, B) {
                        return l(C, B) && m.call(C, B, v);
                        };
                }
                var z = this, s = String.uniqueID();
                        var A = n.listen ? function (B, C) {
                        if (!C && B && B.target) {
                        C = B.target;
                        }
                        if (C) {
                        n.listen(z, q, x, B, C, s);
                        }
                        } : function (B, C) {
                if (!C && B && B.target) {
                C = B.target;
                }
                if (C) {
                k(z, q, x, B, C);
                }
                };
                        if (!r) {
                r = {};
                }
                r[s] = { match: u, fn: o, delegator: A };
                        t[p] = r;
                        return f.call(this, v, A, n.capture);
                }, removeEvent: function (r, n, t, u) {
                var q = this.retrieve("$delegates", {}), p = q[r];
                        if (!p) {
                return this;
                }
                if (u) {
                var m = r, w = p[u].delegator, l = a[r] || {};
                        r = l.base || m;
                        if (l.remove) {
                l.remove(this, u);
                }
                delete p[u];
                        q[m] = p;
                        return j.call(this, r, w);
                }
                var o, v;
                        if (t) {
                for (o in p) {
                v = p[o];
                        if (v.match == n && v.fn == t) {
                return g.removeEvent.call(this, r, n, t, o);
                }
                }
                }
                else {
                for (o in p) {
                v = p[o];
                        if (v.match == n) {
                g.removeEvent.call(this, r, n, v.fn, o);
                }
                }
                }
                return this;
                } };
                [Element, Window, Document].invoke("implement", { addEvent: e(f, g.addEvent), removeEvent: e(j, g.removeEvent) });
                })();
        (function () {
        var h = document.createElement("div"), e = document.createElement("div");
                h.style.height = "0";
                h.appendChild(e);
                var d = (e.offsetParent === h);
                h = e = null;
                var l = function (m) {
                return k(m, "position") != "static" || a(m);
                };
                var i = function (m) {
                return l(m) || (/^(?:table|td|th)$/i).test(m.tagName);
                };
                Element.implement({ scrollTo: function (m, n) {
                if (a(this)) {
                this.getWindow().scrollTo(m, n);
                }
                else {
                this.scrollLeft = m;
                        this.scrollTop = n;
                }
                return this;
                }, getSize: function () {
                if (a(this)) {
                return this.getWindow().getSize();
                }
                return { x: this.offsetWidth, y: this.offsetHeight };
                }, getScrollSize: function () {
                if (a(this)) {
                return this.getWindow().getScrollSize();
                }
                return { x: this.scrollWidth, y: this.scrollHeight };
                }, getScroll: function () {
                if (a(this)) {
                return this.getWindow().getScroll();
                }
                return { x: this.scrollLeft, y: this.scrollTop };
                }, getScrolls: function () {
                var n = this.parentNode, m = { x: 0, y: 0 };
                        while (n && !a(n)) {
                m.x += n.scrollLeft;
                        m.y += n.scrollTop;
                        n = n.parentNode;
                }
                return m;
                }, getOffsetParent: d ? function () {
                var m = this;
                        if (a(m) || k(m, "position") == "fixed") {
                return null;
                }
                var n = (k(m, "position") == "static") ? i : l;
                        while ((m = m.parentNode)) {
                if (n(m)) {
                return m;
                }
                }
                return null;
                } : function () {
                var m = this;
                        if (a(m) || k(m, "position") == "fixed") {
                return null;
                }
                try {
                return m.offsetParent;
                }
                catch (n) {
                }
                return null;
                }, getOffsets: function () {
                if (this.getBoundingClientRect && !Browser.Platform.ios) {
                var r = this.getBoundingClientRect(), o = document.id(this.getDocument().documentElement), q = o.getScroll(), t = this.getScrolls(), s = (k(this, "position") == "fixed");
                        return { x: r.left.toInt() + t.x + ((s) ? 0 : q.x) - o.clientLeft, y: r.top.toInt() + t.y + ((s) ? 0 : q.y) - o.clientTop };
                }
                var n = this, m = { x: 0, y: 0 };
                        if (a(this)) {
                return m;
                }
                while (n && !a(n)) {
                m.x += n.offsetLeft;
                        m.y += n.offsetTop;
                        if (Browser.firefox) {
                if (!c(n)) {
                m.x += b(n);
                        m.y += g(n);
                }
                var p = n.parentNode;
                        if (p && k(p, "overflow") != "visible") {
                m.x += b(p);
                        m.y += g(p);
                }
                }
                else {
                if (n != this && Browser.safari) {
                m.x += b(n);
                        m.y += g(n);
                }
                }
                n = n.offsetParent;
                }
                if (Browser.firefox && !c(this)) {
                m.x -= b(this);
                        m.y -= g(this);
                }
                return m;
                }, getPosition: function (p) {
                var q = this.getOffsets(), n = this.getScrolls();
                        var m = { x: q.x - n.x, y: q.y - n.y };
                        if (p && (p = document.id(p))) {
                var o = p.getPosition();
                        return { x: m.x - o.x - b(p), y: m.y - o.y - g(p) };
                }
                return m;
                }, getCoordinates: function (o) {
                if (a(this)) {
                return this.getWindow().getCoordinates();
                }
                var m = this.getPosition(o), n = this.getSize();
                        var p = { left: m.x, top: m.y, width: n.x, height: n.y };
                        p.right = p.left + p.width;
                        p.bottom = p.top + p.height;
                        return p;
                }, computePosition: function (m) {
                return { left: m.x - j(this, "margin-left"), top: m.y - j(this, "margin-top") };
                }, setPosition: function (m) {
                return this.setStyles(this.computePosition(m));
                } });
                [Document, Window].invoke("implement", { getSize: function () {
        var m = f(this);
                return { x: m.clientWidth, y: m.clientHeight };
        }, getScroll: function () {
        var n = this.getWindow(), m = f(this);
                return { x: n.pageXOffset || m.scrollLeft, y: n.pageYOffset || m.scrollTop };
        }, getScrollSize: function () {
        var o = f(this), n = this.getSize(), m = this.getDocument().body;
                return { x: Math.max(o.scrollWidth, m.scrollWidth, n.x), y: Math.max(o.scrollHeight, m.scrollHeight, n.y) };
        }, getPosition: function () {
        return { x: 0, y: 0 };
        }, getCoordinates: function () {
        var m = this.getSize();
                return { top: 0, left: 0, bottom: m.y, right: m.x, height: m.y, width: m.x };
        } });
                var k = Element.getComputedStyle;
                function j(m, n) {
                return k(m, n).toInt() || 0;
                }
        function c(m) {
        return k(m, "-moz-box-sizing") == "border-box";
        }
        function g(m) {
        return j(m, "border-top-width");
        }
        function b(m) {
        return j(m, "border-left-width");
        }
        function a(m) {
        return (/^(?:body|html)$/i).test(m.tagName);
        }
        function f(m) {
        var n = m.getDocument();
                return (!n.compatMode || n.compatMode == "CSS1Compat") ? n.html : n.body;
        }
        })();
        Element.alias({ position: "setPosition" });
        [Window, Document, Element].invoke("implement", { getHeight: function () {
return this.getSize().y;
        }, getWidth: function () {
return this.getSize().x;
        }, getScrollTop: function () {
return this.getScroll().y;
        }, getScrollLeft: function () {
return this.getScroll().x;
        }, getScrollHeight: function () {
return this.getScrollSize().y;
        }, getScrollWidth: function () {
return this.getScrollSize().x;
        }, getTop: function () {
return this.getPosition().y;
        }, getLeft: function () {
return this.getPosition().x;
        } });
        (function () {
        var f = this.Fx = new Class({ Implements: [Chain, Events, Options], options: { fps: 60, unit: false, duration: 500, frames: null, frameSkip: true, link: "ignore" }, initialize: function (g) {
        this.subject = this.subject || this;
                this.setOptions(g);
        }, getTransition: function () {
        return function (g) {
        return - (Math.cos(Math.PI * g) - 1) / 2;
        };
        }, step: function (g) {
        if (this.options.frameSkip) {
        var h = (this.time != null) ? (g - this.time) : 0, i = h / this.frameInterval;
                this.time = g;
                this.frame += i;
        }
        else {
        this.frame++;
        }
        if (this.frame < this.frames) {
        var j = this.transition(this.frame / this.frames);
                this.set(this.compute(this.from, this.to, j));
        }
        else {
        this.frame = this.frames;
                this.set(this.compute(this.from, this.to, 1));
                this.stop();
        }
        }, set: function (g) {
        return g;
        }, compute: function (i, h, g) {
        return f.compute(i, h, g);
        }, check: function () {
        if (!this.isRunning()) {
        return true;
        }
        switch (this.options.link) {
        case "cancel":
                this.cancel();
                return true;
                case "chain":
                this.chain(this.caller.pass(arguments, this));
                return false;
        }
        return false;
        }, start: function (k, j) {
        if (!this.check(k, j)) {
        return this;
        }
        this.from = k;
                this.to = j;
                this.frame = (this.options.frameSkip) ? 0 : - 1;
                this.time = null;
                this.transition = this.getTransition();
                var i = this.options.frames, h = this.options.fps, g = this.options.duration;
                this.duration = f.Durations[g] || g.toInt();
                this.frameInterval = 1000 / h;
                this.frames = i || Math.round(this.duration / this.frameInterval);
                this.fireEvent("start", this.subject);
                b.call(this, h);
                return this;
        }, stop: function () {
        if (this.isRunning()) {
        this.time = null;
                d.call(this, this.options.fps);
                if (this.frames == this.frame) {
        this.fireEvent("complete", this.subject);
                if (!this.callChain()) {
        this.fireEvent("chainComplete", this.subject);
        }
        }
        else {
        this.fireEvent("stop", this.subject);
        }
        }
        return this;
        }, cancel: function () {
        if (this.isRunning()) {
        this.time = null;
                d.call(this, this.options.fps);
                this.frame = this.frames;
                this.fireEvent("cancel", this.subject).clearChain();
        }
        return this;
        }, pause: function () {
        if (this.isRunning()) {
        this.time = null;
                d.call(this, this.options.fps);
        }
        return this;
        }, resume: function () {
        if ((this.frame < this.frames) && !this.isRunning()) {
        b.call(this, this.options.fps);
        }
        return this;
        }, isRunning: function () {
        var g = e[this.options.fps];
                return g && g.contains(this);
        } });
                f.compute = function (i, h, g) {
                return (h - i) * g + i;
                };
                f.Durations = { "short": 250, normal: 500, "long": 1000 };
                var e = {}, c = {};
                var a = function () {
                var h = Date.now();
                        for (var j = this.length; j--; ) {
                var g = this[j];
                        if (g) {
                g.step(h);
                }
                }
                };
                var b = function (h) {
                var g = e[h] || (e[h] = []);
                        g.push(this);
                        if (!c[h]) {
                c[h] = a.periodical(Math.round(1000 / h), g);
                }
                };
                var d = function (h) {
                var g = e[h];
                        if (g) {
                g.erase(this);
                        if (!g.length && c[h]) {
                delete e[h];
                        c[h] = clearInterval(c[h]);
                }
                }
                };
                })();
        Fx.CSS = new Class({ Extends: Fx, prepare: function (b, e, a) {
        a = Array.from(a);
                var h = a[0], g = a[1];
                if (g == null) {
        g = h;
                h = b.getStyle(e);
                var c = this.options.unit;
                if (c && h.slice( - c.length) != c && parseFloat(h) != 0) {
        b.setStyle(e, g + c);
                var d = b.getComputedStyle(e);
                if (!(/px$/.test(d))) {
        d = b.style[("pixel-" + e).camelCase()];
                if (d == null) {
        var f = b.style.left;
                b.style.left = g + c;
                d = b.style.pixelLeft;
                b.style.left = f;
        }
        }
        h = (g || 1) / (parseFloat(d) || 1) * (parseFloat(h) || 0);
                b.setStyle(e, h + c);
        }
        }
        return { from: this.parse(h), to: this.parse(g) };
                }, parse: function (a) {
        a = Function.from(a)();
                a = (typeof a == "string") ? a.split(" ") : Array.from(a);
                return a.map(function (c) {
                c = String(c);
                        var b = false;
                        Object.each(Fx.CSS.Parsers, function (f, e) {
                        if (b) {
                        return;
                        }
                        var d = f.parse(c);
                                if (d || d === 0) {
                        b = { value: d, parser: f };
                        }
                        });
                        b = b || { value: c, parser: Fx.CSS.Parsers.String };
                        return b;
                });
                }, compute: function (d, c, b) {
        var a = [];
                (Math.min(d.length, c.length)).times(function (e) {
        a.push({ value: d[e].parser.compute(d[e].value, c[e].value, b), parser: d[e].parser });
        });
                a.$family = Function.from("fx:css:value");
                return a;
                }, serve: function (c, b) {
        if (typeOf(c) != "fx:css:value") {
        c = this.parse(c);
        }
        var a = [];
                c.each(function (d) {
                a = a.concat(d.parser.serve(d.value, b));
                });
                return a;
                }, render: function (a, d, c, b) {
        a.setStyle(d, this.serve(c, b));
                }, search: function (a) {
        if (Fx.CSS.Cache[a]) {
        return Fx.CSS.Cache[a];
        }
        var c = {}, b = new RegExp("^" + a.escapeRegExp() + "$");
                Array.each(document.styleSheets, function (f, e) {
                var d = f.href;
                        if (d && d.contains("://") && !d.contains(document.domain)) {
                return;
                }
                var g = f.rules || f.cssRules;
                        Array.each(g, function (k, h) {
                        if (!k.style) {
                        return;
                        }
                        var j = (k.selectorText) ? k.selectorText.replace(/^\w+/, function (i) {
                        return i.toLowerCase();
                        }) : null;
                                if (!j || !b.test(j)) {
                        return;
                        }
                        Object.each(Element.Styles, function (l, i) {
                        if (!k.style[i] || Element.ShortStyles[i]) {
                        return;
                        }
                        l = String(k.style[i]);
                                c[i] = ((/^rgb/).test(l)) ? l.rgbToHex() : l;
                        });
                        });
                });
                return Fx.CSS.Cache[a] = c;
                } });
        Fx.CSS.Cache = {};
        Fx.CSS.Parsers = { Color: { parse: function (a) {
        if (a.match(/^#[0-9a-f]{3,6}$/i)) {
        return a.hexToRgb(true);
        }
        return ((a = a.match(/(\d+),\s*(\d+),\s*(\d+)/))) ? [a[1], a[2], a[3]] : false;
                }, compute: function (c, b, a) {
        return c.map(function (e, d) {
        return Math.round(Fx.compute(c[d], b[d], a));
        });
                }, serve: function (a) {
        return a.map(Number);
                } }, Number: { parse: parseFloat, compute: Fx.compute, serve: function (b, a) {
        return (a) ? b + a : b;
                } }, String: { parse: Function.from(false), compute: function (b, a) {
        return a;
                }, serve: function (a) {
        return a;
                } } };
        Fx.CSS.Parsers = new Hash(Fx.CSS.Parsers);
        Fx.Tween = new Class({ Extends: Fx.CSS, initialize: function (b, a) {
        this.element = this.subject = document.id(b);
                this.parent(a);
                }, set: function (b, a) {
        if (arguments.length == 1) {
        a = b;
                b = this.property || this.options.property;
        }
        this.render(this.element, b, a, this.options.unit);
                return this;
                }, start: function (c, e, d) {
        if (!this.check(c, e, d)) {
        return this;
        }
        var b = Array.flatten(arguments);
                this.property = this.options.property || b.shift();
                var a = this.prepare(this.element, this.property, b);
                return this.parent(a.from, a.to);
                } });
        Element.Properties.tween = { set: function (a) {
        this.get("tween").cancel().setOptions(a);
                return this;
                }, get: function () {
        var a = this.retrieve("tween");
                if (!a) {
        a = new Fx.Tween(this, { link: "cancel" });
                this.store("tween", a);
        }
        return a;
                } };
        Element.implement({ tween: function (a, c, b) {
        this.get("tween").start(a, c, b);
                return this;
                }, fade: function (d) {
        var e = this.get("tween"), g, c = ["opacity"].append(arguments), a;
                if (c[1] == null) {
        c[1] = "toggle";
        }
        switch (c[1]) {
        case "in":
                g = "start";
                c[1] = 1;
                break;
                case "out":
                g = "start";
                c[1] = 0;
                break;
                case "show":
                g = "set";
                c[1] = 1;
                break;
                case "hide":
                g = "set";
                c[1] = 0;
                break;
                case "toggle":
                var b = this.retrieve("fade:flag", this.getStyle("opacity") == 1);
                g = "start";
                c[1] = b ? 0 : 1;
                this.store("fade:flag", !b);
                a = true;
                break;
                default: g = "start";
        }
        if (!a) {
        this.eliminate("fade:flag");
        }
        e[g].apply(e, c);
                var f = c[c.length - 1];
                if (g == "set" || f != 0) {
        this.setStyle("visibility", f == 0 ? "hidden" : "visible");
        }
        else {
        e.chain(function () {
        this.element.setStyle("visibility", "hidden");
                this.callChain();
        });
        }
        return this;
                }, highlight: function (c, a) {
        if (!a) {
        a = this.retrieve("highlight:original", this.getStyle("background-color"));
                a = (a == "transparent") ? "#fff" : a;
        }
        var b = this.get("tween");
                b.start("background-color", c || "#ffff88", a).chain(function () {
        this.setStyle("background-color", this.retrieve("highlight:original"));
                b.callChain();
        }.bind(this));
                return this;
                } });
        Fx.Morph = new Class({ Extends: Fx.CSS, initialize: function (b, a) {
        this.element = this.subject = document.id(b);
                this.parent(a);
                }, set: function (a) {
        if (typeof a == "string") {
        a = this.search(a);
        }
        for (var b in a) {
        this.render(this.element, b, a[b], this.options.unit);
        }
        return this;
                }, compute: function (e, d, c) {
        var a = {};
                for (var b in e) {
        a[b] = this.parent(e[b], d[b], c);
        }
        return a;
                }, start: function (b) {
        if (!this.check(b)) {
        return this;
        }
        if (typeof b == "string") {
        b = this.search(b);
        }
        var e = {}, d = {};
                for (var c in b) {
        var a = this.prepare(this.element, c, b[c]);
                e[c] = a.from;
                d[c] = a.to;
        }
        return this.parent(e, d);
                } });
        Element.Properties.morph = { set: function (a) {
        this.get("morph").cancel().setOptions(a);
                return this;
                }, get: function () {
        var a = this.retrieve("morph");
                if (!a) {
        a = new Fx.Morph(this, { link: "cancel" });
                this.store("morph", a);
        }
        return a;
                } };
        Element.implement({ morph: function (a) {
        this.get("morph").start(a);
                return this;
                } });
        Fx.implement({ getTransition: function () {
        var a = this.options.transition || Fx.Transitions.Sine.easeInOut;
                if (typeof a == "string") {
        var b = a.split(":");
                a = Fx.Transitions;
                a = a[b[0]] || a[b[0].capitalize()];
                if (b[1]) {
        a = a["ease" + b[1].capitalize() + (b[2] ? b[2].capitalize() : "")];
        }
        }
        return a;
                } });
        Fx.Transition = function (c, b) {
        b = Array.from(b);
                var a = function (d) {
                return c(d, b);
                };
                return Object.append(a, { easeIn: a, easeOut: function (d) {
                return 1 - c(1 - d, b);
                }, easeInOut: function (d) {
                return (d <= 0.5 ? c(2 * d, b) : (2 - c(2 * (1 - d), b))) / 2;
                } });
                };
        Fx.Transitions = { linear: function (a) {
        return a;
                } };
        Fx.Transitions = new Hash(Fx.Transitions);
        Fx.Transitions.extend = function (a) {
        for (var b in a) {
        Fx.Transitions[b] = new Fx.Transition(a[b]);
        }
        };
        Fx.Transitions.extend({ Pow: function (b, a) {
        return Math.pow(b, a && a[0] || 6);
                }, Expo: function (a) {
        return Math.pow(2, 8 * (a - 1));
                }, Circ: function (a) {
        return 1 - Math.sin(Math.acos(a));
                }, Sine: function (a) {
        return 1 - Math.cos(a * Math.PI / 2);
                }, Back: function (b, a) {
        a = a && a[0] || 1.618;
                return Math.pow(b, 2) * ((a + 1) * b - a);
                }, Bounce: function (f) {
        var e;
                for (var d = 0, c = 1; 1; d += c, c /= 2) {
        if (f >= (7 - 4 * d) / 11) {
        e = c * c - Math.pow((11 - 6 * d - 11 * f) / 4, 2);
                break;
        }
        }
        return e;
                }, Elastic: function (b, a) {
        return Math.pow(2, 10 * --b) * Math.cos(20 * b * Math.PI * (a && a[0] || 1) / 3);
                } });
        ["Quad", "Cubic", "Quart", "Quint"].each(function (b, a) {
Fx.Transitions[b] = new Fx.Transition(function (c) {
return Math.pow(c, a + 2);
});
        });
        (function () {
        var d = function () {
        }, a = ("onprogress" in new Browser.Request);
                var c = this.Request = new Class({ Implements: [Chain, Events, Options], options: { url: "", data: "", headers: { "X-Requested-With": "XMLHttpRequest", Accept: "text/javascript, text/html, application/xml, text/xml, */*" }, async: true, format: false, method: "post", link: "ignore", isSuccess: null, emulation: true, urlEncoded: true, encoding: "utf-8", evalScripts: false, evalResponse: false, timeout: 0, noCache: false }, initialize: function (e) {
                this.xhr = new Browser.Request();
                        this.setOptions(e);
                        this.headers = this.options.headers;
                }, onStateChange: function () {
                var e = this.xhr;
                        if (e.readyState != 4 || !this.running) {
                return;
                }
                this.running = false;
                        this.status = 0;
                        Function.attempt(function () {
                        var f = e.status;
                                this.status = (f == 1223) ? 204 : f;
                        }.bind(this));
                        e.onreadystatechange = d;
                        if (a) {
                e.onprogress = e.onloadstart = d;
                }
                clearTimeout(this.timer);
                        this.response = { text: this.xhr.responseText || "", xml: this.xhr.responseXML };
                        if (this.options.isSuccess.call(this, this.status)) {
                this.success(this.response.text, this.response.xml);
                }
                else {
                this.failure();
                }
                }, isSuccess: function () {
                var e = this.status;
                        return (e >= 200 && e < 300);
                }, isRunning: function () {
                return !!this.running;
                }, processScripts: function (e) {
                if (this.options.evalResponse || (/(ecma|java)script/).test(this.getHeader("Content-type"))) {
                return Browser.exec(e);
                }
                return e.stripScripts(this.options.evalScripts);
                }, success: function (f, e) {
                this.onSuccess(this.processScripts(f), e);
                }, onSuccess: function () {
                this.fireEvent("complete", arguments).fireEvent("success", arguments).callChain();
                }, failure: function () {
                this.onFailure();
                }, onFailure: function () {
                this.fireEvent("complete").fireEvent("failure", this.xhr);
                }, loadstart: function (e) {
                this.fireEvent("loadstart", [e, this.xhr]);
                }, progress: function (e) {
                this.fireEvent("progress", [e, this.xhr]);
                }, timeout: function () {
                this.fireEvent("timeout", this.xhr);
                }, setHeader: function (e, f) {
                this.headers[e] = f;
                        return this;
                }, getHeader: function (e) {
                return Function.attempt(function () {
                return this.xhr.getResponseHeader(e);
                }.bind(this));
                }, check: function () {
                if (!this.running) {
                return true;
                }
                switch (this.options.link) {
                case "cancel":
                        this.cancel();
                        return true;
                        case "chain":
                        this.chain(this.caller.pass(arguments, this));
                        return false;
                }
                return false;
                }, send: function (o) {
                if (!this.check(o)) {
                return this;
                }
                this.options.isSuccess = this.options.isSuccess || this.isSuccess;
                        this.running = true;
                        var l = typeOf(o);
                        if (l == "string" || l == "element") {
                o = { data: o };
                }
                var h = this.options;
                        o = Object.append({ data: h.data, url: h.url, method: h.method }, o);
                        var j = o.data, f = String(o.url), e = o.method.toLowerCase();
                        switch (typeOf(j)) {
                case "element":
                        j = document.id(j).toQueryString();
                        break;
                        case "object":
                        case "hash": j = Object.toQueryString(j);
                }
                if (this.options.format) {
                var m = "format=" + this.options.format;
                        j = (j) ? m + "&" + j : m;
                }
                if (this.options.emulation && !["get", "post"].contains(e)) {
                var k = "_method=" + e;
                        j = (j) ? k + "&" + j : k;
                        e = "post";
                }
                if (this.options.urlEncoded && ["post", "put"].contains(e)) {
                var g = (this.options.encoding) ? "; charset=" + this.options.encoding : "";
                        this.headers["Content-type"] = "application/x-www-form-urlencoded" + g;
                }
                if (!f) {
                f = document.location.pathname;
                }
                var i = f.lastIndexOf("/");
                        if (i > - 1 && (i = f.indexOf("#")) > - 1) {
                f = f.substr(0, i);
                }
                if (this.options.noCache) {
                f += (f.contains("?") ? "&" : "?") + String.uniqueID();
                }
                if (j && e == "get") {
                f += (f.contains("?") ? "&" : "?") + j;
                        j = null;
                }
                var n = this.xhr;
                        if (a) {
                n.onloadstart = this.loadstart.bind(this);
                        n.onprogress = this.progress.bind(this);
                }
                n.open(e.toUpperCase(), f, this.options.async, this.options.user, this.options.password);
                        if (this.options.user && "withCredentials" in n) {
                n.withCredentials = true;
                }
                n.onreadystatechange = this.onStateChange.bind(this);
                        Object.each(this.headers, function (q, p) {
                        try {
                        n.setRequestHeader(p, q);
                        }
                        catch (r) {
                        this.fireEvent("exception", [p, q]);
                        }
                        }, this);
                        this.fireEvent("request");
                        n.send(j);
                        if (!this.options.async) {
                this.onStateChange();
                }
                else {
                if (this.options.timeout) {
                this.timer = this.timeout.delay(this.options.timeout, this);
                }
                }
                return this;
                }, cancel: function () {
                if (!this.running) {
                return this;
                }
                this.running = false;
                        var e = this.xhr;
                        e.abort();
                        clearTimeout(this.timer);
                        e.onreadystatechange = d;
                        if (a) {
                e.onprogress = e.onloadstart = d;
                }
                this.xhr = new Browser.Request();
                        this.fireEvent("cancel");
                        return this;
                } });
                var b = {};
                ["get", "post", "put", "delete", "GET", "POST", "PUT", "DELETE"].each(function (e) {
        b[e] = function (g) {
        var f = { method: e };
                if (g != null) {
        f.data = g;
        }
        return this.send(f);
        };
        });
                c.implement(b);
                Element.Properties.send = { set: function (e) {
                var f = this.get("send").cancel();
                        f.setOptions(e);
                        return this;
                }, get: function () {
                var e = this.retrieve("send");
                        if (!e) {
                e = new c({ data: this, link: "cancel", method: this.get("method") || "post", url: this.get("action") });
                        this.store("send", e);
                }
                return e;
                } };
                Element.implement({ send: function (e) {
                var f = this.get("send");
                        f.send({ data: this, url: e || f.options.url });
                        return this;
                } });
                })();
        Request.HTML = new Class({ Extends: Request, options: { update: false, append: false, evalScripts: true, filter: false, headers: { Accept: "text/html, application/xml, text/xml, */*" } }, success: function (f) {
        var e = this.options, c = this.response;
                c.html = f.stripScripts(function (h) {
                c.javascript = h;
                });
                var d = c.html.match(/<body[^>]*>([\s\S]*?)<\/body>/i);
                if (d) {
        c.html = d[1];
        }
        var b = new Element("div").set("html", c.html);
                c.tree = b.childNodes;
                c.elements = b.getElements(e.filter || "*");
                if (e.filter) {
        c.tree = c.elements;
        }
        if (e.update) {
        var g = document.id(e.update).empty();
                if (e.filter) {
        g.adopt(c.elements);
        }
        else {
        g.set("html", c.html);
        }
        }
        else {
        if (e.append) {
        var a = document.id(e.append);
                if (e.filter) {
        c.elements.reverse().inject(a);
        }
        else {
        a.adopt(b.getChildren());
        }
        }
        }
        if (e.evalScripts) {
        Browser.exec(c.javascript);
        }
        this.onSuccess(c.tree, c.elements, c.html, c.javascript);
                } });
        Element.Properties.load = { set: function (a) {
        var b = this.get("load").cancel();
                b.setOptions(a);
                return this;
                }, get: function () {
        var a = this.retrieve("load");
                if (!a) {
        a = new Request.HTML({ data: this, link: "cancel", update: this, method: "get" });
                this.store("load", a);
        }
        return a;
                } };
        Element.implement({ load: function () {
        this.get("load").send(Array.link(arguments, { data: Type.isObject, url: Type.isString }));
                return this;
                } });
        if (typeof JSON == "undefined") {
this.JSON = {};
        }
JSON = new Hash({ stringify: JSON.stringify, parse: JSON.parse });
        (function () {
        var special = { "\b": "\\b", "\t": "\\t", "\n": "\\n", "\f": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\" };
                var escape = function (chr) {
                return special[chr] || "\\u" + ("0000" + chr.charCodeAt(0).toString(16)).slice( - 4);
                };
                JSON.validate = function (string) {
                string = string.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, "");
                        return (/^[\],:{}\s]*$/).test(string);
                };
                JSON.encode = JSON.stringify ? function (obj) {
                return JSON.stringify(obj);
                } : function (obj) {
        if (obj && obj.toJSON) {
        obj = obj.toJSON();
        }
        switch (typeOf(obj)) {
        case "string": return '"' + obj.replace(/[\x00-\x1f\\"]/g, escape) + '"';
                case "array": return "[" + obj.map(JSON.encode).clean() + "]";
                case "object":
                case "hash":
                var string = [];
                Object.each(obj, function (value, key) {
                var json = JSON.encode(value);
                        if (json) {
                string.push(JSON.encode(key) + ":" + json);
                }
                });
                return "{" + string + "}";
                case "number":
                case "boolean": return "" + obj;
                case "null": return "null";
        }
        return null;
        };
                JSON.decode = function (string, secure) {
                if (!string || typeOf(string) != "string") {
                return null;
                }
                if (secure || JSON.secure) {
                if (JSON.parse) {
                return JSON.parse(string);
                }
                if (!JSON.validate(string)) {
                throw new Error("JSON could not decode the input; security is enabled and the value is not secure.");
                }
                }
                return eval("(" + string + ")");
                };
                })();
        Request.JSON = new Class({ Extends: Request, options: { secure: true }, initialize: function (a) {
        this.parent(a);
                Object.append(this.headers, { Accept: "application/json", "X-Request": "JSON" });
                }, success: function (c) {
        var b;
                try {
                b = this.response.json = JSON.decode(c, this.options.secure);
                }
        catch (a) {
        this.fireEvent("error", [c, a]);
                return;
        }
        if (b == null) {
        this.onFailure();
        }
        else {
        this.onSuccess(b, c);
        }
        } });
        var Cookie = new Class({ Implements: Options, options: { path: "/", domain: false, duration: false, secure: false, document: document, encode: true }, initialize: function (b, a) {
        this.key = b;
                this.setOptions(a);
                }, write: function (b) {
        if (this.options.encode) {
        b = encodeURIComponent(b);
        }
        if (this.options.domain) {
        b += "; domain=" + this.options.domain;
        }
        if (this.options.path) {
        b += "; path=" + this.options.path;
        }
        if (this.options.duration) {
        var a = new Date();
                a.setTime(a.getTime() + this.options.duration * 24 * 60 * 60 * 1000);
                b += "; expires=" + a.toGMTString();
        }
        if (this.options.secure) {
        b += "; secure";
        }
        this.options.document.cookie = this.key + "=" + b;
                return this;
                }, read: function () {
        var a = this.options.document.cookie.match("(?:^|;)\\s*" + this.key.escapeRegExp() + "=([^;]*)");
                return (a) ? decodeURIComponent(a[1]) : null;
                }, dispose: function () {
        new Cookie(this.key, Object.merge({}, this.options, { duration: - 1 })).write("");
                return this;
                } });
        Cookie.write = function (b, c, a) {
        return new Cookie(b, a).write(c);
                };
        Cookie.read = function (a) {
        return new Cookie(a).read();
                };
        Cookie.dispose = function (b, a) {
        return new Cookie(b, a).dispose();
                };
        (function (i, k) {
        var l, f, e = [], c, b, d = k.createElement("div");
                var g = function () {
                clearTimeout(b);
                        if (l) {
                return;
                }
                Browser.loaded = l = true;
                        k.removeListener("DOMContentLoaded", g).removeListener("readystatechange", a);
                        k.fireEvent("domready");
                        i.fireEvent("domready");
                };
                var a = function () {
                for (var m = e.length; m--; ) {
                if (e[m]()) {
                g();
                        return true;
                }
                }
                return false;
                };
                var j = function () {
                clearTimeout(b);
                        if (!a()) {
                b = setTimeout(j, 10);
                }
                };
                k.addListener("DOMContentLoaded", g);
                var h = function () {
                try {
                d.doScroll();
                        return true;
                }
                catch (m) {
                }
                return false;
                };
                if (d.doScroll && !h()) {
        e.push(h);
                c = true;
        }
        if (k.readyState) {
        e.push(function () {
        var m = k.readyState;
                return (m == "loaded" || m == "complete");
        });
        }
        if ("onreadystatechange" in k) {
        k.addListener("readystatechange", a);
        }
        else {
        c = true;
        }
        if (c) {
        j();
        }
        Element.Events.domready = { onAdd: function (m) {
        if (l) {
        m.call(this);
        }
        } };
                Element.Events.load = { base: "load", onAdd: function (m) {
                if (f && this == i) {
                m.call(this);
                }
                }, condition: function () {
                if (this == i) {
                g();
                        delete Element.Events.load;
                }
                return true;
                } };
                i.addEvent("load", function () {
                f = true;
                });
                })(window, document);
        (function () {
        var Swiff = this.Swiff = new Class({ Implements: Options, options: { id: null, height: 1, width: 1, container: null, properties: {}, params: { quality: "high", allowScriptAccess: "always", wMode: "window", swLiveConnect: true }, callBacks: {}, vars: {} }, toElement: function () {
        return this.object;
        }, initialize: function (path, options) {
        this.instance = "Swiff_" + String.uniqueID();
                this.setOptions(options);
                options = this.options;
                var id = this.id = options.id || this.instance;
                var container = document.id(options.container);
                Swiff.CallBacks[this.instance] = {};
                var params = options.params, vars = options.vars, callBacks = options.callBacks;
                var properties = Object.append({ height: options.height, width: options.width }, options.properties);
                var self = this;
                for (var callBack in callBacks) {
        Swiff.CallBacks[this.instance][callBack] = (function (option) {
        return function () {
        return option.apply(self.object, arguments);
        };
        })(callBacks[callBack]);
                vars[callBack] = "Swiff.CallBacks." + this.instance + "." + callBack;
        }
        params.flashVars = Object.toQueryString(vars);
                if (Browser.ie) {
        properties.classid = "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000";
                params.movie = path;
        }
        else {
        properties.type = "application/x-shockwave-flash";
        }
        properties.data = path;
                var build = '<object id="' + id + '"';
                for (var property in properties) {
        build += " " + property + '="' + properties[property] + '"';
        }
        build += ">";
                for (var param in params) {
        if (params[param]) {
        build += '<param name="' + param + '" value="' + params[param] + '" />';
        }
        }
        build += "</object>";
                this.object = ((container) ? container.empty() : new Element("div")).set("html", build).firstChild;
        }, replaces: function (element) {
        element = document.id(element, true);
                element.parentNode.replaceChild(this.toElement(), element);
                return this;
        }, inject: function (element) {
        document.id(element, true).appendChild(this.toElement());
                return this;
        }, remote: function () {
        return Swiff.remote.apply(Swiff, [this.toElement()].append(arguments));
        } });
                Swiff.CallBacks = {};
                Swiff.remote = function (obj, fn) {
                var rs = obj.CallFunction('<invoke name="' + fn + '" returntype="javascript">' + __flash__argumentsToXML(arguments, 2) + "</invoke>");
                        return eval(rs);
                };
                })();
        if ("undefined" === typeof Joomla)
        var Joomla = {};
        Joomla.editors = {};
        Joomla.editors.instances = {};
        Joomla.submitform = function (a, b) {
        if ("undefined" === typeof b && (b = document.getElementById("adminForm"), !b))
                b = document.adminForm;
                if ("undefined" !== typeof a && '' !== a)
                b.task.value = a;
                if ("function" == typeof b.onsubmit)
                b.onsubmit();
                "function" == typeof b.fireEvent && b.fireEvent("submit");
                b.submit();
                };
        Joomla.submitbutton = function (a) {
        Joomla.submitform(a);
                };
        Joomla.JText = { strings: {}, _: function (a, b) {
        return "undefined" !== typeof this.strings[a.toUpperCase()] ? this.strings[a.toUpperCase()] : b;
                }, load: function (a) {
        for (var b in a)
                this.strings[b.toUpperCase()] = a[b];
                return this;
                } };
        Joomla.replaceTokens = function (a) {
        for (var b = document.getElementsByTagName("input"), c = 0; c < b.length; c++)
                if ("hidden" == b[c].type && 32 == b[c].name.length && "1" == b[c].value)
                b[c].name = a;
                };
        Joomla.isEmail = function (a) {
        return /^[\w-_.]*[\w-_.]@[\w].+[\w]+[\w]$/.test(a);
                };
        Joomla.checkAll = function (a, b) {
        b || (b = "cb");
                if (a.form) {
        for (var c = 0, d = 0, f = a.form.elements.length; d < f; d++) {
        var e = a.form.elements[d];
                if (e.type == a.type && (b && 0 == e.id.indexOf(b) || !b))
                e.checked = a.checked, c += !0 == e.checked ? 1 : 0;
        }
        if (a.form.boxchecked)
                a.form.boxchecked.value = c;
                return !0;
        }
        return !1;
                };
        Joomla.renderMessages = function (a) {
        Joomla.removeMessages();
                var b = document.id("system-message-container"), c = new Element("dl", { id: "system-message", role: "alert" });
                Object.each(a, function (a, b) {
                (new Element("dt", { "class": b, html: b })).inject(c);
                        var e = new Element("dd", { "class": b });
                        e.addClass("message");
                        var g = new Element("ul");
                        Array.each(a, function (a) {
                        (new Element("li", { html: a })).inject(g);
                        }, this);
                        g.inject(e);
                        e.inject(c);
                }, this);
                c.inject(b);
                };
        Joomla.removeMessages = function () {
        $$("#system-message-container > *").destroy();
                };
        Joomla.isChecked = function (a, b) {
        if ("undefined" === typeof b && (b = document.getElementById("adminForm"), !b))
                b = document.adminForm;
                !0 == a ? b.boxchecked.value++ : b.boxchecked.value--;
                };
        Joomla.popupWindow = function (a, b, c, d, f) {
        window.open(a, b, "height=" + d + ",width=" + c + ",top=" + (screen.height - d) / 2 + ",left=" + (screen.width - c) / 2 + ",scrollbars=" + f + ",resizable").window.focus();
                };
        Joomla.tableOrdering = function (a, b, c, d) {
        if ("undefined" === typeof d && (d = document.getElementById("adminForm"), !d))
                d = document.adminForm;
                d.filter_order.value = a;
                d.filter_order_Dir.value = b;
                Joomla.submitform(c, d);
                };
        function writeDynaList(a, b, c, d, f) {
        var a = "\n\t<select " + a + ">", e = 0;
                for (x in b) {
        if (b[x][0] == c) {
        var g = "";
                if (d == c && f == b[x][1] || 0 == e && d != c)
                g = 'selected="selected"';
                a += '\n\t\t<option value="' + b[x][1] + '" ' + g + ">" + b[x][2] + "</option>";
        }
        e++;
        }
        document.writeln(a + "\n\t</select>");
                }
function changeDynaList(a, b, c, d, f) {
a = document.adminForm[a];
        for (i in a.options.length)
        a.options[i] = null;
        i = 0;
        for (x in b)
        if (b[x][0] == c) {
opt = new Option;
        opt.value = b[x][1];
        opt.text = b[x][2];
        if (d == c && f == opt.value || 0 == i)
        opt.selected = !0;
        a.options[i++] = opt;
}
a.length = i;
        }
function radioGetCheckedValue(a) {
if (!a)
        return "";
        var b = a.length;
        if (void 0 == b)
        return a.checked ? a.value : "";
        for (var c = 0; c < b; c++)
        if (a[c].checked)
        return a[c].value;
        return "";
        }
function getSelectedValue(a, b) {
var c = document[a][b];
        i = c.selectedIndex;
        return null != i && - 1 < i ? c.options[i].value : null;
        }
function checkAll(a, b) {
b || (b = "cb");
        if (a.form) {
for (var c = 0, d = 0, f = a.form.elements.length; d < f; d++) {
var e = a.form.elements[d];
        if (e.type == a.type && (b && 0 == e.id.indexOf(b) || !b))
        e.checked = a.checked, c += !0 == e.checked ? 1 : 0;
}
if (a.form.boxchecked)
        a.form.boxchecked.value = c;
        return !0;
}
for (var e = document.adminForm, c = e.toggle.checked, f = a, g = 0, d = 0; d < f; d++) {
var h = e[b + "" + d];
        if (h)
        h.checked = c, g++;
}
document.adminForm.boxchecked.value = c ? g : 0;
        }
function listItemTask(a, b) {
var c = document.adminForm, d = c[a];
        if (d) {
for (var f = 0; ; f++) {
var e = c["cb" + f];
        if (!e)
        break;
        e.checked = !1;
}
d.checked = !0;
        c.boxchecked.value = 1;
        submitbutton(b);
}
return !1;
        }
function isChecked(a) {
!0 == a ? document.adminForm.boxchecked.value++ : document.adminForm.boxchecked.value--;
        }
function submitbutton(a) {
submitform(a);
        }
function submitform(a) {
if (a)
        document.adminForm.task.value = a;
        if ("function" == typeof document.adminForm.onsubmit)
        document.adminForm.onsubmit();
        "function" == typeof document.adminForm.fireEvent && document.adminForm.fireEvent("submit");
        document.adminForm.submit();
        }
function popupWindow(a, b, c, d, f) {
winprops = "height=" + d + ",width=" + c + ",top=" + (screen.height - d) / 2 + ",left=" + (screen.width - c) / 2 + ",scrollbars=" + f + ",resizable";
        win = window.open(a, b, winprops);
        4 <= parseInt(navigator.appVersion) && win.window.focus();
        }
function tableOrdering(a, b, c) {
var d = document.adminForm;
        d.filter_order.value = a;
        d.filter_order_Dir.value = b;
        submitform(c);
        }
function saveorder(a, b) {
checkAll_button(a, b);
        }
function checkAll_button(a, b) {
b || (b = "saveorder");
        for (var c = 0; c <= a; c++) {
var d = document.adminForm["cb" + c];
        if (d) {
if (!1 == d.checked)
        d.checked = !0;
}
else {
alert("You cannot change the order of items, as an item in the list is `Checked Out`");
        return;
}
}
submitform(b);
        }
;
        MooTools.More = { version: "1.4.0.1", build: "a4244edf2aa97ac8a196fc96082dd35af1abab87" };
        (function () {
        Events.Pseudos = function (h, e, f) {
        var d = "_monitorEvents:";
                var c = function (i) {
                return { store: i.store ? function (j, k) {
                i.store(d + j, k);
                } : function (j, k) {
                (i._monitorEvents || (i._monitorEvents = {}))[j] = k;
                }, retrieve: i.retrieve ? function (j, k) {
                return i.retrieve(d + j, k);
                } : function (j, k) {
                if (!i._monitorEvents) {
                return k;
                }
                return i._monitorEvents[j] || k;
                } };
                };
                var g = function (k) {
                if (k.indexOf(":") == - 1 || !h) {
                return null;
                }
                var j = Slick.parse(k).expressions[0][0], p = j.pseudos, i = p.length, o = [];
                        while (i--) {
                var n = p[i].key, m = h[n];
                        if (m != null) {
                o.push({ event: j.tag, value: p[i].value, pseudo: n, original: k, listener: m });
                }
                }
                return o.length ? o : null;
                };
                return { addEvent: function (m, p, j) {
                var n = g(m);
                        if (!n) {
                return e.call(this, m, p, j);
                }
                var k = c(this), r = k.retrieve(m, []), i = n[0].event, l = Array.slice(arguments, 2), o = p, q = this;
                        n.each(function (s) {
                        var t = s.listener, u = o;
                                if (t == false) {
                        i += ":" + s.pseudo + "(" + s.value + ")";
                        }
                        else {
                        o = function () {
                        t.call(q, s, u, arguments, o);
                        };
                        }
                        });
                        r.include({ type: i, event: p, monitor: o });
                        k.store(m, r);
                        if (m != i) {
                e.apply(this, [m, p].concat(l));
                }
                return e.apply(this, [i, o].concat(l));
                }, removeEvent: function (m, l) {
                var k = g(m);
                        if (!k) {
                return f.call(this, m, l);
                }
                var n = c(this), j = n.retrieve(m);
                        if (!j) {
                return this;
                }
                var i = Array.slice(arguments, 2);
                        f.apply(this, [m, l].concat(i));
                        j.each(function (o, p) {
                        if (!l || o.event == l) {
                        f.apply(this, [o.type, o.monitor].concat(i));
                        }
                        delete j[p];
                        }, this);
                        n.store(m, j);
                        return this;
                } };
        };
                var b = { once: function (e, f, d, c) {
                f.apply(this, d);
                        this.removeEvent(e.event, c).removeEvent(e.original, f);
                }, throttle: function (d, e, c) {
                if (!e._throttled) {
                e.apply(this, c);
                        e._throttled = setTimeout(function () {
                        e._throttled = false;
                        }, d.value || 250);
                }
                }, pause: function (d, e, c) {
                clearTimeout(e._pause);
                        e._pause = e.delay(d.value || 250, this, c);
                } };
                Events.definePseudo = function (c, d) {
                b[c] = d;
                        return this;
                };
                Events.lookupPseudo = function (c) {
                return b[c];
                };
                var a = Events.prototype;
                Events.implement(Events.Pseudos(b, a.addEvent, a.removeEvent));
                ["Request", "Fx"].each(function (c) {
        if (this[c]) {
        this[c].implement(Events.prototype);
        }
        });
                })();
        Class.refactor = function (b, a) {
        Object.each(a, function (e, d) {
        var c = b.prototype[d];
                c = (c && c.$origin) || c || function () {
        };
                b.implement(d, (typeof e == "function") ? function () {
                var f = this.previous;
                        this.previous = c;
                        var g = e.apply(this, arguments);
                        this.previous = f;
                        return g;
                } : e);
        });
                return b;
                };
        Class.Mutators.Binds = function (a) {
        if (!this.prototype.initialize) {
        this.implement("initialize", function () {
        });
        }
        return Array.from(a).concat(this.prototype.Binds || []);
                };
        Class.Mutators.initialize = function (a) {
        return function () {
        Array.from(this.Binds).each(function (b) {
        var c = this[b];
                if (c) {
        this[b] = c.bind(this);
        }
        }, this);
                return a.apply(this, arguments);
        };
                };
        Class.Occlude = new Class({ occlude: function (c, b) {
        b = document.id(b || this.element);
                var a = b.retrieve(c || this.property);
                if (a && !this.occluded) {
        return (this.occluded = a);
        }
        this.occluded = false;
                b.store(c || this.property, this);
                return this.occluded;
                } });
        (function () {
        var a = { wait: function (b) {
        return this.chain(function () {
        this.callChain.delay(b == null ? 500 : b, this);
                return this;
        }.bind(this));
        } };
                Chain.implement(a);
                if (this.Fx) {
        Fx.implement(a);
        }
        if (this.Element && Element.implement && this.Fx) {
        Element.implement({ chains: function (b) {
        Array.from(b || ["tween", "morph", "reveal"]).each(function (c) {
        c = this.get(c);
                if (!c) {
        return;
        }
        c.setOptions({ link: "chain" });
        }, this);
                return this;
        }, pauseFx: function (c, b) {
        this.chains(b).get(b || "tween").wait(c);
                return this;
        } });
        }
        })();
        (function (a) {
        Array.implement({ min: function () {
        return Math.min.apply(null, this);
        }, max: function () {
        return Math.max.apply(null, this);
        }, average: function () {
        return this.length ? this.sum() / this.length : 0;
        }, sum: function () {
        var b = 0, c = this.length;
                if (c) {
        while (c--) {
        b += this[c];
        }
        }
        return b;
        }, unique: function () {
        return [].combine(this);
        }, shuffle: function () {
        for (var c = this.length; c && --c; ) {
        var b = this[c], d = Math.floor(Math.random() * (c + 1));
                this[c] = this[d];
                this[d] = b;
        }
        return this;
        }, reduce: function (d, e) {
        for (var c = 0, b = this.length; c < b; c++) {
        if (c in this) {
        e = e === a ? this[c] : d.call(null, e, this[c], c, this);
        }
        }
        return e;
        }, reduceRight: function (c, d) {
        var b = this.length;
                while (b--) {
        if (b in this) {
        d = d === a ? this[b] : c.call(null, d, this[b], b, this);
        }
        }
        return d;
        } });
                })();
        (function () {
        var b = function (c) {
        return c != null;
        };
                var a = Object.prototype.hasOwnProperty;
                Object.extend({ getFromPath: function (e, f) {
                if (typeof f == "string") {
                f = f.split(".");
                }
                for (var d = 0, c = f.length; d < c; d++) {
                if (a.call(e, f[d])) {
                e = e[f[d]];
                }
                else {
                return null;
                }
                }
                return e;
                }, cleanValues: function (c, e) {
                e = e || b;
                        for (var d in c) {
                if (!e(c[d])) {
                delete c[d];
                }
                }
                return c;
                }, erase: function (c, d) {
                if (a.call(c, d)) {
                delete c[d];
                }
                return c;
                }, run: function (d) {
                var c = Array.slice(arguments, 1);
                        for (var e in d) {
                if (d[e].apply) {
                d[e].apply(d, c);
                }
                }
                return d;
                } });
                })();
        (function () {
        var b = null, a = {}, e = {};
                var d = function (g) {
                if (instanceOf(g, f.Set)) {
                return g;
                }
                else {
                return a[g];
                }
                };
                var f = this.Locale = { define: function (g, k, i, j) {
                var h;
                        if (instanceOf(g, f.Set)) {
                h = g.name;
                        if (h) {
                a[h] = g;
                }
                }
                else {
                h = g;
                        if (!a[h]) {
                a[h] = new f.Set(h);
                }
                g = a[h];
                }
                if (k) {
                g.define(k, i, j);
                }
                if (k == "cascade") {
                return f.inherit(h, i);
                }
                if (!b) {
                b = g;
                }
                return g;
                }, use: function (g) {
                g = d(g);
                        if (g) {
                b = g;
                        this.fireEvent("change", g);
                        this.fireEvent("langChange", g.name);
                }
                return this;
                }, getCurrent: function () {
                return b;
                }, get: function (h, g) {
                return (b) ? b.get(h, g) : "";
                }, inherit: function (g, h, i) {
                g = d(g);
                        if (g) {
                g.inherit(h, i);
                }
                return this;
                }, list: function () {
                return Object.keys(a);
                } };
                Object.append(f, new Events);
                f.Set = new Class({ sets: {}, inherits: { locales: [], sets: {} }, initialize: function (g) {
                this.name = g || "";
                }, define: function (j, h, i) {
                var g = this.sets[j];
                        if (!g) {
                g = {};
                }
                if (h) {
                if (typeOf(h) == "object") {
                g = Object.merge(g, h);
                }
                else {
                g[h] = i;
                }
                }
                this.sets[j] = g;
                        return this;
                }, get: function (s, k, r) {
                var q = Object.getFromPath(this.sets, s);
                        if (q != null) {
                var n = typeOf(q);
                        if (n == "function") {
                q = q.apply(null, Array.from(k));
                }
                else {
                if (n == "object") {
                q = Object.clone(q);
                }
                }
                return q;
                }
                var j = s.indexOf("."), p = j < 0 ? s : s.substr(0, j), m = (this.inherits.sets[p] || []).combine(this.inherits.locales).include("en-US");
                        if (!r) {
                r = [];
                }
                for (var h = 0, g = m.length; h < g; h++) {
                if (r.contains(m[h])) {
                continue;
                }
                r.include(m[h]);
                        var o = a[m[h]];
                        if (!o) {
                continue;
                }
                q = o.get(s, k, r);
                        if (q != null) {
                return q;
                }
                }
                return "";
                }, inherit: function (h, i) {
                h = Array.from(h);
                        if (i && !this.inherits.sets[i]) {
                this.inherits.sets[i] = [];
                }
                var g = h.length;
                        while (g--) {
                (i ? this.inherits.sets[i] : this.inherits.locales).unshift(h[g]);
                }
                return this;
                } });
                var c = MooTools.lang = {};
                Object.append(c, f, { setLanguage: f.use, getCurrentLanguage: function () {
                var g = f.getCurrent();
                        return (g) ? g.name : null;
                }, set: function () {
                f.define.apply(this, arguments);
                        return this;
                }, get: function (i, h, g) {
                if (h) {
                i += "." + h;
                }
                return f.get(i, g);
                } });
                })();
        Locale.define("en-US", "Date", { months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], months_abbr: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], days_abbr: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], dateOrder: ["month", "date", "year"], shortDate: "%m/%d/%Y", shortTime: "%I:%M%p", AM: "AM", PM: "PM", firstDayOfWeek: 0, ordinal: function (a) {
        return (a > 3 && a < 21) ? "th" : ["th", "st", "nd", "rd", "th"][Math.min(a % 10, 4)];
                }, lessThanMinuteAgo: "less than a minute ago", minuteAgo: "about a minute ago", minutesAgo: "{delta} minutes ago", hourAgo: "about an hour ago", hoursAgo: "about {delta} hours ago", dayAgo: "1 day ago", daysAgo: "{delta} days ago", weekAgo: "1 week ago", weeksAgo: "{delta} weeks ago", monthAgo: "1 month ago", monthsAgo: "{delta} months ago", yearAgo: "1 year ago", yearsAgo: "{delta} years ago", lessThanMinuteUntil: "less than a minute from now", minuteUntil: "about a minute from now", minutesUntil: "{delta} minutes from now", hourUntil: "about an hour from now", hoursUntil: "about {delta} hours from now", dayUntil: "1 day from now", daysUntil: "{delta} days from now", weekUntil: "1 week from now", weeksUntil: "{delta} weeks from now", monthUntil: "1 month from now", monthsUntil: "{delta} months from now", yearUntil: "1 year from now", yearsUntil: "{delta} years from now" });
        (function () {
        var a = this.Date;
                var f = a.Methods = { ms: "Milliseconds", year: "FullYear", min: "Minutes", mo: "Month", sec: "Seconds", hr: "Hours" };
                ["Date", "Day", "FullYear", "Hours", "Milliseconds", "Minutes", "Month", "Seconds", "Time", "TimezoneOffset", "Week", "Timezone", "GMTOffset", "DayOfYear", "LastMonth", "LastDayOfMonth", "UTCDate", "UTCDay", "UTCFullYear", "AMPM", "Ordinal", "UTCHours", "UTCMilliseconds", "UTCMinutes", "UTCMonth", "UTCSeconds", "UTCMilliseconds"].each(function (s) {
        a.Methods[s.toLowerCase()] = s;
        });
                var p = function (u, t, s) {
                if (t == 1) {
                return u;
                }
                return u < Math.pow(10, t - 1) ? (s || "0") + p(u, t - 1, s) : u;
                };
                a.implement({ set: function (u, s) {
                u = u.toLowerCase();
                        var t = f[u] && "set" + f[u];
                        if (t && this[t]) {
                this[t](s);
                }
                return this;
                }.overloadSetter(), get: function (t) {
                t = t.toLowerCase();
                        var s = f[t] && "get" + f[t];
                        if (s && this[s]) {
                return this[s]();
                }
                return null;
                }.overloadGetter(), clone: function () {
                return new a(this.get("time"));
                }, increment: function (s, u) {
                s = s || "day";
                        u = u != null ? u : 1;
                        switch (s) {
                case "year": return this.increment("month", u * 12);
                        case "month":
                        var t = this.get("date");
                        this.set("date", 1).set("mo", this.get("mo") + u);
                        return this.set("date", t.min(this.get("lastdayofmonth")));
                        case "week": return this.increment("day", u * 7);
                        case "day": return this.set("date", this.get("date") + u);
                }
                if (!a.units[s]) {
                throw new Error(s + " is not a supported interval");
                }
                return this.set("time", this.get("time") + u * a.units[s]());
                }, decrement: function (s, t) {
                return this.increment(s, - 1 * (t != null ? t : 1));
                }, isLeapYear: function () {
                return a.isLeapYear(this.get("year"));
                }, clearTime: function () {
                return this.set({ hr: 0, min: 0, sec: 0, ms: 0 });
                }, diff: function (t, s) {
                if (typeOf(t) == "string") {
                t = a.parse(t);
                }
                return ((t - this) / a.units[s || "day"](3, 3)).round();
                }, getLastDayOfMonth: function () {
                return a.daysInMonth(this.get("mo"), this.get("year"));
                }, getDayOfYear: function () {
                return (a.UTC(this.get("year"), this.get("mo"), this.get("date") + 1) - a.UTC(this.get("year"), 0, 1)) / a.units.day();
                }, setDay: function (t, s) {
                if (s == null) {
                s = a.getMsg("firstDayOfWeek");
                        if (s === "") {
                s = 1;
                }
                }
                t = (7 + a.parseDay(t, true) - s) % 7;
                        var u = (7 + this.get("day") - s) % 7;
                        return this.increment("day", t - u);
                }, getWeek: function (v) {
                if (v == null) {
                v = a.getMsg("firstDayOfWeek");
                        if (v === "") {
                v = 1;
                }
                }
                var x = this, u = (7 + x.get("day") - v) % 7, t = 0, w;
                        if (v == 1) {
                var y = x.get("month"), s = x.get("date") - u;
                        if (y == 11 && s > 28) {
                return 1;
                }
                if (y == 0 && s < - 2) {
                x = new a(x).decrement("day", u);
                        u = 0;
                }
                w = new a(x.get("year"), 0, 1).get("day") || 7;
                        if (w > 4) {
                t = - 7;
                }
                }
                else {
                w = new a(x.get("year"), 0, 1).get("day");
                }
                t += x.get("dayofyear");
                        t += 6 - u;
                        t += (7 + w - v) % 7;
                        return (t / 7);
                }, getOrdinal: function (s) {
                return a.getMsg("ordinal", s || this.get("date"));
                }, getTimezone: function () {
                return this.toString().replace(/^.*? ([A-Z]{3}).[0-9]{4}.*$/, "$1").replace(/^.*?\(([A-Z])[a-z]+ ([A-Z])[a-z]+ ([A-Z])[a-z]+\)$/, "$1$2$3");
                }, getGMTOffset: function () {
                var s = this.get("timezoneOffset");
                        return ((s > 0) ? "-" : "+") + p((s.abs() / 60).floor(), 2) + p(s % 60, 2);
                }, setAMPM: function (s) {
                s = s.toUpperCase();
                        var t = this.get("hr");
                        if (t > 11 && s == "AM") {
                return this.decrement("hour", 12);
                }
                else {
                if (t < 12 && s == "PM") {
                return this.increment("hour", 12);
                }
                }
                return this;
                }, getAMPM: function () {
                return (this.get("hr") < 12) ? "AM" : "PM";
                }, parse: function (s) {
                this.set("time", a.parse(s));
                        return this;
                }, isValid: function (s) {
                if (!s) {
                s = this;
                }
                return typeOf(s) == "date" && !isNaN(s.valueOf());
                }, format: function (s) {
                if (!this.isValid()) {
                return "invalid date";
                }
                if (!s) {
                s = "%x %X";
                }
                if (typeof s == "string") {
                s = g[s.toLowerCase()] || s;
                }
                if (typeof s == "function") {
                return s(this);
                }
                var t = this;
                        return s.replace(/%([a-z%])/gi, function (v, u) {
                        switch (u) {
                        case "a": return a.getMsg("days_abbr")[t.get("day")];
                                case "A": return a.getMsg("days")[t.get("day")];
                                case "b": return a.getMsg("months_abbr")[t.get("month")];
                                case "B": return a.getMsg("months")[t.get("month")];
                                case "c": return t.format("%a %b %d %H:%M:%S %Y");
                                case "d": return p(t.get("date"), 2);
                                case "e": return p(t.get("date"), 2, " ");
                                case "H": return p(t.get("hr"), 2);
                                case "I": return p((t.get("hr") % 12) || 12, 2);
                                case "j": return p(t.get("dayofyear"), 3);
                                case "k": return p(t.get("hr"), 2, " ");
                                case "l": return p((t.get("hr") % 12) || 12, 2, " ");
                                case "L": return p(t.get("ms"), 3);
                                case "m": return p((t.get("mo") + 1), 2);
                                case "M": return p(t.get("min"), 2);
                                case "o": return t.get("ordinal");
                                case "p": return a.getMsg(t.get("ampm"));
                                case "s": return Math.round(t / 1000);
                                case "S": return p(t.get("seconds"), 2);
                                case "T": return t.format("%H:%M:%S");
                                case "U": return p(t.get("week"), 2);
                                case "w": return t.get("day");
                                case "x": return t.format(a.getMsg("shortDate"));
                                case "X": return t.format(a.getMsg("shortTime"));
                                case "y": return t.get("year").toString().substr(2);
                                case "Y": return t.get("year");
                                case "z": return t.get("GMTOffset");
                                case "Z": return t.get("Timezone");
                        }
                        return u;
                        });
                }, toISOString: function () {
                return this.format("iso8601");
                } }).alias({ toJSON: "toISOString", compare: "diff", strftime: "format" });
                var k = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], h = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
                var g = { db: "%Y-%m-%d %H:%M:%S", compact: "%Y%m%dT%H%M%S", "short": "%d %b %H:%M", "long": "%B %d, %Y %H:%M", rfc822: function (s) {
                return k[s.get("day")] + s.format(", %d ") + h[s.get("month")] + s.format(" %Y %H:%M:%S %Z");
                }, rfc2822: function (s) {
                return k[s.get("day")] + s.format(", %d ") + h[s.get("month")] + s.format(" %Y %H:%M:%S %z");
                }, iso8601: function (s) {
                return (s.getUTCFullYear() + "-" + p(s.getUTCMonth() + 1, 2) + "-" + p(s.getUTCDate(), 2) + "T" + p(s.getUTCHours(), 2) + ":" + p(s.getUTCMinutes(), 2) + ":" + p(s.getUTCSeconds(), 2) + "." + p(s.getUTCMilliseconds(), 3) + "Z");
                } };
                var c = [], n = a.parse;
                var r = function (v, x, u) {
                var t = - 1, w = a.getMsg(v + "s");
                        switch (typeOf(x)) {
                case "object":
                        t = w[x.get(v)];
                        break;
                        case "number":
                        t = w[x];
                        if (!t) {
                throw new Error("Invalid " + v + " index: " + x);
                }
                break;
                        case "string":
                        var s = w.filter(function (y) {
                        return this.test(y);
                        }, new RegExp("^" + x, "i"));
                        if (!s.length) {
                throw new Error("Invalid " + v + " string");
                }
                if (s.length > 1) {
                throw new Error("Ambiguous " + v);
                }
                t = s[0];
                }
                return (u) ? w.indexOf(t) : t;
                };
                var i = 1900, o = 70;
                a.extend({ getMsg: function (t, s) {
                return Locale.get("Date." + t, s);
                }, units: { ms: Function.from(1), second: Function.from(1000), minute: Function.from(60000), hour: Function.from(3600000), day: Function.from(86400000), week: Function.from(608400000), month: function (t, s) {
                var u = new a;
                        return a.daysInMonth(t != null ? t : u.get("mo"), s != null ? s : u.get("year")) * 86400000;
                }, year: function (s) {
                s = s || new a().get("year");
                        return a.isLeapYear(s) ? 31622400000 : 31536000000;
                } }, daysInMonth: function (t, s) {
                return [31, a.isLeapYear(s) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][t];
                }, isLeapYear: function (s) {
                return ((s % 4 === 0) && (s % 100 !== 0)) || (s % 400 === 0);
                }, parse: function (v) {
                var u = typeOf(v);
                        if (u == "number") {
                return new a(v);
                }
                if (u != "string") {
                return v;
                }
                v = v.clean();
                        if (!v.length) {
                return null;
                }
                var s;
                        c.some(function (w) {
                        var t = w.re.exec(v);
                                return (t) ? (s = w.handler(t)) : false;
                        });
                        if (!(s && s.isValid())) {
                s = new a(n(v));
                        if (!(s && s.isValid())) {
                s = new a(v.toInt());
                }
                }
                return s;
                }, parseDay: function (s, t) {
                return r("day", s, t);
                }, parseMonth: function (t, s) {
                return r("month", t, s);
                }, parseUTC: function (t) {
                var s = new a(t);
                        var u = a.UTC(s.get("year"), s.get("mo"), s.get("date"), s.get("hr"), s.get("min"), s.get("sec"), s.get("ms"));
                        return new a(u);
                }, orderIndex: function (s) {
                return a.getMsg("dateOrder").indexOf(s) + 1;
                }, defineFormat: function (s, t) {
                g[s] = t;
                        return this;
                }, parsePatterns: c, defineParser: function (s) {
                c.push((s.re && s.handler) ? s : l(s));
                        return this;
                }, defineParsers: function () {
                Array.flatten(arguments).each(a.defineParser);
                        return this;
                }, define2DigitYearStart: function (s) {
                o = s % 100;
                        i = s - o;
                        return this;
                } }).extend({ defineFormats: a.defineFormat.overloadSetter() });
                var d = function (s) {
                return new RegExp("(?:" + a.getMsg(s).map(function (t) {
                return t.substr(0, 3);
                }).join("|") + ")[a-z]*");
                };
                var m = function (s) {
                switch (s) {
                case "T": return "%H:%M:%S";
                        case "x": return ((a.orderIndex("month") == 1) ? "%m[-./]%d" : "%d[-./]%m") + "([-./]%y)?";
                        case "X": return "%H([.:]%M)?([.:]%S([.:]%s)?)? ?%p? ?%z?";
                }
                return null;
                };
                var j = { d: /[0-2]?[0-9]|3[01]/, H: /[01]?[0-9]|2[0-3]/, I: /0?[1-9]|1[0-2]/, M: /[0-5]?\d/, s: /\d+/, o: /[a-z]*/, p: /[ap]\.?m\.?/, y: /\d{2}|\d{4}/, Y: /\d{4}/, z: /Z|[+-]\d{2}(?::?\d{2})?/ };
                j.m = j.I;
                j.S = j.M;
                var e;
                var b = function (s) {
                e = s;
                        j.a = j.A = d("days");
                        j.b = j.B = d("months");
                        c.each(function (u, t) {
                        if (u.format) {
                        c[t] = l(u.format);
                        }
                        });
                };
                var l = function (u) {
                if (!e) {
                return { format: u };
                }
                var s = [];
                        var t = (u.source || u).replace(/%([a-z])/gi, function (w, v) {
                return m(v) || w;
                }).replace(/\((?!\?)/g, "(?:").replace(/ (?!\?|\*)/g, ",? ").replace(/%([a-z%])/gi, function (w, v) {
                var x = j[v];
                        if (!x) {
                return v;
                }
                s.push(v);
                        return "(" + x.source + ")";
                }).replace(/\[a-z\]/gi, "[a-z\\u00c0-\\uffff;&]");
                        return { format: u, re: new RegExp("^" + t + "$", "i"), handler: function (y) {
                        y = y.slice(1).associate(s);
                                var v = new a().clearTime(), x = y.y || y.Y;
                                if (x != null) {
                        q.call(v, "y", x);
                        }
                        if ("d" in y) {
                        q.call(v, "d", 1);
                        }
                        if ("m" in y || y.b || y.B) {
                        q.call(v, "m", 1);
                        }
                        for (var w in y) {
                        q.call(v, w, y[w]);
                        }
                        return v;
                        } };
                };
                var q = function (s, t) {
                if (!t) {
                return this;
                }
                switch (s) {
                case "a":
                        case "A": return this.set("day", a.parseDay(t, true));
                        case "b":
                        case "B": return this.set("mo", a.parseMonth(t, true));
                        case "d": return this.set("date", t);
                        case "H":
                        case "I": return this.set("hr", t);
                        case "m": return this.set("mo", t - 1);
                        case "M": return this.set("min", t);
                        case "p": return this.set("ampm", t.replace(/\./g, ""));
                        case "S": return this.set("sec", t);
                        case "s": return this.set("ms", ("0." + t) * 1000);
                        case "w": return this.set("day", t);
                        case "Y": return this.set("year", t);
                        case "y":
                        t = + t;
                        if (t < 100) {
                t += i + (t < o ? 100 : 0);
                }
                return this.set("year", t);
                        case "z":
                        if (t == "Z") {
                t = "+00";
                }
                var u = t.match(/([+-])(\d{2}):?(\d{2})?/);
                        u = (u[1] + "1") * (u[2] * 60 + ( + u[3] || 0)) + this.getTimezoneOffset();
                        return this.set("time", this - u * 60000);
                }
                return this;
                };
                a.defineParsers("%Y([-./]%m([-./]%d((T| )%X)?)?)?", "%Y%m%d(T%H(%M%S?)?)?", "%x( %X)?", "%d%o( %b( %Y)?)?( %X)?", "%b( %d%o)?( %Y)?( %X)?", "%Y %b( %d%o( %X)?)?", "%o %b %d %X %z %Y", "%T", "%H:%M( ?%p)?");
                Locale.addEvent("change", function (s) {
                if (Locale.get("Date")) {
                b(s);
                }
                }).fireEvent("change", Locale.getCurrent());
                })();
        Date.implement({ timeDiffInWords: function (a) {
        return Date.distanceOfTimeInWords(this, a || new Date);
                }, timeDiff: function (f, c) {
        if (f == null) {
        f = new Date;
        }
        var h = ((f - this) / 1000).floor().abs();
                var e = [], a = [60, 60, 24, 365, 0], d = ["s", "m", "h", "d", "y"], g, b;
                for (var i = 0; i < a.length; i++) {
        if (i && !h) {
        break;
        }
        g = h;
                if ((b = a[i])) {
        g = (h % b);
                h = (h / b).floor();
        }
        e.unshift(g + (d[i] || ""));
        }
        return e.join(c || ":");
                } }).extend({ distanceOfTimeInWords: function (b, a) {
return Date.getTimePhrase(((a - b) / 1000).toInt());
        }, getTimePhrase: function (f) {
var d = (f < 0) ? "Until" : "Ago";
        if (f < 0) {
f *= - 1;
}
var b = { minute: 60, hour: 60, day: 24, week: 7, month: 52 / 12, year: 12, eon: Infinity };
        var e = "lessThanMinute";
        for (var c in b) {
var a = b[c];
        if (f < 1.5 * a) {
if (f > 0.75 * a) {
e = c;
}
break;
}
f /= a;
        e = c + "s";
}
f = f.round();
        return Date.getMsg(e + d, f).substitute({ delta: f });
        } }).defineParsers({ re: /^(?:tod|tom|yes)/i, handler: function (a) {
var b = new Date().clearTime();
        switch (a[0]) {
case "tom": return b.increment();
        case "yes": return b.decrement();
        default: return b;
}
} }, { re: /^(next|last) ([a-z]+)$/i, handler: function (e) {
var f = new Date().clearTime();
        var b = f.getDay();
        var c = Date.parseDay(e[2], true);
        var a = c - b;
        if (c <= b) {
a += 7;
}
if (e[1] == "last") {
a -= 7;
}
return f.set("date", f.getDate() + a);
        } }).alias("timeAgoInWords", "timeDiffInWords");
        Locale.define("en-US", "Number", { decimal: ".", group: ",", currency: { prefix: "$ " } });
        Number.implement({ format: function (q) {
        var n = this;
                q = q ? Object.clone(q) : {};
                var a = function (i) {
                if (q[i] != null) {
                return q[i];
                }
                return Locale.get("Number." + i);
                };
                var f = n < 0, h = a("decimal"), k = a("precision"), o = a("group"), c = a("decimals");
                if (f) {
        var e = a("negative") || {};
                if (e.prefix == null && e.suffix == null) {
        e.prefix = "-";
        }
        ["prefix", "suffix"].each(function (i) {
        if (e[i]) {
        q[i] = a(i) + e[i];
        }
        });
                n = - n;
        }
        var l = a("prefix"), p = a("suffix");
                if (c !== "" && c >= 0 && c <= 20) {
        n = n.toFixed(c);
        }
        if (k >= 1 && k <= 21) {
        n = ( + n).toPrecision(k);
        }
        n += "";
                var m;
                if (a("scientific") === false && n.indexOf("e") > - 1) {
        var j = n.split("e"), b = + j[1];
                n = j[0].replace(".", "");
                if (b < 0) {
        b = - b - 1;
                m = j[0].indexOf(".");
                if (m > - 1) {
        b -= m - 1;
        }
        while (b--) {
        n = "0" + n;
        }
        n = "0." + n;
        }
        else {
        m = j[0].lastIndexOf(".");
                if (m > - 1) {
        b -= j[0].length - m - 1;
        }
        while (b--) {
        n += "0";
        }
        }
        }
        if (h != ".") {
        n = n.replace(".", h);
        }
        if (o) {
        m = n.lastIndexOf(h);
                m = (m > - 1) ? m : n.length;
                var d = n.substring(m), g = m;
                while (g--) {
        if ((m - g - 1) % 3 == 0 && g != (m - 1)) {
        d = o + d;
        }
        d = n.charAt(g) + d;
        }
        n = d;
        }
        if (l) {
        n = l + n;
        }
        if (p) {
        n += p;
        }
        return n;
                }, formatCurrency: function (b) {
        var a = Locale.get("Number.currency") || {};
                if (a.scientific == null) {
        a.scientific = false;
        }
        a.decimals = b != null ? b : (a.decimals == null ? 2 : a.decimals);
                return this.format(a);
                }, formatPercentage: function (b) {
        var a = Locale.get("Number.percentage") || {};
                if (a.suffix == null) {
        a.suffix = "%";
        }
        a.decimals = b != null ? b : (a.decimals == null ? 2 : a.decimals);
                return this.format(a);
                } });
        (function () {
        var c = { a: /[àáâãäåăą]/g, A: /[ÀÁÂÃÄÅĂĄ]/g, c: /[ćčç]/g, C: /[ĆČÇ]/g, d: /[ďđ]/g, D: /[ĎÐ]/g, e: /[èéêëěę]/g, E: /[ÈÉÊËĚĘ]/g, g: /[ğ]/g, G: /[Ğ]/g, i: /[ìíîï]/g, I: /[ÌÍÎÏ]/g, l: /[ĺľł]/g, L: /[ĹĽŁ]/g, n: /[ñňń]/g, N: /[ÑŇŃ]/g, o: /[òóôõöøő]/g, O: /[ÒÓÔÕÖØ]/g, r: /[řŕ]/g, R: /[ŘŔ]/g, s: /[ššş]/g, S: /[ŠŞŚ]/g, t: /[ťţ]/g, T: /[ŤŢ]/g, ue: /[ü]/g, UE: /[Ü]/g, u: /[ùúûůµ]/g, U: /[ÙÚÛŮ]/g, y: /[ÿý]/g, Y: /[ŸÝ]/g, z: /[žźż]/g, Z: /[ŽŹŻ]/g, th: /[þ]/g, TH: /[Þ]/g, dh: /[ð]/g, DH: /[Ð]/g, ss: /[ß]/g, oe: /[œ]/g, OE: /[Œ]/g, ae: /[æ]/g, AE: /[Æ]/g }, b = { " ": /[\xa0\u2002\u2003\u2009]/g, "*": /[\xb7]/g, "'": /[\u2018\u2019]/g, '"': /[\u201c\u201d]/g, "...": /[\u2026]/g, "-": /[\u2013]/g, "&raquo;": /[\uFFFD]/g };
                var a = function (f, h) {
                var e = f, g;
                        for (g in h) {
                e = e.replace(h[g], g);
                }
                return e;
                };
                var d = function (e, g) {
                e = e || "";
                        var h = g ? "<" + e + "(?!\\w)[^>]*>([\\s\\S]*?)</" + e + "(?!\\w)>" : "</?" + e + "([^>]+)?>", f = new RegExp(h, "gi");
                        return f;
                };
                String.implement({ standardize: function () {
                return a(this, c);
                }, repeat: function (e) {
                return new Array(e + 1).join(this);
                }, pad: function (e, h, g) {
                if (this.length >= e) {
                return this;
                }
                var f = (h == null ? " " : "" + h).repeat(e - this.length).substr(0, e - this.length);
                        if (!g || g == "right") {
                return this + f;
                }
                if (g == "left") {
                return f + this;
                }
                return f.substr(0, (f.length / 2).floor()) + this + f.substr(0, (f.length / 2).ceil());
                }, getTags: function (e, f) {
                return this.match(d(e, f)) || [];
                }, stripTags: function (e, f) {
                return this.replace(d(e, f), "");
                }, tidy: function () {
                return a(this, b);
                }, truncate: function (e, f, i) {
                var h = this;
                        if (f == null && arguments.length == 1) {
                f = "…";
                }
                if (h.length > e) {
                h = h.substring(0, e);
                        if (i) {
                var g = h.lastIndexOf(i);
                        if (g != - 1) {
                h = h.substr(0, g);
                }
                }
                if (f) {
                h += f;
                }
                }
                return h;
                } });
                })();
        String.implement({ parseQueryString: function (d, a) {
        if (d == null) {
        d = true;
        }
        if (a == null) {
        a = true;
        }
        var c = this.split(/[&;]/), b = {};
                if (!c.length) {
        return b;
        }
        c.each(function (i) {
        var e = i.indexOf("=") + 1, g = e ? i.substr(e) : "", f = e ? i.substr(0, e - 1).match(/([^\]\[]+|(\B)(?=\]))/g) : [i], h = b;
                if (!f) {
        return;
        }
        if (a) {
        g = decodeURIComponent(g);
        }
        f.each(function (k, j) {
        if (d) {
        k = decodeURIComponent(k);
        }
        var l = h[k];
                if (j < f.length - 1) {
        h = h[k] = l || {};
        }
        else {
        if (typeOf(l) == "array") {
        l.push(g);
        }
        else {
        h[k] = l != null ? [l, g] : g;
        }
        }
        });
        });
                return b;
                }, cleanQueryString: function (a) {
        return this.split("&").filter(function (e) {
        var b = e.indexOf("="), c = b < 0 ? "" : e.substr(0, b), d = e.substr(b + 1);
                return a ? a.call(null, c, d) : (d || d === 0);
        }).join("&");
                } });
        (function () {
        var b = function () {
        return this.get("value");
        };
                var a = this.URI = new Class({ Implements: Options, options: {}, regex: /^(?:(\w+):)?(?:\/\/(?:(?:([^:@\/]*):?([^:@\/]*))?@)?([^:\/?#]*)(?::(\d*))?)?(\.\.?$|(?:[^?#\/]*\/)*)([^?#]*)(?:\?([^#]*))?(?:#(.*))?/, parts: ["scheme", "user", "password", "host", "port", "directory", "file", "query", "fragment"], schemes: { http: 80, https: 443, ftp: 21, rtsp: 554, mms: 1755, file: 0 }, initialize: function (d, c) {
                this.setOptions(c);
                        var e = this.options.base || a.base;
                        if (!d) {
                d = e;
                }
                if (d && d.parsed) {
                this.parsed = Object.clone(d.parsed);
                }
                else {
                this.set("value", d.href || d.toString(), e ? new a(e) : false);
                }
                }, parse: function (e, d) {
                var c = e.match(this.regex);
                        if (!c) {
                return false;
                }
                c.shift();
                        return this.merge(c.associate(this.parts), d);
                }, merge: function (d, c) {
                if ((!d || !d.scheme) && (!c || !c.scheme)) {
                return false;
                }
                if (c) {
                this.parts.every(function (e) {
                if (d[e]) {
                return false;
                }
                d[e] = c[e] || "";
                        return true;
                });
                }
                d.port = d.port || this.schemes[d.scheme.toLowerCase()];
                        d.directory = d.directory ? this.parseDirectory(d.directory, c ? c.directory : "") : "/";
                        return d;
                }, parseDirectory: function (d, e) {
                d = (d.substr(0, 1) == "/" ? "" : (e || "/")) + d;
                        if (!d.test(a.regs.directoryDot)) {
                return d;
                }
                var c = [];
                        d.replace(a.regs.endSlash, "").split("/").each(function (f) {
                if (f == ".." && c.length > 0) {
                c.pop();
                }
                else {
                if (f != ".") {
                c.push(f);
                }
                }
                });
                        return c.join("/") + "/";
                }, combine: function (c) {
                return c.value || c.scheme + "://" + (c.user ? c.user + (c.password ? ":" + c.password : "") + "@" : "") + (c.host || "") + (c.port && c.port != this.schemes[c.scheme] ? ":" + c.port : "") + (c.directory || "/") + (c.file || "") + (c.query ? "?" + c.query : "") + (c.fragment ? "#" + c.fragment : "");
                }, set: function (d, f, e) {
                if (d == "value") {
                var c = f.match(a.regs.scheme);
                        if (c) {
                c = c[1];
                }
                if (c && this.schemes[c.toLowerCase()] == null) {
                this.parsed = { scheme: c, value: f };
                }
                else {
                this.parsed = this.parse(f, (e || this).parsed) || (c ? { scheme: c, value: f } : { value: f });
                }
                }
                else {
                if (d == "data") {
                this.setData(f);
                }
                else {
                this.parsed[d] = f;
                }
                }
                return this;
                }, get: function (c, d) {
                switch (c) {
                case "value": return this.combine(this.parsed, d ? d.parsed : false);
                        case "data": return this.getData();
                }
                return this.parsed[c] || "";
                }, go: function () {
                document.location.href = this.toString();
                }, toURI: function () {
                return this;
                }, getData: function (e, d) {
                var c = this.get(d || "query");
                        if (!(c || c === 0)) {
                return e ? null : {};
                }
                var f = c.parseQueryString();
                        return e ? f[e] : f;
                }, setData: function (c, f, d) {
                if (typeof c == "string") {
                var e = this.getData();
                        e[arguments[0]] = arguments[1];
                        c = e;
                }
                else {
                if (f) {
                c = Object.merge(this.getData(), c);
                }
                }
                return this.set(d || "query", Object.toQueryString(c));
                }, clearData: function (c) {
                return this.set(c || "query", "");
                }, toString: b, valueOf: b });
                a.regs = { endSlash: /\/$/, scheme: /^(\w+):/, directoryDot: /\.\/|\.$/ };
                a.base = new a(Array.from(document.getElements("base[href]", true)).getLast(), { base: document.location });
                String.implement({ toURI: function (c) {
                return new a(this, c);
                } });
                })();
        URI = Class.refactor(URI, { combine: function (f, e) {
        if (!e || f.scheme != e.scheme || f.host != e.host || f.port != e.port) {
        return this.previous.apply(this, arguments);
        }
        var a = f.file + (f.query ? "?" + f.query : "") + (f.fragment ? "#" + f.fragment : "");
                if (!e.directory) {
        return (f.directory || (f.file ? "" : "./")) + a;
        }
        var d = e.directory.split("/"), c = f.directory.split("/"), g = "", h;
                var b = 0;
                for (h = 0; h < d.length && h < c.length && d[h] == c[h]; h++) {
        }
        for (b = 0; b < d.length - h - 1; b++) {
        g += "../";
        }
        for (b = h; b < c.length - 1; b++) {
        g += c[b] + "/";
        }
        return (g || (f.file ? "" : "./")) + a;
                }, toAbsolute: function (a) {
        a = new URI(a);
                if (a) {
        a.set("directory", "").set("file", "");
        }
        return this.toRelative(a);
                }, toRelative: function (a) {
        return this.get("value", new URI(a));
                } });
        (function () {
        if (this.Hash) {
        return;
        }
        var a = this.Hash = new Type("Hash", function (b) {
        if (typeOf(b) == "hash") {
        b = Object.clone(b.getClean());
        }
        for (var c in b) {
        this[c] = b[c];
        }
        return this;
        });
                this.$H = function (b) {
                return new a(b);
                };
                a.implement({ forEach: function (b, c) {
                Object.forEach(this, b, c);
                }, getClean: function () {
                var c = {};
                        for (var b in this) {
                if (this.hasOwnProperty(b)) {
                c[b] = this[b];
                }
                }
                return c;
                }, getLength: function () {
                var c = 0;
                        for (var b in this) {
                if (this.hasOwnProperty(b)) {
                c++;
                }
                }
                return c;
                } });
                a.alias("each", "forEach");
                a.implement({ has: Object.prototype.hasOwnProperty, keyOf: function (b) {
                return Object.keyOf(this, b);
                }, hasValue: function (b) {
                return Object.contains(this, b);
                }, extend: function (b) {
                a.each(b || {}, function (d, c) {
                a.set(this, c, d);
                }, this);
                        return this;
                }, combine: function (b) {
                a.each(b || {}, function (d, c) {
                a.include(this, c, d);
                }, this);
                        return this;
                }, erase: function (b) {
                if (this.hasOwnProperty(b)) {
                delete this[b];
                }
                return this;
                }, get: function (b) {
                return (this.hasOwnProperty(b)) ? this[b] : null;
                }, set: function (b, c) {
                if (!this[b] || this.hasOwnProperty(b)) {
                this[b] = c;
                }
                return this;
                }, empty: function () {
                a.each(this, function (c, b) {
                delete this[b];
                }, this);
                        return this;
                }, include: function (b, c) {
                if (this[b] == undefined) {
                this[b] = c;
                }
                return this;
                }, map: function (b, c) {
                return new a(Object.map(this, b, c));
                }, filter: function (b, c) {
                return new a(Object.filter(this, b, c));
                }, every: function (b, c) {
                return Object.every(this, b, c);
                }, some: function (b, c) {
                return Object.some(this, b, c);
                }, getKeys: function () {
                return Object.keys(this);
                }, getValues: function () {
                return Object.values(this);
                }, toQueryString: function (b) {
                return Object.toQueryString(this, b);
                } });
                a.alias({ indexOf: "keyOf", contains: "hasValue" });
                })();
        Hash.implement({ getFromPath: function (a) {
        return Object.getFromPath(this, a);
                }, cleanValues: function (a) {
        return new Hash(Object.cleanValues(this, a));
                }, run: function () {
        Object.run(arguments);
                } });
        Element.implement({ tidy: function () {
        this.set("value", this.get("value").tidy());
                }, getTextInRange: function (b, a) {
        return this.get("value").substring(b, a);
                }, getSelectedText: function () {
        if (this.setSelectionRange) {
        return this.getTextInRange(this.getSelectionStart(), this.getSelectionEnd());
        }
        return document.selection.createRange().text;
                }, getSelectedRange: function () {
        if (this.selectionStart != null) {
        return { start: this.selectionStart, end: this.selectionEnd };
        }
        var e = { start: 0, end: 0 };
                var a = this.getDocument().selection.createRange();
                if (!a || a.parentElement() != this) {
        return e;
        }
        var c = a.duplicate();
                if (this.type == "text") {
        e.start = 0 - c.moveStart("character", - 100000);
                e.end = e.start + a.text.length;
        }
        else {
        var b = this.get("value");
                var d = b.length;
                c.moveToElementText(this);
                c.setEndPoint("StartToEnd", a);
                if (c.text.length) {
        d -= b.match(/[\n\r]*$/)[0].length;
        }
        e.end = d - c.text.length;
                c.setEndPoint("StartToStart", a);
                e.start = d - c.text.length;
        }
        return e;
                }, getSelectionStart: function () {
        return this.getSelectedRange().start;
                }, getSelectionEnd: function () {
        return this.getSelectedRange().end;
                }, setCaretPosition: function (a) {
        if (a == "end") {
        a = this.get("value").length;
        }
        this.selectRange(a, a);
                return this;
                }, getCaretPosition: function () {
        return this.getSelectedRange().start;
                }, selectRange: function (e, a) {
        if (this.setSelectionRange) {
        this.focus();
                this.setSelectionRange(e, a);
        }
        else {
        var c = this.get("value");
                var d = c.substr(e, a - e).replace(/\r/g, "").length;
                e = c.substr(0, e).replace(/\r/g, "").length;
                var b = this.createTextRange();
                b.collapse(true);
                b.moveEnd("character", e + d);
                b.moveStart("character", e);
                b.select();
        }
        return this;
                }, insertAtCursor: function (b, a) {
        var d = this.getSelectedRange();
                var c = this.get("value");
                this.set("value", c.substring(0, d.start) + b + c.substring(d.end, c.length));
                if (a !== false) {
        this.selectRange(d.start, d.start + b.length);
        }
        else {
        this.setCaretPosition(d.start + b.length);
        }
        return this;
                }, insertAroundCursor: function (b, a) {
        b = Object.append({ before: "", defaultMiddle: "", after: "" }, b);
                var c = this.getSelectedText() || b.defaultMiddle;
                var g = this.getSelectedRange();
                var f = this.get("value");
                if (g.start == g.end) {
        this.set("value", f.substring(0, g.start) + b.before + c + b.after + f.substring(g.end, f.length));
                this.selectRange(g.start + b.before.length, g.end + b.before.length + c.length);
        }
        else {
        var d = f.substring(g.start, g.end);
                this.set("value", f.substring(0, g.start) + b.before + d + b.after + f.substring(g.end, f.length));
                var e = g.start + b.before.length;
                if (a !== false) {
        this.selectRange(e, e + d.length);
        }
        else {
        this.setCaretPosition(e + f.length);
        }
        }
        return this;
                } });
        Elements.from = function (e, d) {
        if (d || d == null) {
        e = e.stripScripts();
        }
        var b, c = e.match(/^\s*<(t[dhr]|tbody|tfoot|thead)/i);
                if (c) {
        b = new Element("table");
                var a = c[1].toLowerCase();
                if (["td", "th", "tr"].contains(a)) {
        b = new Element("tbody").inject(b);
                if (a != "tr") {
        b = new Element("tr").inject(b);
        }
        }
        }
        return (b || new Element("div")).set("html", e).getChildren();
                };
        (function () {
        var d = { relay: false }, c = ["once", "throttle", "pause"], b = c.length;
                while (b--) {
        d[c[b]] = Events.lookupPseudo(c[b]);
        }
        DOMEvent.definePseudo = function (e, f) {
        d[e] = f;
                return this;
        };
                var a = Element.prototype;
                [Element, Window, Document].invoke("implement", Events.Pseudos(d, a.addEvent, a.removeEvent));
                })();
        (function () {
        var a = "$moo:keys-pressed", b = "$moo:keys-keyup";
                DOMEvent.definePseudo("keys", function (d, e, c) {
                var g = c[0], f = [], h = this.retrieve(a, []);
                        f.append(d.value.replace("++", function () {
                        f.push("+");
                                return "";
                        }).split("+"));
                        h.include(g.key);
                        if (f.every(function (j) {
                        return h.contains(j);
                        })) {
                e.apply(this, c);
                }
                this.store(a, h);
                        if (!this.retrieve(b)) {
                var i = function (j) {
                (function () {
                h = this.retrieve(a, []).erase(j.key);
                        this.store(a, h);
                }).delay(0, this);
                };
                        this.store(b, i).addEvent("keyup", i);
                }
                });
                DOMEvent.defineKeys({ "16": "shift", "17": "control", "18": "alt", "20": "capslock", "33": "pageup", "34": "pagedown", "35": "end", "36": "home", "144": "numlock", "145": "scrolllock", "186": ";", "187": "=", "188": ",", "190": ".", "191": "/", "192": "`", "219": "[", "220": "\\", "221": "]", "222": "'", "107": "+" }).defineKey(Browser.firefox ? 109 : 189, "-");
                })();
        (function () {
        var b = function (e, d) {
        var f = [];
                Object.each(d, function (g) {
                Object.each(g, function (h) {
                e.each(function (i) {
                f.push(i + "-" + h + (i == "border" ? "-width" : ""));
                });
                });
                });
                return f;
        };
                var c = function (f, e) {
                var d = 0;
                        Object.each(e, function (h, g) {
                        if (g.test(f)) {
                        d = d + h.toInt();
                        }
                        });
                        return d;
                };
                var a = function (d) {
                return !!(!d || d.offsetHeight || d.offsetWidth);
                };
                Element.implement({ measure: function (h) {
                if (a(this)) {
                return h.call(this);
                }
                var g = this.getParent(), e = [];
                        while (!a(g) && g != document.body) {
                e.push(g.expose());
                        g = g.getParent();
                }
                var f = this.expose(), d = h.call(this);
                        f();
                        e.each(function (i) {
                        i();
                        });
                        return d;
                }, expose: function () {
                if (this.getStyle("display") != "none") {
                return function () {
                };
                }
                var d = this.style.cssText;
                        this.setStyles({ display: "block", position: "absolute", visibility: "hidden" });
                        return function () {
                        this.style.cssText = d;
                        }.bind(this);
                }, getDimensions: function (d) {
                d = Object.merge({ computeSize: false }, d);
                        var i = { x: 0, y: 0 };
                        var h = function (j, e) {
                        return (e.computeSize) ? j.getComputedSize(e) : j.getSize();
                        };
                        var f = this.getParent("body");
                        if (f && this.getStyle("display") == "none") {
                i = this.measure(function () {
                return h(this, d);
                });
                }
                else {
                if (f) {
                try {
                i = h(this, d);
                }
                catch (g) {
                }
                }
                }
                return Object.append(i, (i.x || i.x === 0) ? { width: i.x, height: i.y } : { x: i.width, y: i.height });
                }, getComputedSize: function (d) {
                if (d && d.plains) {
                d.planes = d.plains;
                }
                d = Object.merge({ styles: ["padding", "border"], planes: { height: ["top", "bottom"], width: ["left", "right"] }, mode: "both" }, d);
                        var g = {}, e = { width: 0, height: 0 }, f;
                        if (d.mode == "vertical") {
                delete e.width;
                        delete d.planes.width;
                }
                else {
                if (d.mode == "horizontal") {
                delete e.height;
                        delete d.planes.height;
                }
                }
                b(d.styles, d.planes).each(function (h) {
                g[h] = this.getStyle(h).toInt();
                }, this);
                        Object.each(d.planes, function (i, h) {
                        var k = h.capitalize(), j = this.getStyle(h);
                                if (j == "auto" && !f) {
                        f = this.getDimensions();
                        }
                        j = g[h] = (j == "auto") ? f[h] : j.toInt();
                                e["total" + k] = j;
                                i.each(function (m) {
                                var l = c(m, g);
                                        e["computed" + m.capitalize()] = l;
                                        e["total" + k] += l;
                                });
                        }, this);
                        return Object.append(e, g);
                } });
                })();
        (function () {
        var a = false, b = false;
                var c = function () {
                var d = new Element("div").setStyles({ position: "fixed", top: 0, right: 0 }).inject(document.body);
                        a = (d.offsetTop === 0);
                        d.dispose();
                        b = true;
                };
                Element.implement({ pin: function (h, f) {
                if (!b) {
                c();
                }
                if (this.getStyle("display") == "none") {
                return this;
                }
                var j, k = window.getScroll(), l, e;
                        if (h !== false) {
                j = this.getPosition(a ? document.body : this.getOffsetParent());
                        if (!this.retrieve("pin:_pinned")) {
                var g = { top: j.y - k.y, left: j.x - k.x };
                        if (a && !f) {
                this.setStyle("position", "fixed").setStyles(g);
                }
                else {
                l = this.getOffsetParent();
                        var i = this.getPosition(l), m = this.getStyles("left", "top");
                        if (l && m.left == "auto" || m.top == "auto") {
                this.setPosition(i);
                }
                if (this.getStyle("position") == "static") {
                this.setStyle("position", "absolute");
                }
                i = { x: m.left.toInt() - k.x, y: m.top.toInt() - k.y };
                        e = function () {
                        if (!this.retrieve("pin:_pinned")) {
                        return;
                        }
                        var n = window.getScroll();
                                this.setStyles({ left: i.x + n.x, top: i.y + n.y });
                        }.bind(this);
                        this.store("pin:_scrollFixer", e);
                        window.addEvent("scroll", e);
                }
                this.store("pin:_pinned", true);
                }
                }
                else {
                if (!this.retrieve("pin:_pinned")) {
                return this;
                }
                l = this.getParent();
                        var d = (l.getComputedStyle("position") != "static" ? l : l.getOffsetParent());
                        j = this.getPosition(d);
                        this.store("pin:_pinned", false);
                        e = this.retrieve("pin:_scrollFixer");
                        if (!e) {
                this.setStyles({ position: "absolute", top: j.y + k.y, left: j.x + k.x });
                }
                else {
                this.store("pin:_scrollFixer", null);
                        window.removeEvent("scroll", e);
                }
                this.removeClass("isPinned");
                }
                return this;
                }, unpin: function () {
                return this.pin(false);
                }, togglePin: function () {
                return this.pin(!this.retrieve("pin:_pinned"));
                } });
                Element.alias("togglepin", "togglePin");
                })();
        (function (b) {
        var a = Element.Position = { options: { relativeTo: document.body, position: { x: "center", y: "center" }, offset: { x: 0, y: 0 } }, getOptions: function (d, c) {
        c = Object.merge({}, a.options, c);
                a.setPositionOption(c);
                a.setEdgeOption(c);
                a.setOffsetOption(d, c);
                a.setDimensionsOption(d, c);
                return c;
        }, setPositionOption: function (c) {
        c.position = a.getCoordinateFromValue(c.position);
        }, setEdgeOption: function (d) {
        var c = a.getCoordinateFromValue(d.edge);
                d.edge = c ? c : (d.position.x == "center" && d.position.y == "center") ? { x: "center", y: "center" } : { x: "left", y: "top" };
        }, setOffsetOption: function (f, d) {
        var c = { x: 0, y: 0 }, g = f.measure(function () {
        return document.id(this.getOffsetParent());
        }), e = g.getScroll();
                if (!g || g == f.getDocument().body) {
        return;
        }
        c = g.measure(function () {
        var i = this.getPosition();
                if (this.getStyle("position") == "fixed") {
        var h = window.getScroll();
                i.x += h.x;
                i.y += h.y;
        }
        return i;
        });
                d.offset = { parentPositioned: g != document.id(d.relativeTo), x: d.offset.x - c.x + e.x, y: d.offset.y - c.y + e.y };
        }, setDimensionsOption: function (d, c) {
        c.dimensions = d.getDimensions({ computeSize: true, styles: ["padding", "border", "margin"] });
        }, getPosition: function (e, d) {
        var c = {};
                d = a.getOptions(e, d);
                var f = document.id(d.relativeTo) || document.body;
                a.setPositionCoordinates(d, c, f);
                if (d.edge) {
        a.toEdge(c, d);
        }
        var g = d.offset;
                c.left = ((c.x >= 0 || g.parentPositioned || d.allowNegative) ? c.x : 0).toInt();
                c.top = ((c.y >= 0 || g.parentPositioned || d.allowNegative) ? c.y : 0).toInt();
                a.toMinMax(c, d);
                if (d.relFixedPosition || f.getStyle("position") == "fixed") {
        a.toRelFixedPosition(f, c);
        }
        if (d.ignoreScroll) {
        a.toIgnoreScroll(f, c);
        }
        if (d.ignoreMargins) {
        a.toIgnoreMargins(c, d);
        }
        c.left = Math.ceil(c.left);
                c.top = Math.ceil(c.top);
                delete c.x;
                delete c.y;
                return c;
        }, setPositionCoordinates: function (k, g, d) {
        var f = k.offset.y, h = k.offset.x, e = (d == document.body) ? window.getScroll() : d.getPosition(), j = e.y, c = e.x, i = window.getSize();
                switch (k.position.x) {
        case "left":
                g.x = c + h;
                break;
                case "right":
                g.x = c + h + d.offsetWidth;
                break;
                default:
                g.x = c + ((d == document.body ? i.x : d.offsetWidth) / 2) + h;
                break;
        }
        switch (k.position.y) {
        case "top":
                g.y = j + f;
                break;
                case "bottom":
                g.y = j + f + d.offsetHeight;
                break;
                default:
                g.y = j + ((d == document.body ? i.y : d.offsetHeight) / 2) + f;
                break;
        }
        }, toMinMax: function (c, d) {
        var f = { left: "x", top: "y" }, e;
                ["minimum", "maximum"].each(function (g) {
        ["left", "top"].each(function (h) {
        e = d[g] ? d[g][f[h]] : null;
                if (e != null && ((g == "minimum") ? c[h] < e : c[h] > e)) {
        c[h] = e;
        }
        });
        });
        }, toRelFixedPosition: function (e, c) {
        var d = window.getScroll();
                c.top += d.y;
                c.left += d.x;
        }, toIgnoreScroll: function (e, d) {
        var c = e.getScroll();
                d.top -= c.y;
                d.left -= c.x;
        }, toIgnoreMargins: function (c, d) {
        c.left += d.edge.x == "right" ? d.dimensions["margin-right"] : (d.edge.x != "center" ? - d.dimensions["margin-left"] : - d.dimensions["margin-left"] + ((d.dimensions["margin-right"] + d.dimensions["margin-left"]) / 2));
                c.top += d.edge.y == "bottom" ? d.dimensions["margin-bottom"] : (d.edge.y != "center" ? - d.dimensions["margin-top"] : - d.dimensions["margin-top"] + ((d.dimensions["margin-bottom"] + d.dimensions["margin-top"]) / 2));
        }, toEdge: function (c, d) {
        var e = {}, g = d.dimensions, f = d.edge;
                switch (f.x) {
        case "left":
                e.x = 0;
                break;
                case "right":
                e.x = - g.x - g.computedRight - g.computedLeft;
                break;
                default:
                e.x = - (Math.round(g.totalWidth / 2));
                break;
        }
        switch (f.y) {
        case "top":
                e.y = 0;
                break;
                case "bottom":
                e.y = - g.y - g.computedTop - g.computedBottom;
                break;
                default:
                e.y = - (Math.round(g.totalHeight / 2));
                break;
        }
        c.x += e.x;
                c.y += e.y;
        }, getCoordinateFromValue: function (c) {
        if (typeOf(c) != "string") {
        return c;
        }
        c = c.toLowerCase();
                return { x: c.test("left") ? "left" : (c.test("right") ? "right" : "center"), y: c.test(/upper|top/) ? "top" : (c.test("bottom") ? "bottom" : "center") };
        } };
                Element.implement({ position: function (d) {
                if (d && (d.x != null || d.y != null)) {
                return (b ? b.apply(this, arguments) : this);
                }
                var c = this.setStyle("position", "absolute").calculatePosition(d);
                        return (d && d.returnPos) ? c : this.setStyles(c);
                }, calculatePosition: function (c) {
                return a.getPosition(this, c);
                } });
                })(Element.prototype.position);
        Element.implement({ isDisplayed: function () {
        return this.getStyle("display") != "none";
                }, isVisible: function () {
        var a = this.offsetWidth, b = this.offsetHeight;
                return (a == 0 && b == 0) ? false : (a > 0 && b > 0) ? true : this.style.display != "none";
                }, toggle: function () {
        return this[this.isDisplayed() ? "hide" : "show"]();
                }, hide: function () {
        var b;
                try {
                b = this.getStyle("display");
                }
        catch (a) {
        }
        if (b == "none") {
        return this;
        }
        return this.store("element:_originalDisplay", b || "").setStyle("display", "none");
                }, show: function (a) {
        if (!a && this.isDisplayed()) {
        return this;
        }
        a = a || this.retrieve("element:_originalDisplay") || "block";
                return this.setStyle("display", (a == "none") ? "block" : a);
                }, swapClass: function (a, b) {
        return this.removeClass(a).addClass(b);
                } });
        Document.implement({ clearSelection: function () {
        if (window.getSelection) {
        var a = window.getSelection();
                if (a && a.removeAllRanges) {
        a.removeAllRanges();
        }
        }
        else {
        if (document.selection && document.selection.empty) {
        try {
        document.selection.empty();
        }
        catch (b) {
        }
        }
        }
        } });
        var IframeShim = new Class({ Implements: [Options, Events, Class.Occlude], options: { className: "iframeShim", src: 'javascript:false;document.write("");', display: false, zIndex: null, margin: 0, offset: { x: 0, y: 0 }, browsers: (Browser.ie6 || (Browser.firefox && Browser.version < 3 && Browser.Platform.mac)) }, property: "IframeShim", initialize: function (b, a) {
        this.element = document.id(b);
                if (this.occlude()) {
        return this.occluded;
        }
        this.setOptions(a);
                this.makeShim();
                return this;
                }, makeShim: function () {
        if (this.options.browsers) {
        var c = this.element.getStyle("zIndex").toInt();
                if (!c) {
        c = 1;
                var b = this.element.getStyle("position");
                if (b == "static" || !b) {
        this.element.setStyle("position", "relative");
        }
        this.element.setStyle("zIndex", c);
        }
        c = ((this.options.zIndex != null || this.options.zIndex === 0) && c > this.options.zIndex) ? this.options.zIndex : c - 1;
                if (c < 0) {
        c = 1;
        }
        this.shim = new Element("iframe", { src: this.options.src, scrolling: "no", frameborder: 0, styles: { zIndex: c, position: "absolute", border: "none", filter: "progid:DXImageTransform.Microsoft.Alpha(style=0,opacity=0)" }, "class": this.options.className }).store("IframeShim", this);
                var a = (function () {
                this.shim.inject(this.element, "after");
                        this[this.options.display ? "show" : "hide"]();
                        this.fireEvent("inject");
                }).bind(this);
                if (!IframeShim.ready) {
        window.addEvent("load", a);
        }
        else {
        a();
        }
        }
        else {
        this.position = this.hide = this.show = this.dispose = Function.from(this);
        }
        }, position: function () {
        if (!IframeShim.ready || !this.shim) {
        return this;
        }
        var a = this.element.measure(function () {
        return this.getSize();
        });
                if (this.options.margin != undefined) {
        a.x = a.x - (this.options.margin * 2);
                a.y = a.y - (this.options.margin * 2);
                this.options.offset.x += this.options.margin;
                this.options.offset.y += this.options.margin;
        }
        this.shim.set({ width: a.x, height: a.y }).position({ relativeTo: this.element, offset: this.options.offset });
                return this;
                }, hide: function () {
        if (this.shim) {
        this.shim.setStyle("display", "none");
        }
        return this;
                }, show: function () {
        if (this.shim) {
        this.shim.setStyle("display", "block");
        }
        return this.position();
                }, dispose: function () {
        if (this.shim) {
        this.shim.dispose();
        }
        return this;
                }, destroy: function () {
        if (this.shim) {
        this.shim.destroy();
        }
        return this;
                } });
        window.addEvent("load", function () {
        IframeShim.ready = true;
                });
        var Mask = new Class({ Implements: [Options, Events], Binds: ["position"], options: { style: {}, "class": "mask", maskMargins: false, useIframeShim: true, iframeShimOptions: {} }, initialize: function (b, a) {
        this.target = document.id(b) || document.id(document.body);
                this.target.store("mask", this);
                this.setOptions(a);
                this.render();
                this.inject();
                }, render: function () {
        this.element = new Element("div", { "class": this.options["class"], id: this.options.id || "mask-" + String.uniqueID(), styles: Object.merge({}, this.options.style, { display: "none" }), events: { click: function (a) {
        this.fireEvent("click", a);
                if (this.options.hideOnClick) {
        this.hide();
        }
        }.bind(this) } });
                this.hidden = true;
                }, toElement: function () {
        return this.element;
                }, inject: function (b, a) {
        a = a || (this.options.inject ? this.options.inject.where : "") || this.target == document.body ? "inside" : "after";
                b = b || (this.options.inject && this.options.inject.target) || this.target;
                this.element.inject(b, a);
                if (this.options.useIframeShim) {
        this.shim = new IframeShim(this.element, this.options.iframeShimOptions);
                this.addEvents({ show: this.shim.show.bind(this.shim), hide: this.shim.hide.bind(this.shim), destroy: this.shim.destroy.bind(this.shim) });
        }
        }, position: function () {
        this.resize(this.options.width, this.options.height);
                this.element.position({ relativeTo: this.target, position: "topLeft", ignoreMargins: !this.options.maskMargins, ignoreScroll: this.target == document.body });
                return this;
                }, resize: function (a, e) {
        var b = { styles: ["padding", "border"] };
                if (this.options.maskMargins) {
        b.styles.push("margin");
        }
        var d = this.target.getComputedSize(b);
                if (this.target == document.body) {
        this.element.setStyles({ width: 0, height: 0 });
                var c = window.getScrollSize();
                if (d.totalHeight < c.y) {
        d.totalHeight = c.y;
        }
        if (d.totalWidth < c.x) {
        d.totalWidth = c.x;
        }
        }
        this.element.setStyles({ width: Array.pick([a, d.totalWidth, d.x]), height: Array.pick([e, d.totalHeight, d.y]) });
                return this;
                }, show: function () {
        if (!this.hidden) {
        return this;
        }
        window.addEvent("resize", this.position);
                this.position();
                this.showMask.apply(this, arguments);
                return this;
                }, showMask: function () {
        this.element.setStyle("display", "block");
                this.hidden = false;
                this.fireEvent("show");
                }, hide: function () {
        if (this.hidden) {
        return this;
        }
        window.removeEvent("resize", this.position);
                this.hideMask.apply(this, arguments);
                if (this.options.destroyOnHide) {
        return this.destroy();
        }
        return this;
                }, hideMask: function () {
        this.element.setStyle("display", "none");
                this.hidden = true;
                this.fireEvent("hide");
                }, toggle: function () {
        this[this.hidden ? "show" : "hide"]();
                }, destroy: function () {
        this.hide();
                this.element.destroy();
                this.fireEvent("destroy");
                this.target.eliminate("mask");
                } });
        Element.Properties.mask = { set: function (b) {
        var a = this.retrieve("mask");
                if (a) {
        a.destroy();
        }
        return this.eliminate("mask").store("mask:options", b);
                }, get: function () {
        var a = this.retrieve("mask");
                if (!a) {
        a = new Mask(this, this.retrieve("mask:options"));
                this.store("mask", a);
        }
        return a;
                } };
        Element.implement({ mask: function (a) {
        if (a) {
        this.set("mask", a);
        }
        this.get("mask").show();
                return this;
                }, unmask: function () {
        this.get("mask").hide();
                return this;
                } });
        var Spinner = new Class({ Extends: Mask, Implements: Chain, options: { "class": "spinner", containerPosition: {}, content: { "class": "spinner-content" }, messageContainer: { "class": "spinner-msg" }, img: { "class": "spinner-img" }, fxOptions: { link: "chain" } }, initialize: function (c, a) {
        this.target = document.id(c) || document.id(document.body);
                this.target.store("spinner", this);
                this.setOptions(a);
                this.render();
                this.inject();
                var b = function () {
                this.active = false;
                }.bind(this);
                this.addEvents({ hide: b, show: b });
                }, render: function () {
        this.parent();
                this.element.set("id", this.options.id || "spinner-" + String.uniqueID());
                this.content = document.id(this.options.content) || new Element("div", this.options.content);
                this.content.inject(this.element);
                if (this.options.message) {
        this.msg = document.id(this.options.message) || new Element("p", this.options.messageContainer).appendText(this.options.message);
                this.msg.inject(this.content);
        }
        if (this.options.img) {
        this.img = document.id(this.options.img) || new Element("div", this.options.img);
                this.img.inject(this.content);
        }
        this.element.set("tween", this.options.fxOptions);
                }, show: function (a) {
        if (this.active) {
        return this.chain(this.show.bind(this));
        }
        if (!this.hidden) {
        this.callChain.delay(20, this);
                return this;
        }
        this.active = true;
                return this.parent(a);
                }, showMask: function (a) {
        var b = function () {
        this.content.position(Object.merge({ relativeTo: this.element }, this.options.containerPosition));
        }.bind(this);
                if (a) {
        this.parent();
                b();
        }
        else {
        if (!this.options.style.opacity) {
        this.options.style.opacity = this.element.getStyle("opacity").toFloat();
        }
        this.element.setStyles({ display: "block", opacity: 0 }).tween("opacity", this.options.style.opacity);
                b();
                this.hidden = false;
                this.fireEvent("show");
                this.callChain();
        }
        }, hide: function (a) {
        if (this.active) {
        return this.chain(this.hide.bind(this));
        }
        if (this.hidden) {
        this.callChain.delay(20, this);
                return this;
        }
        this.active = true;
                return this.parent(a);
                }, hideMask: function (a) {
        if (a) {
        return this.parent();
        }
        this.element.tween("opacity", 0).get("tween").chain(function () {
        this.element.setStyle("display", "none");
                this.hidden = true;
                this.fireEvent("hide");
                this.callChain();
        }.bind(this));
                }, destroy: function () {
        this.content.destroy();
                this.parent();
                this.target.eliminate("spinner");
                } });
        Request = Class.refactor(Request, { options: { useSpinner: false, spinnerOptions: {}, spinnerTarget: false }, initialize: function (a) {
        this._send = this.send;
                this.send = function (b) {
                var c = this.getSpinner();
                        if (c) {
                c.chain(this._send.pass(b, this)).show();
                }
                else {
                this._send(b);
                }
                return this;
                };
                this.previous(a);
                }, getSpinner: function () {
        if (!this.spinner) {
        var b = document.id(this.options.spinnerTarget) || document.id(this.options.update);
                if (this.options.useSpinner && b) {
        b.set("spinner", this.options.spinnerOptions);
                var a = this.spinner = b.get("spinner");
                ["complete", "exception", "cancel"].each(function (c) {
        this.addEvent(c, a.hide.bind(a));
        }, this);
        }
        }
        return this.spinner;
                } });
        Element.Properties.spinner = { set: function (a) {
        var b = this.retrieve("spinner");
                if (b) {
        b.destroy();
        }
        return this.eliminate("spinner").store("spinner:options", a);
                }, get: function () {
        var a = this.retrieve("spinner");
                if (!a) {
        a = new Spinner(this, this.retrieve("spinner:options"));
                this.store("spinner", a);
        }
        return a;
                } };
        Element.implement({ spin: function (a) {
        if (a) {
        this.set("spinner", a);
        }
        this.get("spinner").show();
                return this;
                }, unspin: function () {
        this.get("spinner").hide();
                return this;
                } });
        if (!window.Form) {
window.Form = {};
        }
(function () {
Form.Request = new Class({ Binds: ["onSubmit", "onFormValidate"], Implements: [Options, Events, Class.Occlude], options: { requestOptions: { evalScripts: true, useSpinner: true, emulation: false, link: "ignore" }, sendButtonClicked: true, extraData: {}, resetForm: true }, property: "form.request", initialize: function (b, c, a) {
this.element = document.id(b);
        if (this.occlude()) {
return this.occluded;
}
this.setOptions(a).setTarget(c).attach();
}, setTarget: function (a) {
this.target = document.id(a);
        if (!this.request) {
this.makeRequest();
}
else {
this.request.setOptions({ update: this.target });
}
return this;
}, toElement: function () {
return this.element;
}, makeRequest: function () {
var a = this;
        this.request = new Request.HTML(Object.merge({ update: this.target, emulation: false, spinnerTarget: this.element, method: this.element.get("method") || "post" }, this.options.requestOptions)).addEvents({ success: function (c, e, d, b) {
["complete", "success"].each(function (f) {
a.fireEvent(f, [a.target, c, e, d, b]);
});
}, failure: function () {
a.fireEvent("complete", arguments).fireEvent("failure", arguments);
}, exception: function () {
a.fireEvent("failure", arguments);
} });
        return this.attachReset();
}, attachReset: function () {
if (!this.options.resetForm) {
return this;
}
this.request.addEvent("success", function () {
Function.attempt(function () {
this.element.reset();
}.bind(this));
        if (window.OverText) {
OverText.update();
}
}.bind(this));
        return this;
}, attach: function (a) {
var c = (a != false) ? "addEvent" : "removeEvent";
        this.element[c]("click:relay(button, input[type=submit])", this.saveClickedButton.bind(this));
        var b = this.element.retrieve("validator");
        if (b) {
b[c]("onFormValidate", this.onFormValidate);
}
else {
this.element[c]("submit", this.onSubmit);
}
return this;
}, detach: function () {
return this.attach(false);
}, enable: function () {
return this.attach();
}, disable: function () {
return this.detach();
}, onFormValidate: function (c, b, a) {
if (!a) {
return;
}
var d = this.element.retrieve("validator");
        if (c || (d && !d.options.stopOnFailure)) {
a.stop();
        this.send();
}
}, onSubmit: function (a) {
var b = this.element.retrieve("validator");
        if (b) {
this.element.removeEvent("submit", this.onSubmit);
        b.addEvent("onFormValidate", this.onFormValidate);
        this.element.validate();
        return;
}
if (a) {
a.stop();
}
this.send();
}, saveClickedButton: function (b, c) {
var a = c.get("name");
        if (!a || !this.options.sendButtonClicked) {
return;
}
this.options.extraData[a] = c.get("value") || true;
        this.clickedCleaner = function () {
        delete this.options.extraData[a];
                this.clickedCleaner = function () {
                };
        }.bind(this);
}, clickedCleaner: function () {
}, send: function () {
var b = this.element.toQueryString().trim(), a = Object.toQueryString(this.options.extraData);
        if (b) {
b += "&" + a;
}
else {
b = a;
}
this.fireEvent("send", [this.element, b.parseQueryString()]);
        this.request.send({ data: b, url: this.options.requestOptions.url || this.element.get("action") });
        this.clickedCleaner();
        return this;
} });
        Element.implement("formUpdate", function (c, b) {
        var a = this.retrieve("form.request");
                if (!a) {
        a = new Form.Request(this, c, b);
        }
        else {
        if (c) {
        a.setTarget(c);
        }
        if (b) {
        a.setOptions(b).makeRequest();
        }
        }
        a.send();
                return this;
        });
        })();
        (function () {
        var a = function (d) {
        var b = d.options.hideInputs;
                if (window.OverText) {
        var c = [null];
                OverText.each(function (e) {
                c.include("." + e.options.labelClass);
                });
                if (c) {
        b += c.join(", ");
        }
        }
        return (b) ? d.element.getElements(b) : null;
        };
                Fx.Reveal = new Class({ Extends: Fx.Morph, options: { link: "cancel", styles: ["padding", "border", "margin"], transitionOpacity: !Browser.ie6, mode: "vertical", display: function () {
                return this.element.get("tag") != "tr" ? "block" : "table-row";
                }, opacity: 1, hideInputs: Browser.ie ? "select, input, textarea, object, embed" : null }, dissolve: function () {
                if (!this.hiding && !this.showing) {
                if (this.element.getStyle("display") != "none") {
                this.hiding = true;
                        this.showing = false;
                        this.hidden = true;
                        this.cssText = this.element.style.cssText;
                        var d = this.element.getComputedSize({ styles: this.options.styles, mode: this.options.mode });
                        if (this.options.transitionOpacity) {
                d.opacity = this.options.opacity;
                }
                var c = {};
                        Object.each(d, function (f, e) {
                        c[e] = [f, 0];
                        });
                        this.element.setStyles({ display: Function.from(this.options.display).call(this), overflow: "hidden" });
                        var b = a(this);
                        if (b) {
                b.setStyle("visibility", "hidden");
                }
                this.$chain.unshift(function () {
                if (this.hidden) {
                this.hiding = false;
                        this.element.style.cssText = this.cssText;
                        this.element.setStyle("display", "none");
                        if (b) {
                b.setStyle("visibility", "visible");
                }
                }
                this.fireEvent("hide", this.element);
                        this.callChain();
                }.bind(this));
                        this.start(c);
                }
                else {
                this.callChain.delay(10, this);
                        this.fireEvent("complete", this.element);
                        this.fireEvent("hide", this.element);
                }
                }
                else {
                if (this.options.link == "chain") {
                this.chain(this.dissolve.bind(this));
                }
                else {
                if (this.options.link == "cancel" && !this.hiding) {
                this.cancel();
                        this.dissolve();
                }
                }
                }
                return this;
                }, reveal: function () {
                if (!this.showing && !this.hiding) {
                if (this.element.getStyle("display") == "none") {
                this.hiding = false;
                        this.showing = true;
                        this.hidden = false;
                        this.cssText = this.element.style.cssText;
                        var d;
                        this.element.measure(function () {
                        d = this.element.getComputedSize({ styles: this.options.styles, mode: this.options.mode });
                        }.bind(this));
                        if (this.options.heightOverride != null) {
                d.height = this.options.heightOverride.toInt();
                }
                if (this.options.widthOverride != null) {
                d.width = this.options.widthOverride.toInt();
                }
                if (this.options.transitionOpacity) {
                this.element.setStyle("opacity", 0);
                        d.opacity = this.options.opacity;
                }
                var c = { height: 0, display: Function.from(this.options.display).call(this) };
                        Object.each(d, function (f, e) {
                        c[e] = 0;
                        });
                        c.overflow = "hidden";
                        this.element.setStyles(c);
                        var b = a(this);
                        if (b) {
                b.setStyle("visibility", "hidden");
                }
                this.$chain.unshift(function () {
                this.element.style.cssText = this.cssText;
                        this.element.setStyle("display", Function.from(this.options.display).call(this));
                        if (!this.hidden) {
                this.showing = false;
                }
                if (b) {
                b.setStyle("visibility", "visible");
                }
                this.callChain();
                        this.fireEvent("show", this.element);
                }.bind(this));
                        this.start(d);
                }
                else {
                this.callChain();
                        this.fireEvent("complete", this.element);
                        this.fireEvent("show", this.element);
                }
                }
                else {
                if (this.options.link == "chain") {
                this.chain(this.reveal.bind(this));
                }
                else {
                if (this.options.link == "cancel" && !this.showing) {
                this.cancel();
                        this.reveal();
                }
                }
                }
                return this;
                }, toggle: function () {
                if (this.element.getStyle("display") == "none") {
                this.reveal();
                }
                else {
                this.dissolve();
                }
                return this;
                }, cancel: function () {
                this.parent.apply(this, arguments);
                        if (this.cssText != null) {
                this.element.style.cssText = this.cssText;
                }
                this.hiding = false;
                        this.showing = false;
                        return this;
                } });
                Element.Properties.reveal = { set: function (b) {
                this.get("reveal").cancel().setOptions(b);
                        return this;
                }, get: function () {
                var b = this.retrieve("reveal");
                        if (!b) {
                b = new Fx.Reveal(this);
                        this.store("reveal", b);
                }
                return b;
                } };
                Element.Properties.dissolve = Element.Properties.reveal;
                Element.implement({ reveal: function (b) {
                this.get("reveal").setOptions(b).reveal();
                        return this;
                }, dissolve: function (b) {
                this.get("reveal").setOptions(b).dissolve();
                        return this;
                }, nix: function (b) {
                var c = Array.link(arguments, { destroy: Type.isBoolean, options: Type.isObject });
                        this.get("reveal").setOptions(b).dissolve().chain(function () {
                this[c.destroy ? "destroy" : "dispose"]();
                }.bind(this));
                        return this;
                }, wink: function () {
                var c = Array.link(arguments, { duration: Type.isNumber, options: Type.isObject });
                        var b = this.get("reveal").setOptions(c.options);
                        b.reveal().chain(function () {
                (function () {
                b.dissolve();
                }).delay(c.duration || 2000);
                });
                } });
                })();
        Form.Request.Append = new Class({ Extends: Form.Request, options: { useReveal: true, revealOptions: {}, inject: "bottom" }, makeRequest: function () {
        this.request = new Request.HTML(Object.merge({ url: this.element.get("action"), method: this.element.get("method") || "post", spinnerTarget: this.element }, this.options.requestOptions, { evalScripts: false })).addEvents({ success: function (b, g, f, a) {
        var c;
                var d = Elements.from(f);
                if (d.length == 1) {
        c = d[0];
        }
        else {
        c = new Element("div", { styles: { display: "none" } }).adopt(d);
        }
        c.inject(this.target, this.options.inject);
                if (this.options.requestOptions.evalScripts) {
        Browser.exec(a);
        }
        this.fireEvent("beforeEffect", c);
                var e = function () {
                this.fireEvent("success", [c, this.target, b, g, f, a]);
                }.bind(this);
                if (this.options.useReveal) {
        c.set("reveal", this.options.revealOptions).get("reveal").chain(e);
                c.reveal();
        }
        else {
        e();
        }
        }.bind(this), failure: function (a) {
        this.fireEvent("failure", a);
        }.bind(this) });
                this.attachReset();
                } });
        Locale.define("en-US", "FormValidator", { required: "This field is required.", length: "Please enter {length} characters (you entered {elLength} characters)", minLength: "Please enter at least {minLength} characters (you entered {length} characters).", maxLength: "Please enter no more than {maxLength} characters (you entered {length} characters).", integer: "Please enter an integer in this field. Numbers with decimals (e.g. 1.25) are not permitted.", numeric: 'Please enter only numeric values in this field (i.e. "1" or "1.1" or "-1" or "-1.1").', digits: "Please use numbers and punctuation only in this field (for example, a phone number with dashes or dots is permitted).", alpha: "Please use only letters (a-z) within this field. No spaces or other characters are allowed.", alphanum: "Please use only letters (a-z) or numbers (0-9) in this field. No spaces or other characters are allowed.", dateSuchAs: "Please enter a valid date such as {date}", dateInFormatMDY: 'Please enter a valid date such as MM/DD/YYYY (i.e. "12/31/1999")', email: 'Please enter a valid email address. For example "fred@domain.com".', url: "Please enter a valid URL such as http://www.example.com.", currencyDollar: "Please enter a valid $ amount. For example $100.00 .", oneRequired: "Please enter something for at least one of these inputs.", errorPrefix: "Error: ", warningPrefix: "Warning: ", noSpace: "There can be no spaces in this input.", reqChkByNode: "No items are selected.", requiredChk: "This field is required.", reqChkByName: "Please select a {label}.", match: "This field needs to match the {matchName} field", startDate: "the start date", endDate: "the end date", currendDate: "the current date", afterDate: "The date should be the same or after {label}.", beforeDate: "The date should be the same or before {label}.", startMonth: "Please select a start month", sameMonth: "These two dates must be in the same month - you must change one or the other.", creditcard: "The credit card number entered is invalid. Please check the number and try again. {length} digits entered." });
        if (!window.Form) {
window.Form = {};
        }
var InputValidator = this.InputValidator = new Class({ Implements: [Options], options: { errorMsg: "Validation failed.", test: Function.from(true) }, initialize: function (b, a) {
this.setOptions(a);
        this.className = b;
        }, test: function (b, a) {
b = document.id(b);
        return (b) ? this.options.test(b, a || this.getProps(b)) : false;
        }, getError: function (c, a) {
c = document.id(c);
        var b = this.options.errorMsg;
        if (typeOf(b) == "function") {
b = b(c, a || this.getProps(c));
}
return b;
        }, getProps: function (a) {
a = document.id(a);
        return (a) ? a.get("validatorProps") : {};
        } });
        Element.Properties.validators = { get: function () {
        return (this.get("data-validators") || this.className).clean().split(" ");
                } };
        Element.Properties.validatorProps = { set: function (a) {
        return this.eliminate("$moo:validatorProps").store("$moo:validatorProps", a);
                }, get: function (a) {
        if (a) {
        this.set(a);
        }
        if (this.retrieve("$moo:validatorProps")) {
        return this.retrieve("$moo:validatorProps");
        }
        if (this.getProperty("data-validator-properties") || this.getProperty("validatorProps")) {
        try {
        this.store("$moo:validatorProps", JSON.decode(this.getProperty("validatorProps") || this.getProperty("data-validator-properties")));
        }
        catch (c) {
        return {};
        }
        }
        else {
        var b = this.get("validators").filter(function (d) {
        return d.test(":");
        });
                if (!b.length) {
        this.store("$moo:validatorProps", {});
        }
        else {
        a = {};
                b.each(function (d) {
                var f = d.split(":");
                        if (f[1]) {
                try {
                a[f[0]] = JSON.decode(f[1]);
                }
                catch (g) {
                }
                }
                });
                this.store("$moo:validatorProps", a);
        }
        }
        return this.retrieve("$moo:validatorProps");
                } };
        Form.Validator = new Class({ Implements: [Options, Events], Binds: ["onSubmit"], options: { fieldSelectors: "input, select, textarea", ignoreHidden: true, ignoreDisabled: true, useTitles: false, evaluateOnSubmit: true, evaluateFieldsOnBlur: true, evaluateFieldsOnChange: true, serial: true, stopOnFailure: true, warningPrefix: function () {
        return Form.Validator.getMsg("warningPrefix") || "Warning: ";
                }, errorPrefix: function () {
        return Form.Validator.getMsg("errorPrefix") || "Error: ";
                } }, initialize: function (b, a) {
        this.setOptions(a);
                this.element = document.id(b);
                this.element.store("validator", this);
                this.warningPrefix = Function.from(this.options.warningPrefix)();
                this.errorPrefix = Function.from(this.options.errorPrefix)();
                if (this.options.evaluateOnSubmit) {
        this.element.addEvent("submit", this.onSubmit);
        }
        if (this.options.evaluateFieldsOnBlur || this.options.evaluateFieldsOnChange) {
        this.watchFields(this.getFields());
        }
        }, toElement: function () {
        return this.element;
                }, getFields: function () {
        return (this.fields = this.element.getElements(this.options.fieldSelectors));
                }, watchFields: function (a) {
        a.each(function (b) {
        if (this.options.evaluateFieldsOnBlur) {
        b.addEvent("blur", this.validationMonitor.pass([b, false], this));
        }
        if (this.options.evaluateFieldsOnChange) {
        b.addEvent("change", this.validationMonitor.pass([b, true], this));
        }
        }, this);
                }, validationMonitor: function () {
        clearTimeout(this.timer);
                this.timer = this.validateField.delay(50, this, arguments);
                }, onSubmit: function (a) {
        if (this.validate(a)) {
        this.reset();
        }
        }, reset: function () {
        this.getFields().each(this.resetField, this);
                return this;
                }, validate: function (b) {
        var a = this.getFields().map(function (c) {
        return this.validateField(c, true);
        }, this).every(function (c) {
        return c;
        });
                this.fireEvent("formValidate", [a, this.element, b]);
                if (this.options.stopOnFailure && !a && b) {
        b.preventDefault();
        }
        return a;
                }, validateField: function (j, b) {
        if (this.paused) {
        return true;
        }
        j = document.id(j);
                var f = !j.hasClass("validation-failed");
                var g, i;
                if (this.options.serial && !b) {
        g = this.element.getElement(".validation-failed");
                i = this.element.getElement(".warning");
        }
        if (j && (!g || b || j.hasClass("validation-failed") || (g && !this.options.serial))) {
        var a = j.get("validators");
                var d = a.some(function (k) {
                return this.getValidator(k);
                }, this);
                var h = [];
                a.each(function (k) {
                if (k && !this.test(k, j)) {
                h.include(k);
                }
                }, this);
                f = h.length === 0;
                if (d && !this.hasValidator(j, "warnOnly")) {
        if (f) {
        j.addClass("validation-passed").removeClass("validation-failed");
                this.fireEvent("elementPass", [j]);
        }
        else {
        j.addClass("validation-failed").removeClass("validation-passed");
                this.fireEvent("elementFail", [j, h]);
        }
        }
        if (!i) {
        var e = a.some(function (k) {
        if (k.test("^warn")) {
        return this.getValidator(k.replace(/^warn-/, ""));
        }
        else {
        return null;
        }
        }, this);
                j.removeClass("warning");
                var c = a.map(function (k) {
                if (k.test("^warn")) {
                return this.test(k.replace(/^warn-/, ""), j, true);
                }
                else {
                return null;
                }
                }, this);
        }
        }
        return f;
                }, test: function (b, d, e) {
        d = document.id(d);
                if ((this.options.ignoreHidden && !d.isVisible()) || (this.options.ignoreDisabled && d.get("disabled"))) {
        return true;
        }
        var a = this.getValidator(b);
                if (e != null) {
        e = false;
        }
        if (this.hasValidator(d, "warnOnly")) {
        e = true;
        }
        var c = this.hasValidator(d, "ignoreValidation") || (a ? a.test(d) : true);
                if (a && d.isVisible()) {
        this.fireEvent("elementValidate", [c, d, b, e]);
        }
        if (e) {
        return true;
        }
        return c;
                }, hasValidator: function (b, a) {
        return b.get("validators").contains(a);
                }, resetField: function (a) {
        a = document.id(a);
                if (a) {
        a.get("validators").each(function (b) {
        if (b.test("^warn-")) {
        b = b.replace(/^warn-/, "");
        }
        a.removeClass("validation-failed");
                a.removeClass("warning");
                a.removeClass("validation-passed");
        }, this);
        }
        return this;
                }, stop: function () {
        this.paused = true;
                return this;
                }, start: function () {
        this.paused = false;
                return this;
                }, ignoreField: function (a, b) {
        a = document.id(a);
                if (a) {
        this.enforceField(a);
                if (b) {
        a.addClass("warnOnly");
        }
        else {
        a.addClass("ignoreValidation");
        }
        }
        return this;
                }, enforceField: function (a) {
        a = document.id(a);
                if (a) {
        a.removeClass("warnOnly").removeClass("ignoreValidation");
        }
        return this;
                } });
        Form.Validator.getMsg = function (a) {
        return Locale.get("FormValidator." + a);
                };
        Form.Validator.adders = { validators: {}, add: function (b, a) {
        this.validators[b] = new InputValidator(b, a);
                if (!this.initialize) {
        this.implement({ validators: this.validators });
        }
        }, addAllThese: function (a) {
        Array.from(a).each(function (b) {
        this.add(b[0], b[1]);
        }, this);
                }, getValidator: function (a) {
        return this.validators[a.split(":")[0]];
                } };
        Object.append(Form.Validator, Form.Validator.adders);
        Form.Validator.implement(Form.Validator.adders);
        Form.Validator.add("IsEmpty", { errorMsg: false, test: function (a) {
        if (a.type == "select-one" || a.type == "select") {
        return !(a.selectedIndex >= 0 && a.options[a.selectedIndex].value != "");
        }
        else {
        return ((a.get("value") == null) || (a.get("value").length == 0));
        }
        } });
        Form.Validator.addAllThese([["required", { errorMsg: function () {
        return Form.Validator.getMsg("required");
                }, test: function (a) {
        return !Form.Validator.getValidator("IsEmpty").test(a);
                } }], ["length", { errorMsg: function (a, b) {
        if (typeOf(b.length) != "null") {
        return Form.Validator.getMsg("length").substitute({ length: b.length, elLength: a.get("value").length });
        }
        else {
        return "";
        }
        }, test: function (a, b) {
        if (typeOf(b.length) != "null") {
        return (a.get("value").length == b.length || a.get("value").length == 0);
        }
        else {
        return true;
        }
        } }], ["minLength", { errorMsg: function (a, b) {
        if (typeOf(b.minLength) != "null") {
        return Form.Validator.getMsg("minLength").substitute({ minLength: b.minLength, length: a.get("value").length });
        }
        else {
        return "";
        }
        }, test: function (a, b) {
        if (typeOf(b.minLength) != "null") {
        return (a.get("value").length >= (b.minLength || 0));
        }
        else {
        return true;
        }
        } }], ["maxLength", { errorMsg: function (a, b) {
        if (typeOf(b.maxLength) != "null") {
        return Form.Validator.getMsg("maxLength").substitute({ maxLength: b.maxLength, length: a.get("value").length });
        }
        else {
        return "";
        }
        }, test: function (a, b) {
        return a.get("value").length <= (b.maxLength || 10000);
                } }], ["validate-integer", { errorMsg: Form.Validator.getMsg.pass("integer"), test: function (a) {
        return Form.Validator.getValidator("IsEmpty").test(a) || (/^(-?[1-9]\d*|0)$/).test(a.get("value"));
                } }], ["validate-numeric", { errorMsg: Form.Validator.getMsg.pass("numeric"), test: function (a) {
        return Form.Validator.getValidator("IsEmpty").test(a) || (/^-?(?:0$0(?=\d*\.)|[1-9]|0)\d*(\.\d+)?$/).test(a.get("value"));
                } }], ["validate-digits", { errorMsg: Form.Validator.getMsg.pass("digits"), test: function (a) {
        return Form.Validator.getValidator("IsEmpty").test(a) || (/^[\d() .:\-\+#]+$/.test(a.get("value")));
                } }], ["validate-alpha", { errorMsg: Form.Validator.getMsg.pass("alpha"), test: function (a) {
        return Form.Validator.getValidator("IsEmpty").test(a) || (/^[a-zA-Z]+$/).test(a.get("value"));
                } }], ["validate-alphanum", { errorMsg: Form.Validator.getMsg.pass("alphanum"), test: function (a) {
        return Form.Validator.getValidator("IsEmpty").test(a) || !(/\W/).test(a.get("value"));
                } }], ["validate-date", { errorMsg: function (a, b) {
        if (Date.parse) {
        var c = b.dateFormat || "%x";
                return Form.Validator.getMsg("dateSuchAs").substitute({ date: new Date().format(c) });
        }
        else {
        return Form.Validator.getMsg("dateInFormatMDY");
        }
        }, test: function (e, g) {
        if (Form.Validator.getValidator("IsEmpty").test(e)) {
        return true;
        }
        var a = Locale.getCurrent().sets.Date, b = new RegExp([a.days, a.days_abbr, a.months, a.months_abbr].flatten().join("|"), "i"), i = e.get("value"), f = i.match(/[a-z]+/gi);
                if (f && !f.every(b.exec, b)) {
        return false;
        }
        var c = Date.parse(i), h = g.dateFormat || "%x", d = c.format(h);
                if (d != "invalid date") {
        e.set("value", d);
        }
        return c.isValid();
                } }], ["validate-email", { errorMsg: Form.Validator.getMsg.pass("email"), test: function (a) {
        return Form.Validator.getValidator("IsEmpty").test(a) || (/^(?:[a-z0-9!#$%&'*+\/=?^_`{|}~-]\.?){0,63}[a-z0-9!#$%&'*+\/=?^_`{|}~-]@(?:(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\.)*[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\])$/i).test(a.get("value"));
                } }], ["validate-url", { errorMsg: Form.Validator.getMsg.pass("url"), test: function (a) {
        return Form.Validator.getValidator("IsEmpty").test(a) || (/^(https?|ftp|rmtp|mms):\/\/(([A-Z0-9][A-Z0-9_-]*)(\.[A-Z0-9][A-Z0-9_-]*)+)(:(\d+))?\/?/i).test(a.get("value"));
                } }], ["validate-currency-dollar", { errorMsg: Form.Validator.getMsg.pass("currencyDollar"), test: function (a) {
        return Form.Validator.getValidator("IsEmpty").test(a) || (/^\$?\-?([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{0,2})?|[1-9]{1}\d*(\.[0-9]{0,2})?|0(\.[0-9]{0,2})?|(\.[0-9]{1,2})?)$/).test(a.get("value"));
                } }], ["validate-one-required", { errorMsg: Form.Validator.getMsg.pass("oneRequired"), test: function (a, b) {
        var c = document.id(b["validate-one-required"]) || a.getParent(b["validate-one-required"]);
                return c.getElements("input").some(function (d) {
        if (["checkbox", "radio"].contains(d.get("type"))) {
        return d.get("checked");
        }
        return d.get("value");
        });
                } }]]);
        Element.Properties.validator = { set: function (a) {
        this.get("validator").setOptions(a);
                }, get: function () {
        var a = this.retrieve("validator");
                if (!a) {
        a = new Form.Validator(this);
                this.store("validator", a);
        }
        return a;
                } };
        Element.implement({ validate: function (a) {
        if (a) {
        this.set("validator", a);
        }
        return this.get("validator").validate();
                } });
        var FormValidator = Form.Validator;
        Form.Validator.Inline = new Class({ Extends: Form.Validator, options: { showError: function (a) {
        if (a.reveal) {
        a.reveal();
        }
        else {
        a.setStyle("display", "block");
        }
        }, hideError: function (a) {
        if (a.dissolve) {
        a.dissolve();
        }
        else {
        a.setStyle("display", "none");
        }
        }, scrollToErrorsOnSubmit: true, scrollToErrorsOnBlur: false, scrollToErrorsOnChange: false, scrollFxOptions: { transition: "quad:out", offset: { y: - 20 } } }, initialize: function (b, a) {
        this.parent(b, a);
                this.addEvent("onElementValidate", function (g, f, e, h) {
                var d = this.getValidator(e);
                        if (!g && d.getError(f)) {
                if (h) {
                f.addClass("warning");
                }
                var c = this.makeAdvice(e, f, d.getError(f), h);
                        this.insertAdvice(c, f);
                        this.showAdvice(e, f);
                }
                else {
                this.hideAdvice(e, f);
                }
                });
                }, makeAdvice: function (d, f, c, g) {
        var e = (g) ? this.warningPrefix : this.errorPrefix;
                e += (this.options.useTitles) ? f.title || c : c;
                var a = (g) ? "warning-advice" : "validation-advice";
                var b = this.getAdvice(d, f);
                if (b) {
        b = b.set("html", e);
        }
        else {
        b = new Element("div", { html: e, styles: { display: "none" }, id: "advice-" + d.split(":")[0] + "-" + this.getFieldId(f) }).addClass(a);
        }
        f.store("$moo:advice-" + d, b);
                return b;
                }, getFieldId: function (a) {
        return a.id ? a.id : a.id = "input_" + a.name;
                }, showAdvice: function (b, c) {
        var a = this.getAdvice(b, c);
                if (a && !c.retrieve("$moo:" + this.getPropName(b)) && (a.getStyle("display") == "none" || a.getStyle("visiblity") == "hidden" || a.getStyle("opacity") == 0)) {
        c.store("$moo:" + this.getPropName(b), true);
                this.options.showError(a);
                this.fireEvent("showAdvice", [c, a, b]);
        }
        }, hideAdvice: function (b, c) {
        var a = this.getAdvice(b, c);
                if (a && c.retrieve("$moo:" + this.getPropName(b))) {
        c.store("$moo:" + this.getPropName(b), false);
                this.options.hideError(a);
                this.fireEvent("hideAdvice", [c, a, b]);
        }
        }, getPropName: function (a) {
        return "advice" + a;
                }, resetField: function (a) {
        a = document.id(a);
                if (!a) {
        return this;
        }
        this.parent(a);
                a.get("validators").each(function (b) {
        this.hideAdvice(b, a);
        }, this);
                return this;
                }, getAllAdviceMessages: function (d, c) {
        var b = [];
                if (d.hasClass("ignoreValidation") && !c) {
        return b;
        }
        var a = d.get("validators").some(function (g) {
        var e = g.test("^warn-") || d.hasClass("warnOnly");
                if (e) {
        g = g.replace(/^warn-/, "");
        }
        var f = this.getValidator(g);
                if (!f) {
        return;
        }
        b.push({ message: f.getError(d), warnOnly: e, passed: f.test(), validator: f });
        }, this);
                return b;
                }, getAdvice: function (a, b) {
        return b.retrieve("$moo:advice-" + a);
                }, insertAdvice: function (a, c) {
        var b = c.get("validatorProps");
                if (!b.msgPos || !document.id(b.msgPos)) {
        if (c.type && c.type.toLowerCase() == "radio") {
        c.getParent().adopt(a);
        }
        else {
        a.inject(document.id(c), "after");
        }
        }
        else {
        document.id(b.msgPos).grab(a);
        }
        }, validateField: function (g, f, b) {
        var a = this.parent(g, f);
                if (((this.options.scrollToErrorsOnSubmit && b == null) || b) && !a) {
        var c = document.id(this).getElement(".validation-failed");
                var d = document.id(this).getParent();
                while (d != document.body && d.getScrollSize().y == d.getSize().y) {
        d = d.getParent();
        }
        var e = d.retrieve("$moo:fvScroller");
                if (!e && window.Fx && Fx.Scroll) {
        e = new Fx.Scroll(d, this.options.scrollFxOptions);
                d.store("$moo:fvScroller", e);
        }
        if (c) {
        if (e) {
        e.toElement(c);
        }
        else {
        d.scrollTo(d.getScroll().x, c.getPosition(d).y - 20);
        }
        }
        }
        return a;
                }, watchFields: function (a) {
        a.each(function (b) {
        if (this.options.evaluateFieldsOnBlur) {
        b.addEvent("blur", this.validationMonitor.pass([b, false, this.options.scrollToErrorsOnBlur], this));
        }
        if (this.options.evaluateFieldsOnChange) {
        b.addEvent("change", this.validationMonitor.pass([b, true, this.options.scrollToErrorsOnChange], this));
        }
        }, this);
                } });
        Form.Validator.addAllThese([["validate-enforce-oncheck", { test: function (a, b) {
        var c = a.getParent("form").retrieve("validator");
                if (!c) {
        return true;
        }
        (b.toEnforce || document.id(b.enforceChildrenOf).getElements("input, select, textarea")).map(function (d) {
        if (a.checked) {
        c.enforceField(d);
        }
        else {
        c.ignoreField(d);
                c.resetField(d);
        }
        });
                return true;
                } }], ["validate-ignore-oncheck", { test: function (a, b) {
        var c = a.getParent("form").retrieve("validator");
                if (!c) {
        return true;
        }
        (b.toIgnore || document.id(b.ignoreChildrenOf).getElements("input, select, textarea")).each(function (d) {
        if (a.checked) {
        c.ignoreField(d);
                c.resetField(d);
        }
        else {
        c.enforceField(d);
        }
        });
                return true;
                } }], ["validate-nospace", { errorMsg: function () {
        return Form.Validator.getMsg("noSpace");
                }, test: function (a, b) {
        return !a.get("value").test(/\s/);
                } }], ["validate-toggle-oncheck", { test: function (b, c) {
        var d = b.getParent("form").retrieve("validator");
                if (!d) {
        return true;
        }
        var a = c.toToggle || document.id(c.toToggleChildrenOf).getElements("input, select, textarea");
                if (!b.checked) {
        a.each(function (e) {
        d.ignoreField(e);
                d.resetField(e);
        });
        }
        else {
        a.each(function (e) {
        d.enforceField(e);
        });
        }
        return true;
                } }], ["validate-reqchk-bynode", { errorMsg: function () {
        return Form.Validator.getMsg("reqChkByNode");
                }, test: function (a, b) {
        return (document.id(b.nodeId).getElements(b.selector || "input[type=checkbox], input[type=radio]")).some(function (c) {
        return c.checked;
        });
                } }], ["validate-required-check", { errorMsg: function (a, b) {
        return b.useTitle ? a.get("title") : Form.Validator.getMsg("requiredChk");
                }, test: function (a, b) {
        return !!a.checked;
                } }], ["validate-reqchk-byname", { errorMsg: function (a, b) {
        return Form.Validator.getMsg("reqChkByName").substitute({ label: b.label || a.get("type") });
                }, test: function (b, d) {
        var c = d.groupName || b.get("name");
                var a = $$(document.getElementsByName(c)).some(function (g, f) {
        return g.checked;
        });
                var e = b.getParent("form").retrieve("validator");
                if (a && e) {
        e.resetField(b);
        }
        return a;
                } }], ["validate-match", { errorMsg: function (a, b) {
        return Form.Validator.getMsg("match").substitute({ matchName: b.matchName || document.id(b.matchInput).get("name") });
                }, test: function (b, c) {
        var d = b.get("value");
                var a = document.id(c.matchInput) && document.id(c.matchInput).get("value");
                return d && a ? d == a : true;
                } }], ["validate-after-date", { errorMsg: function (a, b) {
        return Form.Validator.getMsg("afterDate").substitute({ label: b.afterLabel || (b.afterElement ? Form.Validator.getMsg("startDate") : Form.Validator.getMsg("currentDate")) });
                }, test: function (b, c) {
        var d = document.id(c.afterElement) ? Date.parse(document.id(c.afterElement).get("value")) : new Date();
                var a = Date.parse(b.get("value"));
                return a && d ? a >= d : true;
                } }], ["validate-before-date", { errorMsg: function (a, b) {
        return Form.Validator.getMsg("beforeDate").substitute({ label: b.beforeLabel || (b.beforeElement ? Form.Validator.getMsg("endDate") : Form.Validator.getMsg("currentDate")) });
                }, test: function (b, c) {
        var d = Date.parse(b.get("value"));
                var a = document.id(c.beforeElement) ? Date.parse(document.id(c.beforeElement).get("value")) : new Date();
                return a && d ? a >= d : true;
                } }], ["validate-custom-required", { errorMsg: function () {
        return Form.Validator.getMsg("required");
                }, test: function (a, b) {
        return a.get("value") != b.emptyValue;
                } }], ["validate-same-month", { errorMsg: function (a, b) {
        var c = document.id(b.sameMonthAs) && document.id(b.sameMonthAs).get("value");
                var d = a.get("value");
                if (d != "") {
        return Form.Validator.getMsg(c ? "sameMonth" : "startMonth");
        }
        }, test: function (a, b) {
        var d = Date.parse(a.get("value"));
                var c = Date.parse(document.id(b.sameMonthAs) && document.id(b.sameMonthAs).get("value"));
                return d && c ? d.format("%B") == c.format("%B") : true;
                } }], ["validate-cc-num", { errorMsg: function (a) {
        var b = a.get("value").replace(/[^0-9]/g, "");
                return Form.Validator.getMsg("creditcard").substitute({ length: b.length });
                }, test: function (c) {
        if (Form.Validator.getValidator("IsEmpty").test(c)) {
        return true;
        }
        var g = c.get("value");
                g = g.replace(/[^0-9]/g, "");
                var a = false;
                if (g.test(/^4[0-9]{12}([0-9]{3})?$/)) {
        a = "Visa";
        }
        else {
        if (g.test(/^5[1-5]([0-9]{14})$/)) {
        a = "Master Card";
        }
        else {
        if (g.test(/^3[47][0-9]{13}$/)) {
        a = "American Express";
        }
        else {
        if (g.test(/^6011[0-9]{12}$/)) {
        a = "Discover";
        }
        }
        }
        }
        if (a) {
        var d = 0;
                var e = 0;
                for (var b = g.length - 1; b >= 0; --b) {
        e = g.charAt(b).toInt();
                if (e == 0) {
        continue;
        }
        if ((g.length - b) % 2 == 0) {
        e += e;
        }
        if (e > 9) {
        e = e.toString().charAt(0).toInt() + e.toString().charAt(1).toInt();
        }
        d += e;
        }
        if ((d % 10) == 0) {
        return true;
        }
        }
        var f = "";
                while (g != "") {
        f += " " + g.substr(0, 4);
                g = g.substr(4);
        }
        c.getParent("form").retrieve("validator").ignoreField(c);
                c.set("value", f.clean());
                c.getParent("form").retrieve("validator").enforceField(c);
                return false;
                } }]]);
        var OverText = new Class({ Implements: [Options, Events, Class.Occlude], Binds: ["reposition", "assert", "focus", "hide"], options: { element: "label", labelClass: "overTxtLabel", positionOptions: { position: "upperLeft", edge: "upperLeft", offset: { x: 4, y: 2 } }, poll: false, pollInterval: 250, wrap: false }, property: "OverText", initialize: function (b, a) {
        b = this.element = document.id(b);
                if (this.occlude()) {
        return this.occluded;
        }
        this.setOptions(a);
                this.attach(b);
                OverText.instances.push(this);
                if (this.options.poll) {
        this.poll();
        }
        }, toElement: function () {
        return this.element;
                }, attach: function () {
        var b = this.element, a = this.options, c = a.textOverride || b.get("alt") || b.get("title");
                if (!c) {
        return this;
        }
        var d = this.text = new Element(a.element, { "class": a.labelClass, styles: { lineHeight: "normal", position: "absolute", cursor: "text" }, html: c, events: { click: this.hide.pass(a.element == "label", this) } }).inject(b, "after");
                if (a.element == "label") {
        if (!b.get("id")) {
        b.set("id", "input_" + String.uniqueID());
        }
        d.set("for", b.get("id"));
        }
        if (a.wrap) {
        this.textHolder = new Element("div.overTxtWrapper", { styles: { lineHeight: "normal", position: "relative" } }).grab(d).inject(b, "before");
        }
        return this.enable();
                }, destroy: function () {
        this.element.eliminate(this.property);
                this.disable();
                if (this.text) {
        this.text.destroy();
        }
        if (this.textHolder) {
        this.textHolder.destroy();
        }
        return this;
                }, disable: function () {
        this.element.removeEvents({ focus: this.focus, blur: this.assert, change: this.assert });
                window.removeEvent("resize", this.reposition);
                this.hide(true, true);
                return this;
                }, enable: function () {
        this.element.addEvents({ focus: this.focus, blur: this.assert, change: this.assert });
                window.addEvent("resize", this.reposition);
                this.reposition();
                return this;
                }, wrap: function () {
        if (this.options.element == "label") {
        if (!this.element.get("id")) {
        this.element.set("id", "input_" + String.uniqueID());
        }
        this.text.set("for", this.element.get("id"));
        }
        }, startPolling: function () {
        this.pollingPaused = false;
                return this.poll();
                }, poll: function (a) {
        if (this.poller && !a) {
        return this;
        }
        if (a) {
        clearInterval(this.poller);
        }
        else {
        this.poller = (function () {
        if (!this.pollingPaused) {
        this.assert(true);
        }
        }).periodical(this.options.pollInterval, this);
        }
        return this;
                }, stopPolling: function () {
        this.pollingPaused = true;
                return this.poll(true);
                }, focus: function () {
        if (this.text && (!this.text.isDisplayed() || this.element.get("disabled"))) {
        return this;
        }
        return this.hide();
                }, hide: function (c, a) {
        if (this.text && (this.text.isDisplayed() && (!this.element.get("disabled") || a))) {
        this.text.hide();
                this.fireEvent("textHide", [this.text, this.element]);
                this.pollingPaused = true;
                if (!c) {
        try {
        this.element.fireEvent("focus");
                this.element.focus();
        }
        catch (b) {
        }
        }
        }
        return this;
                }, show: function () {
        if (this.text && !this.text.isDisplayed()) {
        this.text.show();
                this.reposition();
                this.fireEvent("textShow", [this.text, this.element]);
                this.pollingPaused = false;
        }
        return this;
                }, test: function () {
        return !this.element.get("value");
                }, assert: function (a) {
        return this[this.test() ? "show" : "hide"](a);
                }, reposition: function () {
        this.assert(true);
                if (!this.element.isVisible()) {
        return this.stopPolling().hide();
        }
        if (this.text && this.test()) {
        this.text.position(Object.merge(this.options.positionOptions, { relativeTo: this.element }));
        }
        return this;
                } });
        OverText.instances = [];
        Object.append(OverText, { each: function (a) {
        return OverText.instances.each(function (c, b) {
        if (c.element && c.text) {
        a.call(OverText, c, b);
        }
        });
                }, update: function () {
        return OverText.each(function (a) {
        return a.reposition();
        });
                }, hideAll: function () {
        return OverText.each(function (a) {
        return a.hide(true, true);
        });
                }, showAll: function () {
        return OverText.each(function (a) {
        return a.show();
        });
                } });
        Fx.Elements = new Class({ Extends: Fx.CSS, initialize: function (b, a) {
        this.elements = this.subject = $$(b);
                this.parent(a);
                }, compute: function (g, h, j) {
        var c = {};
                for (var d in g) {
        var a = g[d], e = h[d], f = c[d] = {};
                for (var b in a) {
        f[b] = this.parent(a[b], e[b], j);
        }
        }
        return c;
                }, set: function (b) {
        for (var c in b) {
        if (!this.elements[c]) {
        continue;
        }
        var a = b[c];
                for (var d in a) {
        this.render(this.elements[c], d, a[d], this.options.unit);
        }
        }
        return this;
                }, start: function (c) {
        if (!this.check(c)) {
        return this;
        }
        var h = {}, j = {};
                for (var d in c) {
        if (!this.elements[d]) {
        continue;
        }
        var f = c[d], a = h[d] = {}, g = j[d] = {};
                for (var b in f) {
        var e = this.prepare(this.elements[d], b, f[b]);
                a[b] = e.from;
                g[b] = e.to;
        }
        }
        return this.parent(h, j);
                } });
        Fx.Accordion = new Class({ Extends: Fx.Elements, options: { fixedHeight: false, fixedWidth: false, display: 0, show: false, height: true, width: false, opacity: true, alwaysHide: false, trigger: "click", initialDisplayFx: true, resetHeight: true }, initialize: function () {
        var g = function (h) {
        return h != null;
        };
                var f = Array.link(arguments, { container: Type.isElement, options: Type.isObject, togglers: g, elements: g });
                this.parent(f.elements, f.options);
                var b = this.options, e = this.togglers = $$(f.togglers);
                this.previous = - 1;
                this.internalChain = new Chain();
                if (b.alwaysHide) {
        this.options.link = "chain";
        }
        if (b.show || this.options.show === 0) {
        b.display = false;
                this.previous = b.show;
        }
        if (b.start) {
        b.display = false;
                b.show = false;
        }
        var d = this.effects = {};
                if (b.opacity) {
        d.opacity = "fullOpacity";
        }
        if (b.width) {
        d.width = b.fixedWidth ? "fullWidth" : "offsetWidth";
        }
        if (b.height) {
        d.height = b.fixedHeight ? "fullHeight" : "scrollHeight";
        }
        for (var c = 0, a = e.length; c < a; c++) {
        this.addSection(e[c], this.elements[c]);
        }
        this.elements.each(function (j, h) {
        if (b.show === h) {
        this.fireEvent("active", [e[h], j]);
        }
        else {
        for (var k in d) {
        j.setStyle(k, 0);
        }
        }
        }, this);
                if (b.display || b.display === 0 || b.initialDisplayFx === false) {
        this.display(b.display, b.initialDisplayFx);
        }
        if (b.fixedHeight !== false) {
        b.resetHeight = false;
        }
        this.addEvent("complete", this.internalChain.callChain.bind(this.internalChain));
                }, addSection: function (g, d) {
        g = document.id(g);
                d = document.id(d);
                this.togglers.include(g);
                this.elements.include(d);
                var f = this.togglers, c = this.options, h = f.contains(g), a = f.indexOf(g), b = this.display.pass(a, this);
                g.store("accordion:display", b).addEvent(c.trigger, b);
                if (c.height) {
        d.setStyles({ "padding-top": 0, "border-top": "none", "padding-bottom": 0, "border-bottom": "none" });
        }
        if (c.width) {
        d.setStyles({ "padding-left": 0, "border-left": "none", "padding-right": 0, "border-right": "none" });
        }
        d.fullOpacity = 1;
                if (c.fixedWidth) {
        d.fullWidth = c.fixedWidth;
        }
        if (c.fixedHeight) {
        d.fullHeight = c.fixedHeight;
        }
        d.setStyle("overflow", "hidden");
                if (!h) {
        for (var e in this.effects) {
        d.setStyle(e, 0);
        }
        }
        return this;
                }, removeSection: function (f, b) {
        var e = this.togglers, a = e.indexOf(f), c = this.elements[a];
                var d = function () {
                e.erase(f);
                        this.elements.erase(c);
                        this.detach(f);
                }.bind(this);
                if (this.now == a || b != null) {
        this.display(b != null ? b : (a - 1 >= 0 ? a - 1 : 0)).chain(d);
        }
        else {
        d();
        }
        return this;
                }, detach: function (b) {
        var a = function (c) {
        c.removeEvent(this.options.trigger, c.retrieve("accordion:display"));
        }.bind(this);
                if (!b) {
        this.togglers.each(a);
        }
        else {
        a(b);
        }
        return this;
                }, display: function (b, c) {
        if (!this.check(b, c)) {
        return this;
        }
        var h = {}, g = this.elements, a = this.options, f = this.effects;
                if (c == null) {
        c = true;
        }
        if (typeOf(b) == "element") {
        b = g.indexOf(b);
        }
        if (b == this.previous && !a.alwaysHide) {
        return this;
        }
        if (a.resetHeight) {
        var e = g[this.previous];
                if (e && !this.selfHidden) {
        for (var d in f) {
        e.setStyle(d, e[f[d]]);
        }
        }
        }
        if ((this.timer && a.link == "chain") || (b === this.previous && !a.alwaysHide)) {
        return this;
        }
        this.previous = b;
                this.selfHidden = false;
                g.each(function (l, k) {
                h[k] = {};
                        var j;
                        if (k != b) {
                j = true;
                }
                else {
                if (a.alwaysHide && ((l.offsetHeight > 0 && a.height) || l.offsetWidth > 0 && a.width)) {
                j = true;
                        this.selfHidden = true;
                }
                }
                this.fireEvent(j ? "background" : "active", [this.togglers[k], l]);
                        for (var m in f) {
                h[k][m] = j ? 0 : l[f[m]];
                }
                if (!c && !j && a.resetHeight) {
                h[k].height = "auto";
                }
                }, this);
                this.internalChain.clearChain();
                this.internalChain.chain(function () {
                if (a.resetHeight && !this.selfHidden) {
                var i = g[b];
                        if (i) {
                i.setStyle("height", "auto");
                }
                }
                }.bind(this));
                return c ? this.start(h) : this.set(h).internalChain.callChain();
                } });
        var Accordion = new Class({ Extends: Fx.Accordion, initialize: function () {
        this.parent.apply(this, arguments);
                var a = Array.link(arguments, { container: Type.isElement });
                this.container = a.container;
                }, addSection: function (c, b, e) {
        c = document.id(c);
                b = document.id(b);
                var d = this.togglers.contains(c);
                var a = this.togglers.length;
                if (a && (!d || e)) {
        e = e != null ? e : a - 1;
                c.inject(this.togglers[e], "before");
                b.inject(c, "after");
        }
        else {
        if (this.container && !d) {
        c.inject(this.container);
                b.inject(this.container);
        }
        }
        return this.parent.apply(this, arguments);
                } });
        Fx.Move = new Class({ Extends: Fx.Morph, options: { relativeTo: document.body, position: "center", edge: false, offset: { x: 0, y: 0 } }, start: function (a) {
        var b = this.element, c = b.getStyles("top", "left");
                if (c.top == "auto" || c.left == "auto") {
        b.setPosition(b.getPosition(b.getOffsetParent()));
        }
        return this.parent(b.position(Object.merge({}, this.options, a, { returnPos: true })));
                } });
        Element.Properties.move = { set: function (a) {
        this.get("move").cancel().setOptions(a);
                return this;
                }, get: function () {
        var a = this.retrieve("move");
                if (!a) {
        a = new Fx.Move(this, { link: "cancel" });
                this.store("move", a);
        }
        return a;
                } };
        Element.implement({ move: function (a) {
        this.get("move").start(a);
                return this;
                } });
        (function () {
        Fx.Scroll = new Class({ Extends: Fx, options: { offset: { x: 0, y: 0 }, wheelStops: true }, initialize: function (c, b) {
        this.element = this.subject = document.id(c);
                this.parent(b);
                if (typeOf(this.element) != "element") {
        this.element = document.id(this.element.getDocument().body);
        }
        if (this.options.wheelStops) {
        var d = this.element, e = this.cancel.pass(false, this);
                this.addEvent("start", function () {
                d.addEvent("mousewheel", e);
                }, true);
                this.addEvent("complete", function () {
                d.removeEvent("mousewheel", e);
                }, true);
        }
        }, set: function () {
        var b = Array.flatten(arguments);
                if (Browser.firefox) {
        b = [Math.round(b[0]), Math.round(b[1])];
        }
        this.element.scrollTo(b[0], b[1]);
                return this;
        }, compute: function (d, c, b) {
        return [0, 1].map(function (e) {
        return Fx.compute(d[e], c[e], b);
        });
        }, start: function (c, d) {
        if (!this.check(c, d)) {
        return this;
        }
        var b = this.element.getScroll();
                return this.parent([b.x, b.y], [c, d]);
        }, calculateScroll: function (g, f) {
        var d = this.element, b = d.getScrollSize(), h = d.getScroll(), j = d.getSize(), c = this.options.offset, i = { x: g, y: f };
                for (var e in i) {
        if (!i[e] && i[e] !== 0) {
        i[e] = h[e];
        }
        if (typeOf(i[e]) != "number") {
        i[e] = b[e] - j[e];
        }
        i[e] += c[e];
        }
        return [i.x, i.y];
        }, toTop: function () {
        return this.start.apply(this, this.calculateScroll(false, 0));
        }, toLeft: function () {
        return this.start.apply(this, this.calculateScroll(0, false));
        }, toRight: function () {
        return this.start.apply(this, this.calculateScroll("right", false));
        }, toBottom: function () {
        return this.start.apply(this, this.calculateScroll(false, "bottom"));
        }, toElement: function (d, e) {
        e = e ? Array.from(e) : ["x", "y"];
                var c = a(this.element) ? { x: 0, y: 0 } : this.element.getScroll();
                var b = Object.map(document.id(d).getPosition(this.element), function (g, f) {
                return e.contains(f) ? g + c[f] : false;
                });
                return this.start.apply(this, this.calculateScroll(b.x, b.y));
        }, toElementEdge: function (d, g, e) {
        g = g ? Array.from(g) : ["x", "y"];
                d = document.id(d);
                var i = {}, f = d.getPosition(this.element), j = d.getSize(), h = this.element.getScroll(), b = this.element.getSize(), c = { x: f.x + j.x, y: f.y + j.y };
                ["x", "y"].each(function (k) {
        if (g.contains(k)) {
        if (c[k] > h[k] + b[k]) {
        i[k] = c[k] - b[k];
        }
        if (f[k] < h[k]) {
        i[k] = f[k];
        }
        }
        if (i[k] == null) {
        i[k] = h[k];
        }
        if (e && e[k]) {
        i[k] = i[k] + e[k];
        }
        }, this);
                if (i.x != h.x || i.y != h.y) {
        this.start(i.x, i.y);
        }
        return this;
        }, toElementCenter: function (e, f, h) {
        f = f ? Array.from(f) : ["x", "y"];
                e = document.id(e);
                var i = {}, c = e.getPosition(this.element), d = e.getSize(), b = this.element.getScroll(), g = this.element.getSize();
                ["x", "y"].each(function (j) {
        if (f.contains(j)) {
        i[j] = c[j] - (g[j] - d[j]) / 2;
        }
        if (i[j] == null) {
        i[j] = b[j];
        }
        if (h && h[j]) {
        i[j] = i[j] + h[j];
        }
        }, this);
                if (i.x != b.x || i.y != b.y) {
        this.start(i.x, i.y);
        }
        return this;
        } });
                Fx.Scroll.implement({ scrollToCenter: function () {
                return this.toElementCenter.apply(this, arguments);
                }, scrollIntoView: function () {
                return this.toElementEdge.apply(this, arguments);
                } });
                function a(b) {
                return (/^(?:body|html)$/i).test(b.tagName);
                }
        })();
        Fx.Slide = new Class({ Extends: Fx, options: { mode: "vertical", wrapper: false, hideOverflow: true, resetHeight: false }, initialize: function (b, a) {
        b = this.element = this.subject = document.id(b);
                this.parent(a);
                a = this.options;
                var d = b.retrieve("wrapper"), c = b.getStyles("margin", "position", "overflow");
                if (a.hideOverflow) {
        c = Object.append(c, { overflow: "hidden" });
        }
        if (a.wrapper) {
        d = document.id(a.wrapper).setStyles(c);
        }
        if (!d) {
        d = new Element("div", { styles: c }).wraps(b);
        }
        b.store("wrapper", d).setStyle("margin", 0);
                if (b.getStyle("overflow") == "visible") {
        b.setStyle("overflow", "hidden");
        }
        this.now = [];
                this.open = true;
                this.wrapper = d;
                this.addEvent("complete", function () {
                this.open = (d["offset" + this.layout.capitalize()] != 0);
                        if (this.open && this.options.resetHeight) {
                d.setStyle("height", "");
                }
                }, true);
                }, vertical: function () {
        this.margin = "margin-top";
                this.layout = "height";
                this.offset = this.element.offsetHeight;
                }, horizontal: function () {
        this.margin = "margin-left";
                this.layout = "width";
                this.offset = this.element.offsetWidth;
                }, set: function (a) {
        this.element.setStyle(this.margin, a[0]);
                this.wrapper.setStyle(this.layout, a[1]);
                return this;
                }, compute: function (c, b, a) {
        return [0, 1].map(function (d) {
        return Fx.compute(c[d], b[d], a);
        });
                }, start: function (b, e) {
        if (!this.check(b, e)) {
        return this;
        }
        this[e || this.options.mode]();
                var d = this.element.getStyle(this.margin).toInt(), c = this.wrapper.getStyle(this.layout).toInt(), a = [[d, c], [0, this.offset]], g = [[d, c], [ - this.offset, 0]], f;
                switch (b) {
        case "in":
                f = a;
                break;
                case "out":
                f = g;
                break;
                case "toggle": f = (c == 0) ? a : g;
        }
        return this.parent(f[0], f[1]);
                }, slideIn: function (a) {
        return this.start("in", a);
                }, slideOut: function (a) {
        return this.start("out", a);
                }, hide: function (a) {
        this[a || this.options.mode]();
                this.open = false;
                return this.set([ - this.offset, 0]);
                }, show: function (a) {
        this[a || this.options.mode]();
                this.open = true;
                return this.set([0, this.offset]);
                }, toggle: function (a) {
        return this.start("toggle", a);
                } });
        Element.Properties.slide = { set: function (a) {
        this.get("slide").cancel().setOptions(a);
                return this;
                }, get: function () {
        var a = this.retrieve("slide");
                if (!a) {
        a = new Fx.Slide(this, { link: "cancel" });
                this.store("slide", a);
        }
        return a;
                } };
        Element.implement({ slide: function (d, e) {
        d = d || "toggle";
                var b = this.get("slide"), a;
                switch (d) {
        case "hide":
                b.hide(e);
                break;
                case "show":
                b.show(e);
                break;
                case "toggle":
                var c = this.retrieve("slide:flag", b.open);
                b[c ? "slideOut" : "slideIn"](e);
                this.store("slide:flag", !c);
                a = true;
                break;
                default: b.start(d, e);
        }
        if (!a) {
        this.eliminate("slide:flag");
        }
        return this;
                } });
        var SmoothScroll = Fx.SmoothScroll = new Class({ Extends: Fx.Scroll, options: { axes: ["x", "y"] }, initialize: function (c, d) {
        d = d || document;
                this.doc = d.getDocument();
                this.parent(this.doc, c);
                var e = d.getWindow(), a = e.location.href.match(/^[^#]*/)[0] + "#", b = $$(this.options.links || this.doc.links);
                b.each(function (g) {
                if (g.href.indexOf(a) != 0) {
                return;
                }
                var f = g.href.substr(a.length);
                        if (f) {
                this.useLink(g, f);
                }
                }, this);
                this.addEvent("complete", function () {
                e.location.hash = this.anchor;
                        this.element.scrollTo(this.to[0], this.to[1]);
                }, true);
                }, useLink: function (b, a) {
        b.addEvent("click", function (d) {
        var c = document.id(a) || this.doc.getElement("a[name=" + a + "]");
                if (!c) {
        return;
        }
        d.preventDefault();
                this.toElement(c, this.options.axes).chain(function () {
        this.fireEvent("scrolledTo", [b, c]);
        }.bind(this));
                this.anchor = a;
        }.bind(this));
                return this;
                } });
        Fx.Sort = new Class({ Extends: Fx.Elements, options: { mode: "vertical" }, initialize: function (b, a) {
        this.parent(b, a);
                this.elements.each(function (c) {
                if (c.getStyle("position") == "static") {
                c.setStyle("position", "relative");
                }
                });
                this.setDefaultOrder();
                }, setDefaultOrder: function () {
        this.currentOrder = this.elements.map(function (b, a) {
        return a;
        });
                }, sort: function () {
        if (!this.check(arguments)) {
        return this;
        }
        var e = Array.flatten(arguments);
                var i = 0, a = 0, c = {}, h = {}, d = this.options.mode == "vertical";
                var f = this.elements.map(function (m, k) {
                var l = m.getComputedSize({ styles: ["border", "padding", "margin"] });
                        var n;
                        if (d) {
                n = { top: i, margin: l["margin-top"], height: l.totalHeight };
                        i += n.height - l["margin-top"];
                }
                else {
                n = { left: a, margin: l["margin-left"], width: l.totalWidth };
                        a += n.width;
                }
                var j = d ? "top" : "left";
                        h[k] = {};
                        var o = m.getStyle(j).toInt();
                        h[k][j] = o || 0;
                        return n;
                }, this);
                this.set(h);
                e = e.map(function (j) {
                return j.toInt();
                });
                if (e.length != this.elements.length) {
        this.currentOrder.each(function (j) {
        if (!e.contains(j)) {
        e.push(j);
        }
        });
                if (e.length > this.elements.length) {
        e.splice(this.elements.length - 1, e.length - this.elements.length);
        }
        }
        var b = 0;
                i = a = 0;
                e.each(function (k) {
                var j = {};
                        if (d) {
                j.top = i - f[k].top - b;
                        i += f[k].height;
                }
                else {
                j.left = a - f[k].left;
                        a += f[k].width;
                }
                b = b + f[k].margin;
                        c[k] = j;
                }, this);
                var g = {};
                Array.clone(e).sort().each(function (j) {
        g[j] = c[j];
        });
                this.start(g);
                this.currentOrder = e;
                return this;
                }, rearrangeDOM: function (a) {
        a = a || this.currentOrder;
                var b = this.elements[0].getParent();
                var c = [];
                this.elements.setStyle("opacity", 0);
                a.each(function (d) {
                c.push(this.elements[d].inject(b).setStyles({ top: 0, left: 0 }));
                }, this);
                this.elements.setStyle("opacity", 1);
                this.elements = $$(c);
                this.setDefaultOrder();
                return this;
                }, getDefaultOrder: function () {
        return this.elements.map(function (b, a) {
        return a;
        });
                }, getCurrentOrder: function () {
        return this.currentOrder;
                }, forward: function () {
        return this.sort(this.getDefaultOrder());
                }, backward: function () {
        return this.sort(this.getDefaultOrder().reverse());
                }, reverse: function () {
        return this.sort(this.currentOrder.reverse());
                }, sortByElements: function (a) {
        return this.sort(a.map(function (b) {
        return this.elements.indexOf(b);
        }, this));
                }, swap: function (c, b) {
        if (typeOf(c) == "element") {
        c = this.elements.indexOf(c);
        }
        if (typeOf(b) == "element") {
        b = this.elements.indexOf(b);
        }
        var a = Array.clone(this.currentOrder);
                a[this.currentOrder.indexOf(c)] = b;
                a[this.currentOrder.indexOf(b)] = c;
                return this.sort(a);
                } });
        var Drag = new Class({ Implements: [Events, Options], options: { snap: 6, unit: "px", grid: false, style: true, limit: false, handle: false, invert: false, preventDefault: false, stopPropagation: false, modifiers: { x: "left", y: "top" } }, initialize: function () {
        var b = Array.link(arguments, { options: Type.isObject, element: function (c) {
        return c != null;
        } });
                this.element = document.id(b.element);
                this.document = this.element.getDocument();
                this.setOptions(b.options || {});
                var a = typeOf(this.options.handle);
                this.handles = ((a == "array" || a == "collection") ? $$(this.options.handle) : document.id(this.options.handle)) || this.element;
                this.mouse = { now: {}, pos: {} };
                this.value = { start: {}, now: {} };
                this.selection = (Browser.ie) ? "selectstart" : "mousedown";
                if (Browser.ie && !Drag.ondragstartFixed) {
        document.ondragstart = Function.from(false);
                Drag.ondragstartFixed = true;
        }
        this.bound = { start: this.start.bind(this), check: this.check.bind(this), drag: this.drag.bind(this), stop: this.stop.bind(this), cancel: this.cancel.bind(this), eventStop: Function.from(false) };
                this.attach();
                }, attach: function () {
        this.handles.addEvent("mousedown", this.bound.start);
                return this;
                }, detach: function () {
        this.handles.removeEvent("mousedown", this.bound.start);
                return this;
                }, start: function (a) {
        var j = this.options;
                if (a.rightClick) {
        return;
        }
        if (j.preventDefault) {
        a.preventDefault();
        }
        if (j.stopPropagation) {
        a.stopPropagation();
        }
        this.mouse.start = a.page;
                this.fireEvent("beforeStart", this.element);
                var c = j.limit;
                this.limit = { x: [], y: [] };
                var e, g;
                for (e in j.modifiers) {
        if (!j.modifiers[e]) {
        continue;
        }
        var b = this.element.getStyle(j.modifiers[e]);
                if (b && !b.match(/px$/)) {
        if (!g) {
        g = this.element.getCoordinates(this.element.getOffsetParent());
        }
        b = g[j.modifiers[e]];
        }
        if (j.style) {
        this.value.now[e] = (b || 0).toInt();
        }
        else {
        this.value.now[e] = this.element[j.modifiers[e]];
        }
        if (j.invert) {
        this.value.now[e] *= - 1;
        }
        this.mouse.pos[e] = a.page[e] - this.value.now[e];
                if (c && c[e]) {
        var d = 2;
                while (d--) {
        var f = c[e][d];
                if (f || f === 0) {
        this.limit[e][d] = (typeof f == "function") ? f() : f;
        }
        }
        }
        }
        if (typeOf(this.options.grid) == "number") {
        this.options.grid = { x: this.options.grid, y: this.options.grid };
        }
        var h = { mousemove: this.bound.check, mouseup: this.bound.cancel };
                h[this.selection] = this.bound.eventStop;
                this.document.addEvents(h);
                }, check: function (a) {
        if (this.options.preventDefault) {
        a.preventDefault();
        }
        var b = Math.round(Math.sqrt(Math.pow(a.page.x - this.mouse.start.x, 2) + Math.pow(a.page.y - this.mouse.start.y, 2)));
                if (b > this.options.snap) {
        this.cancel();
                this.document.addEvents({ mousemove: this.bound.drag, mouseup: this.bound.stop });
                this.fireEvent("start", [this.element, a]).fireEvent("snap", this.element);
        }
        }, drag: function (b) {
        var a = this.options;
                if (a.preventDefault) {
        b.preventDefault();
        }
        this.mouse.now = b.page;
                for (var c in a.modifiers) {
        if (!a.modifiers[c]) {
        continue;
        }
        this.value.now[c] = this.mouse.now[c] - this.mouse.pos[c];
                if (a.invert) {
        this.value.now[c] *= - 1;
        }
        if (a.limit && this.limit[c]) {
        if ((this.limit[c][1] || this.limit[c][1] === 0) && (this.value.now[c] > this.limit[c][1])) {
        this.value.now[c] = this.limit[c][1];
        }
        else {
        if ((this.limit[c][0] || this.limit[c][0] === 0) && (this.value.now[c] < this.limit[c][0])) {
        this.value.now[c] = this.limit[c][0];
        }
        }
        }
        if (a.grid[c]) {
        this.value.now[c] -= ((this.value.now[c] - (this.limit[c][0] || 0)) % a.grid[c]);
        }
        if (a.style) {
        this.element.setStyle(a.modifiers[c], this.value.now[c] + a.unit);
        }
        else {
        this.element[a.modifiers[c]] = this.value.now[c];
        }
        }
        this.fireEvent("drag", [this.element, b]);
                }, cancel: function (a) {
        this.document.removeEvents({ mousemove: this.bound.check, mouseup: this.bound.cancel });
                if (a) {
        this.document.removeEvent(this.selection, this.bound.eventStop);
                this.fireEvent("cancel", this.element);
        }
        }, stop: function (b) {
        var a = { mousemove: this.bound.drag, mouseup: this.bound.stop };
                a[this.selection] = this.bound.eventStop;
                this.document.removeEvents(a);
                if (b) {
        this.fireEvent("complete", [this.element, b]);
        }
        } });
        Element.implement({ makeResizable: function (a) {
        var b = new Drag(this, Object.merge({ modifiers: { x: "width", y: "height" } }, a));
                this.store("resizer", b);
                return b.addEvent("drag", function () {
                this.fireEvent("resize", b);
                }.bind(this));
                } });
        Drag.Move = new Class({ Extends: Drag, options: { droppables: [], container: false, precalculate: false, includeMargins: true, checkDroppables: true }, initialize: function (b, a) {
        this.parent(b, a);
                b = this.element;
                this.droppables = $$(this.options.droppables);
                this.container = document.id(this.options.container);
                if (this.container && typeOf(this.container) != "element") {
        this.container = document.id(this.container.getDocument().body);
        }
        if (this.options.style) {
        if (this.options.modifiers.x == "left" && this.options.modifiers.y == "top") {
        var c = b.getOffsetParent(), d = b.getStyles("left", "top");
                if (c && (d.left == "auto" || d.top == "auto")) {
        b.setPosition(b.getPosition(c));
        }
        }
        if (b.getStyle("position") == "static") {
        b.setStyle("position", "absolute");
        }
        }
        this.addEvent("start", this.checkDroppables, true);
                this.overed = null;
                }, start: function (a) {
        if (this.container) {
        this.options.limit = this.calculateLimit();
        }
        if (this.options.precalculate) {
        this.positions = this.droppables.map(function (b) {
        return b.getCoordinates();
        });
        }
        this.parent(a);
                }, calculateLimit: function () {
        var j = this.element, e = this.container, d = document.id(j.getOffsetParent()) || document.body, h = e.getCoordinates(d), c = {}, b = {}, k = {}, g = {}, m = {};
                ["top", "right", "bottom", "left"].each(function (q) {
        c[q] = j.getStyle("margin-" + q).toInt();
                b[q] = j.getStyle("border-" + q).toInt();
                k[q] = e.getStyle("margin-" + q).toInt();
                g[q] = e.getStyle("border-" + q).toInt();
                m[q] = d.getStyle("padding-" + q).toInt();
        }, this);
                var f = j.offsetWidth + c.left + c.right, p = j.offsetHeight + c.top + c.bottom, i = 0, l = 0, o = h.right - g.right - f, a = h.bottom - g.bottom - p;
                if (this.options.includeMargins) {
        i += c.left;
                l += c.top;
        }
        else {
        o += c.right;
                a += c.bottom;
        }
        if (j.getStyle("position") == "relative") {
        var n = j.getCoordinates(d);
                n.left -= j.getStyle("left").toInt();
                n.top -= j.getStyle("top").toInt();
                i -= n.left;
                l -= n.top;
                if (e.getStyle("position") != "relative") {
        i += g.left;
                l += g.top;
        }
        o += c.left - n.left;
                a += c.top - n.top;
                if (e != d) {
        i += k.left + m.left;
                l += ((Browser.ie6 || Browser.ie7) ? 0 : k.top) + m.top;
        }
        }
        else {
        i -= c.left;
                l -= c.top;
                if (e != d) {
        i += h.left + g.left;
                l += h.top + g.top;
        }
        }
        return { x: [i, o], y: [l, a] };
                }, getDroppableCoordinates: function (c) {
        var b = c.getCoordinates();
                if (c.getStyle("position") == "fixed") {
        var a = window.getScroll();
                b.left += a.x;
                b.right += a.x;
                b.top += a.y;
                b.bottom += a.y;
        }
        return b;
                }, checkDroppables: function () {
        var a = this.droppables.filter(function (d, c) {
        d = this.positions ? this.positions[c] : this.getDroppableCoordinates(d);
                var b = this.mouse.now;
                return (b.x > d.left && b.x < d.right && b.y < d.bottom && b.y > d.top);
        }, this).getLast();
                if (this.overed != a) {
        if (this.overed) {
        this.fireEvent("leave", [this.element, this.overed]);
        }
        if (a) {
        this.fireEvent("enter", [this.element, a]);
        }
        this.overed = a;
        }
        }, drag: function (a) {
        this.parent(a);
                if (this.options.checkDroppables && this.droppables.length) {
        this.checkDroppables();
        }
        }, stop: function (a) {
        this.checkDroppables();
                this.fireEvent("drop", [this.element, this.overed, a]);
                this.overed = null;
                return this.parent(a);
                } });
        Element.implement({ makeDraggable: function (a) {
        var b = new Drag.Move(this, a);
                this.store("dragger", b);
                return b;
                } });
        var Slider = new Class({ Implements: [Events, Options], Binds: ["clickedElement", "draggedKnob", "scrolledElement"], options: { onTick: function (a) {
        this.setKnobPosition(a);
                }, initialStep: 0, snap: false, offset: 0, range: false, wheel: false, steps: 100, mode: "horizontal" }, initialize: function (f, a, e) {
        this.setOptions(e);
                e = this.options;
                this.element = document.id(f);
                a = this.knob = document.id(a);
                this.previousChange = this.previousEnd = this.step = - 1;
                var b = {}, d = { x: false, y: false };
                switch (e.mode) {
        case "vertical":
                this.axis = "y";
                this.property = "top";
                this.offset = "offsetHeight";
                break;
                case "horizontal":
                this.axis = "x";
                this.property = "left";
                this.offset = "offsetWidth";
        }
        this.setSliderDimensions();
                this.setRange(e.range);
                if (a.getStyle("position") == "static") {
        a.setStyle("position", "relative");
        }
        a.setStyle(this.property, - e.offset);
                d[this.axis] = this.property;
                b[this.axis] = [ - e.offset, this.full - e.offset];
                var c = { snap: 0, limit: b, modifiers: d, onDrag: this.draggedKnob, onStart: this.draggedKnob, onBeforeStart: (function () {
                this.isDragging = true;
                }).bind(this), onCancel: function () {
                this.isDragging = false;
                }.bind(this), onComplete: function () {
                this.isDragging = false;
                        this.draggedKnob();
                        this.end();
                }.bind(this) };
                if (e.snap) {
        this.setSnap(c);
        }
        this.drag = new Drag(a, c);
                this.attach();
                if (e.initialStep != null) {
        this.set(e.initialStep);
        }
        }, attach: function () {
        this.element.addEvent("mousedown", this.clickedElement);
                if (this.options.wheel) {
        this.element.addEvent("mousewheel", this.scrolledElement);
        }
        this.drag.attach();
                return this;
                }, detach: function () {
        this.element.removeEvent("mousedown", this.clickedElement).removeEvent("mousewheel", this.scrolledElement);
                this.drag.detach();
                return this;
                }, autosize: function () {
        this.setSliderDimensions().setKnobPosition(this.toPosition(this.step));
                this.drag.options.limit[this.axis] = [ - this.options.offset, this.full - this.options.offset];
                if (this.options.snap) {
        this.setSnap();
        }
        return this;
                }, setSnap: function (a) {
        if (!a) {
        a = this.drag.options;
        }
        a.grid = Math.ceil(this.stepWidth);
                a.limit[this.axis][1] = this.full;
                return this;
                }, setKnobPosition: function (a) {
        if (this.options.snap) {
        a = this.toPosition(this.step);
        }
        this.knob.setStyle(this.property, a);
                return this;
                }, setSliderDimensions: function () {
        this.full = this.element.measure(function () {
        this.half = this.knob[this.offset] / 2;
                return this.element[this.offset] - this.knob[this.offset] + (this.options.offset * 2);
        }.bind(this));
                return this;
                }, set: function (a) {
        if (!((this.range > 0) ^ (a < this.min))) {
        a = this.min;
        }
        if (!((this.range > 0) ^ (a > this.max))) {
        a = this.max;
        }
        this.step = Math.round(a);
                return this.checkStep().fireEvent("tick", this.toPosition(this.step)).end();
                }, setRange: function (a, b) {
        this.min = Array.pick([a[0], 0]);
                this.max = Array.pick([a[1], this.options.steps]);
                this.range = this.max - this.min;
                this.steps = this.options.steps || this.full;
                this.stepSize = Math.abs(this.range) / this.steps;
                this.stepWidth = this.stepSize * this.full / Math.abs(this.range);
                if (a) {
        this.set(Array.pick([b, this.step]).floor(this.min).max(this.max));
        }
        return this;
                }, clickedElement: function (c) {
        if (this.isDragging || c.target == this.knob) {
        return;
        }
        var b = this.range < 0 ? - 1 : 1, a = c.page[this.axis] - this.element.getPosition()[this.axis] - this.half;
                a = a.limit( - this.options.offset, this.full - this.options.offset);
                this.step = Math.round(this.min + b * this.toStep(a));
                this.checkStep().fireEvent("tick", a).end();
                }, scrolledElement: function (a) {
        var b = (this.options.mode == "horizontal") ? (a.wheel < 0) : (a.wheel > 0);
                this.set(this.step + (b ? - 1 : 1) * this.stepSize);
                a.stop();
                }, draggedKnob: function () {
        var b = this.range < 0 ? - 1 : 1, a = this.drag.value.now[this.axis];
                a = a.limit( - this.options.offset, this.full - this.options.offset);
                this.step = Math.round(this.min + b * this.toStep(a));
                this.checkStep();
                }, checkStep: function () {
        var a = this.step;
                if (this.previousChange != a) {
        this.previousChange = a;
                this.fireEvent("change", a);
        }
        return this;
                }, end: function () {
        var a = this.step;
                if (this.previousEnd !== a) {
        this.previousEnd = a;
                this.fireEvent("complete", a + "");
        }
        return this;
                }, toStep: function (a) {
        var b = (a + this.options.offset) * this.stepSize / this.full * this.steps;
                return this.options.steps ? Math.round(b -= b % this.stepSize) : b;
                }, toPosition: function (a) {
        return (this.full * Math.abs(this.min - a)) / (this.steps * this.stepSize) - this.options.offset;
                } });
        var Sortables = new Class({ Implements: [Events, Options], options: { opacity: 1, clone: false, revert: false, handle: false, dragOptions: {}, snap: 4, constrain: false, preventDefault: false }, initialize: function (a, b) {
        this.setOptions(b);
                this.elements = [];
                this.lists = [];
                this.idle = true;
                this.addLists($$(document.id(a) || a));
                if (!this.options.clone) {
        this.options.revert = false;
        }
        if (this.options.revert) {
        this.effect = new Fx.Morph(null, Object.merge({ duration: 250, link: "cancel" }, this.options.revert));
        }
        }, attach: function () {
        this.addLists(this.lists);
                return this;
                }, detach: function () {
        this.lists = this.removeLists(this.lists);
                return this;
                }, addItems: function () {
        Array.flatten(arguments).each(function (a) {
        this.elements.push(a);
                var b = a.retrieve("sortables:start", function (c) {
                this.start.call(this, c, a);
                }.bind(this));
                (this.options.handle ? a.getElement(this.options.handle) || a : a).addEvent("mousedown", b);
        }, this);
                return this;
                }, addLists: function () {
        Array.flatten(arguments).each(function (a) {
        this.lists.include(a);
                this.addItems(a.getChildren());
        }, this);
                return this;
                }, removeItems: function () {
        return $$(Array.flatten(arguments).map(function (a) {
        this.elements.erase(a);
                var b = a.retrieve("sortables:start");
                (this.options.handle ? a.getElement(this.options.handle) || a : a).removeEvent("mousedown", b);
                return a;
        }, this));
                }, removeLists: function () {
        return $$(Array.flatten(arguments).map(function (a) {
        this.lists.erase(a);
                this.removeItems(a.getChildren());
                return a;
        }, this));
                }, getClone: function (b, a) {
        if (!this.options.clone) {
        return new Element(a.tagName).inject(document.body);
        }
        if (typeOf(this.options.clone) == "function") {
        return this.options.clone.call(this, b, a, this.list);
        }
        var c = a.clone(true).setStyles({ margin: 0, position: "absolute", visibility: "hidden", width: a.getStyle("width") }).addEvent("mousedown", function (d) {
        a.fireEvent("mousedown", d);
        });
                if (c.get("html").test("radio")) {
        c.getElements("input[type=radio]").each(function (d, e) {
        d.set("name", "clone_" + e);
                if (d.get("checked")) {
        a.getElements("input[type=radio]")[e].set("checked", true);
        }
        });
        }
        return c.inject(this.list).setPosition(a.getPosition(a.getOffsetParent()));
                }, getDroppables: function () {
        var a = this.list.getChildren().erase(this.clone).erase(this.element);
                if (!this.options.constrain) {
        a.append(this.lists).erase(this.list);
        }
        return a;
                }, insert: function (c, b) {
        var a = "inside";
                if (this.lists.contains(b)) {
        this.list = b;
                this.drag.droppables = this.getDroppables();
        }
        else {
        a = this.element.getAllPrevious().contains(b) ? "before" : "after";
        }
        this.element.inject(b, a);
                this.fireEvent("sort", [this.element, this.clone]);
                }, start: function (b, a) {
        if (!this.idle || b.rightClick || ["button", "input", "a", "textarea"].contains(b.target.get("tag"))) {
        return;
        }
        this.idle = false;
                this.element = a;
                this.opacity = a.getStyle("opacity");
                this.list = a.getParent();
                this.clone = this.getClone(b, a);
                this.drag = new Drag.Move(this.clone, Object.merge({ preventDefault: this.options.preventDefault, snap: this.options.snap, container: this.options.constrain && this.element.getParent(), droppables: this.getDroppables() }, this.options.dragOptions)).addEvents({ onSnap: function () {
        b.stop();
                this.clone.setStyle("visibility", "visible");
                this.element.setStyle("opacity", this.options.opacity || 0);
                this.fireEvent("start", [this.element, this.clone]);
        }.bind(this), onEnter: this.insert.bind(this), onCancel: this.end.bind(this), onComplete: this.end.bind(this) });
                this.clone.inject(this.element, "before");
                this.drag.start(b);
                }, end: function () {
        this.drag.detach();
                this.element.setStyle("opacity", this.opacity);
                if (this.effect) {
        var b = this.element.getStyles("width", "height"), d = this.clone, c = d.computePosition(this.element.getPosition(this.clone.getOffsetParent()));
                var a = function () {
                this.removeEvent("cancel", a);
                        d.destroy();
                };
                this.effect.element = d;
                this.effect.start({ top: c.top, left: c.left, width: b.width, height: b.height, opacity: 0.25 }).addEvent("cancel", a).chain(a);
        }
        else {
        this.clone.destroy();
        }
        this.reset();
                }, reset: function () {
        this.idle = true;
                this.fireEvent("complete", this.element);
                }, serialize: function () {
        var c = Array.link(arguments, { modifier: Type.isFunction, index: function (d) {
        return d != null;
        } });
                var b = this.lists.map(function (d) {
                return d.getChildren().map(c.modifier || function (e) {
                return e.get("id");
                }, this);
                }, this);
                var a = c.index;
                if (this.lists.length == 1) {
        a = 0;
        }
        return (a || a === 0) && a >= 0 && a < this.lists.length ? b[a] : b;
                } });
        Request.JSONP = new Class({ Implements: [Chain, Events, Options], options: { onRequest: function (a) {
        if (this.options.log && window.console && console.log) {
        console.log("JSONP retrieving script with url:" + a);
        }
        }, onError: function (a) {
        if (this.options.log && window.console && console.warn) {
        console.warn("JSONP " + a + " will fail in Internet Explorer, which enforces a 2083 bytes length limit on URIs");
        }
        }, url: "", callbackKey: "callback", injectScript: document.head, data: "", link: "ignore", timeout: 0, log: false }, initialize: function (a) {
        this.setOptions(a);
                }, send: function (c) {
        if (!Request.prototype.check.call(this, c)) {
        return this;
        }
        this.running = true;
                var d = typeOf(c);
                if (d == "string" || d == "element") {
        c = { data: c };
        }
        c = Object.merge(this.options, c || {});
                var e = c.data;
                switch (typeOf(e)) {
        case "element":
                e = document.id(e).toQueryString();
                break;
                case "object":
                case "hash": e = Object.toQueryString(e);
        }
        var b = this.index = Request.JSONP.counter++;
                var f = c.url + (c.url.test("\\?") ? "&" : "?") + (c.callbackKey) + "=Request.JSONP.request_map.request_" + b + (e ? "&" + e : "");
                if (f.length > 2083) {
        this.fireEvent("error", f);
        }
        Request.JSONP.request_map["request_" + b] = function () {
        this.success(arguments, b);
        }.bind(this);
                var a = this.getScript(f).inject(c.injectScript);
                this.fireEvent("request", [f, a]);
                if (c.timeout) {
        this.timeout.delay(c.timeout, this);
        }
        return this;
                }, getScript: function (a) {
        if (!this.script) {
        this.script = new Element("script", { type: "text/javascript", async: true, src: a });
        }
        return this.script;
                }, success: function (b, a) {
        if (!this.running) {
        return;
        }
        this.clear().fireEvent("complete", b).fireEvent("success", b).callChain();
                }, cancel: function () {
        if (this.running) {
        this.clear().fireEvent("cancel");
        }
        return this;
                }, isRunning: function () {
        return !!this.running;
                }, clear: function () {
        this.running = false;
                if (this.script) {
        this.script.destroy();
                this.script = null;
        }
        return this;
                }, timeout: function () {
        if (this.running) {
        this.running = false;
                this.fireEvent("timeout", [this.script.get("src"), this.script]).fireEvent("failure").cancel();
        }
        return this;
                } });
        Request.JSONP.counter = 0;
        Request.JSONP.request_map = {};
        Request.Queue = new Class({ Implements: [Options, Events], Binds: ["attach", "request", "complete", "cancel", "success", "failure", "exception"], options: { stopOnFailure: true, autoAdvance: true, concurrent: 1, requests: {} }, initialize: function (a) {
        var b;
                if (a) {
        b = a.requests;
                delete a.requests;
        }
        this.setOptions(a);
                this.requests = {};
                this.queue = [];
                this.reqBinders = {};
                if (b) {
        this.addRequests(b);
        }
        }, addRequest: function (a, b) {
        this.requests[a] = b;
                this.attach(a, b);
                return this;
                }, addRequests: function (a) {
        Object.each(a, function (c, b) {
        this.addRequest(b, c);
        }, this);
                return this;
                }, getName: function (a) {
        return Object.keyOf(this.requests, a);
                }, attach: function (a, b) {
        if (b._groupSend) {
        return this;
        }
        ["request", "complete", "cancel", "success", "failure", "exception"].each(function (c) {
        if (!this.reqBinders[a]) {
        this.reqBinders[a] = {};
        }
        this.reqBinders[a][c] = function () {
        this["on" + c.capitalize()].apply(this, [a, b].append(arguments));
        }.bind(this);
                b.addEvent(c, this.reqBinders[a][c]);
        }, this);
                b._groupSend = b.send;
                b.send = function (c) {
                this.send(a, c);
                        return b;
                }.bind(this);
                return this;
                }, removeRequest: function (b) {
        var a = typeOf(b) == "object" ? this.getName(b) : b;
                if (!a && typeOf(a) != "string") {
        return this;
        }
        b = this.requests[a];
                if (!b) {
        return this;
        }
        ["request", "complete", "cancel", "success", "failure", "exception"].each(function (c) {
        b.removeEvent(c, this.reqBinders[a][c]);
        }, this);
                b.send = b._groupSend;
                delete b._groupSend;
                return this;
                }, getRunning: function () {
        return Object.filter(this.requests, function (a) {
        return a.running;
        });
                }, isRunning: function () {
        return !!(Object.keys(this.getRunning()).length);
                }, send: function (b, a) {
        var c = function () {
        this.requests[b]._groupSend(a);
                this.queue.erase(c);
        }.bind(this);
                c.name = b;
                if (Object.keys(this.getRunning()).length >= this.options.concurrent || (this.error && this.options.stopOnFailure)) {
        this.queue.push(c);
        }
        else {
        c();
        }
        return this;
                }, hasNext: function (a) {
        return (!a) ? !!this.queue.length : !!this.queue.filter(function (b) {
        return b.name == a;
        }).length;
                }, resume: function () {
        this.error = false;
                (this.options.concurrent - Object.keys(this.getRunning()).length).times(this.runNext, this);
                return this;
                }, runNext: function (a) {
        if (!this.queue.length) {
        return this;
        }
        if (!a) {
        this.queue[0]();
        }
        else {
        var b;
                this.queue.each(function (c) {
                if (!b && c.name == a) {
                b = true;
                        c();
                }
                });
        }
        return this;
                }, runAll: function () {
        this.queue.each(function (a) {
        a();
        });
                return this;
                }, clear: function (a) {
        if (!a) {
        this.queue.empty();
        }
        else {
        this.queue = this.queue.map(function (b) {
        if (b.name != a) {
        return b;
        }
        else {
        return false;
        }
        }).filter(function (b) {
        return b;
        });
        }
        return this;
                }, cancel: function (a) {
        this.requests[a].cancel();
                return this;
                }, onRequest: function () {
        this.fireEvent("request", arguments);
                }, onComplete: function () {
        this.fireEvent("complete", arguments);
                if (!this.queue.length) {
        this.fireEvent("end");
        }
        }, onCancel: function () {
        if (this.options.autoAdvance && !this.error) {
        this.runNext();
        }
        this.fireEvent("cancel", arguments);
                }, onSuccess: function () {
        if (this.options.autoAdvance && !this.error) {
        this.runNext();
        }
        this.fireEvent("success", arguments);
                }, onFailure: function () {
        this.error = true;
                if (!this.options.stopOnFailure && this.options.autoAdvance) {
        this.runNext();
        }
        this.fireEvent("failure", arguments);
                }, onException: function () {
        this.error = true;
                if (!this.options.stopOnFailure && this.options.autoAdvance) {
        this.runNext();
        }
        this.fireEvent("exception", arguments);
                } });
        Request.implement({ options: { initialDelay: 5000, delay: 5000, limit: 60000 }, startTimer: function (b) {
        var a = function () {
        if (!this.running) {
        this.send({ data: b });
        }
        };
                this.lastDelay = this.options.initialDelay;
                this.timer = a.delay(this.lastDelay, this);
                this.completeCheck = function (c) {
                clearTimeout(this.timer);
                        this.lastDelay = (c) ? this.options.delay : (this.lastDelay + this.options.delay).min(this.options.limit);
                        this.timer = a.delay(this.lastDelay, this);
                };
                return this.addEvent("complete", this.completeCheck);
                }, stopTimer: function () {
        clearTimeout(this.timer);
                return this.removeEvent("complete", this.completeCheck);
                } });
        var Asset = { javascript: function (d, b) {
        if (!b) {
        b = {};
        }
        var a = new Element("script", { src: d, type: "text/javascript" }), e = b.document || document, c = b.onload || b.onLoad;
                delete b.onload;
                delete b.onLoad;
                delete b.document;
                if (c) {
        if (typeof a.onreadystatechange != "undefined") {
        a.addEvent("readystatechange", function () {
        if (["loaded", "complete"].contains(this.readyState)) {
        c.call(this);
        }
        });
        }
        else {
        a.addEvent("load", c);
        }
        }
        return a.set(b).inject(e.head);
                }, css: function (d, a) {
        if (!a) {
        a = {};
        }
        var b = new Element("link", { rel: "stylesheet", media: "screen", type: "text/css", href: d });
                var c = a.onload || a.onLoad, e = a.document || document;
                delete a.onload;
                delete a.onLoad;
                delete a.document;
                if (c) {
        b.addEvent("load", c);
        }
        return b.set(a).inject(e.head);
                }, image: function (c, b) {
        if (!b) {
        b = {};
        }
        var d = new Image(), a = document.id(d) || new Element("img");
                ["load", "abort", "error"].each(function (e) {
        var g = "on" + e, f = "on" + e.capitalize(), h = b[g] || b[f] || function () {
        };
                delete b[f];
                delete b[g];
                d[g] = function () {
        if (!d) {
        return;
        }
        if (!a.parentNode) {
        a.width = d.width;
                a.height = d.height;
        }
        d = d.onload = d.onabort = d.onerror = null;
                h.delay(1, a, a);
                a.fireEvent(e, a, 1);
        };
        });
                d.src = a.src = c;
                if (d && d.complete) {
        d.onload.delay(1);
        }
        return a.set(b);
                }, images: function (c, b) {
        c = Array.from(c);
                var d = function () {
                }, a = 0;
                b = Object.merge({ onComplete: d, onProgress: d, onError: d, properties: {} }, b);
                return new Elements(c.map(function (f, e) {
                return Asset.image(f, Object.append(b.properties, { onload: function () {
                a++;
                        b.onProgress.call(this, a, e, f);
                        if (a == c.length) {
                b.onComplete();
                }
                }, onerror: function () {
                a++;
                        b.onError.call(this, a, e, f);
                        if (a == c.length) {
                b.onComplete();
                }
                } }));
                }));
                } };
        (function () {
        var a = this.Color = new Type("Color", function (c, d) {
        if (arguments.length >= 3) {
        d = "rgb";
                c = Array.slice(arguments, 0, 3);
        }
        else {
        if (typeof c == "string") {
        if (c.match(/rgb/)) {
        c = c.rgbToHex().hexToRgb(true);
        }
        else {
        if (c.match(/hsb/)) {
        c = c.hsbToRgb();
        }
        else {
        c = c.hexToRgb(true);
        }
        }
        }
        }
        d = d || "rgb";
                switch (d) {
        case "hsb":
                var b = c;
                c = c.hsbToRgb();
                c.hsb = b;
                break;
                case "hex":
                c = c.hexToRgb(true);
                break;
        }
        c.rgb = c.slice(0, 3);
                c.hsb = c.hsb || c.rgbToHsb();
                c.hex = c.rgbToHex();
                return Object.append(c, this);
        });
                a.implement({ mix: function () {
                var b = Array.slice(arguments);
                        var d = (typeOf(b.getLast()) == "number") ? b.pop() : 50;
                        var c = this.slice();
                        b.each(function (e) {
                        e = new a(e);
                                for (var f = 0; f < 3; f++) {
                        c[f] = Math.round((c[f] / 100 * (100 - d)) + (e[f] / 100 * d));
                        }
                        });
                        return new a(c, "rgb");
                }, invert: function () {
                return new a(this.map(function (b) {
                return 255 - b;
                }));
                }, setHue: function (b) {
                return new a([b, this.hsb[1], this.hsb[2]], "hsb");
                }, setSaturation: function (b) {
                return new a([this.hsb[0], b, this.hsb[2]], "hsb");
                }, setBrightness: function (b) {
                return new a([this.hsb[0], this.hsb[1], b], "hsb");
                } });
                this.$RGB = function (e, d, c) {
                return new a([e, d, c], "rgb");
                };
                this.$HSB = function (e, d, c) {
                return new a([e, d, c], "hsb");
                };
                this.$HEX = function (b) {
                return new a(b, "hex");
                };
                Array.implement({ rgbToHsb: function () {
                var c = this[0], d = this[1], k = this[2], h = 0;
                        var j = Math.max(c, d, k), f = Math.min(c, d, k);
                        var l = j - f;
                        var i = j / 255, g = (j != 0) ? l / j : 0;
                        if (g != 0) {
                var e = (j - c) / l;
                        var b = (j - d) / l;
                        var m = (j - k) / l;
                        if (c == j) {
                h = m - b;
                }
                else {
                if (d == j) {
                h = 2 + e - m;
                }
                else {
                h = 4 + b - e;
                }
                }
                h /= 6;
                        if (h < 0) {
                h++;
                }
                }
                return [Math.round(h * 360), Math.round(g * 100), Math.round(i * 100)];
                }, hsbToRgb: function () {
                var d = Math.round(this[2] / 100 * 255);
                        if (this[1] == 0) {
                return [d, d, d];
                }
                else {
                var b = this[0] % 360;
                        var g = b % 60;
                        var h = Math.round((this[2] * (100 - this[1])) / 10000 * 255);
                        var e = Math.round((this[2] * (6000 - this[1] * g)) / 600000 * 255);
                        var c = Math.round((this[2] * (6000 - this[1] * (60 - g))) / 600000 * 255);
                        switch (Math.floor(b / 60)) {
                case 0: return [d, c, h];
                        case 1: return [e, d, h];
                        case 2: return [h, d, c];
                        case 3: return [h, e, d];
                        case 4: return [c, h, d];
                        case 5: return [d, h, e];
                }
                }
                return false;
                } });
                String.implement({ rgbToHsb: function () {
                var b = this.match(/\d{1,3}/g);
                        return (b) ? b.rgbToHsb() : null;
                }, hsbToRgb: function () {
                var b = this.match(/\d{1,3}/g);
                        return (b) ? b.hsbToRgb() : null;
                } });
                })();
        (function () {
        this.Group = new Class({ initialize: function () {
        this.instances = Array.flatten(arguments);
        }, addEvent: function (e, d) {
        var g = this.instances, a = g.length, f = a, c = new Array(a), b = this;
                g.each(function (h, j) {
                h.addEvent(e, function () {
                if (!c[j]) {
                f--;
                }
                c[j] = arguments;
                        if (!f) {
                d.call(b, g, h, c);
                        f = a;
                        c = new Array(a);
                }
                });
                });
        } });
                })();
        Hash.Cookie = new Class({ Extends: Cookie, options: { autoSave: true }, initialize: function (b, a) {
        this.parent(b, a);
                this.load();
                }, save: function () {
        var a = JSON.encode(this.hash);
                if (!a || a.length > 4096) {
        return false;
        }
        if (a == "{}") {
        this.dispose();
        }
        else {
        this.write(a);
        }
        return true;
                }, load: function () {
        this.hash = new Hash(JSON.decode(this.read(), true));
                return this;
                } });
        Hash.each(Hash.prototype, function (b, a) {
        if (typeof b == "function") {
        Hash.Cookie.implement(a, function () {
        var c = b.apply(this.hash, arguments);
                if (this.options.autoSave) {
        this.save();
        }
        return c;
        });
        }
        });
        (function () {
        var a = this.Table = function () {
        this.length = 0;
                var c = [], b = [];
                this.set = function (e, g) {
                var d = c.indexOf(e);
                        if (d == - 1) {
                var f = c.length;
                        c[f] = e;
                        b[f] = g;
                        this.length++;
                }
                else {
                b[d] = g;
                }
                return this;
                };
                this.get = function (e) {
                var d = c.indexOf(e);
                        return (d == - 1) ? null : b[d];
                };
                this.erase = function (e) {
                var d = c.indexOf(e);
                        if (d != - 1) {
                this.length--;
                        c.splice(d, 1);
                        return b.splice(d, 1)[0];
                }
                return null;
                };
                this.each = this.forEach = function (f, g) {
                for (var e = 0, d = this.length; e < d; e++) {
                f.call(g, c[e], b[e], this);
                }
                };
        };
                if (this.Type) {
        new Type("Table", a);
        }
        })();
        var HtmlTable = new Class({ Implements: [Options, Events, Class.Occlude], options: { properties: { cellpadding: 0, cellspacing: 0, border: 0 }, rows: [], headers: [], footers: [] }, property: "HtmlTable", initialize: function () {
        var a = Array.link(arguments, { options: Type.isObject, table: Type.isElement, id: Type.isString });
                this.setOptions(a.options);
                if (!a.table && a.id) {
        a.table = document.id(a.id);
        }
        this.element = a.table || new Element("table", this.options.properties);
                if (this.occlude()) {
        return this.occluded;
        }
        this.build();
                }, build: function () {
        this.element.store("HtmlTable", this);
                this.body = document.id(this.element.tBodies[0]) || new Element("tbody").inject(this.element);
                $$(this.body.rows);
                if (this.options.headers.length) {
        this.setHeaders(this.options.headers);
        }
        else {
        this.thead = document.id(this.element.tHead);
        }
        if (this.thead) {
        this.head = this.getHead();
        }
        if (this.options.footers.length) {
        this.setFooters(this.options.footers);
        }
        this.tfoot = document.id(this.element.tFoot);
                if (this.tfoot) {
        this.foot = document.id(this.tfoot.rows[0]);
        }
        this.options.rows.each(function (a) {
        this.push(a);
        }, this);
                }, toElement: function () {
        return this.element;
                }, empty: function () {
        this.body.empty();
                return this;
                }, set: function (e, a) {
        var d = (e == "headers") ? "tHead" : "tFoot", b = d.toLowerCase();
                this[b] = (document.id(this.element[d]) || new Element(b).inject(this.element, "top")).empty();
                var c = this.push(a, {}, this[b], e == "headers" ? "th" : "td");
                if (e == "headers") {
        this.head = this.getHead();
        }
        else {
        this.foot = this.getHead();
        }
        return c;
                }, getHead: function () {
        var a = this.thead.rows;
                return a.length > 1 ? $$(a) : a.length ? document.id(a[0]) : false;
                }, setHeaders: function (a) {
        this.set("headers", a);
                return this;
                }, setFooters: function (a) {
        this.set("footers", a);
                return this;
                }, update: function (d, e, a) {
        var b = d.getChildren(a || "td"), c = b.length - 1;
                e.each(function (i, f) {
                var j = b[f] || new Element(a || "td").inject(d), h = (i ? i.content : "") || i, g = typeOf(h);
                        if (i && i.properties) {
                j.set(i.properties);
                }
                if (/(element(s?)|array|collection)/.test(g)) {
                j.empty().adopt(h);
                }
                else {
                j.set("html", h);
                }
                if (f > c) {
                b.push(j);
                }
                else {
                b[f] = j;
                }
                });
                return { tr: d, tds: b };
                }, push: function (e, c, d, a, b) {
        if (typeOf(e) == "element" && e.get("tag") == "tr") {
        e.inject(d || this.body, b);
                return { tr: e, tds: e.getChildren("td") };
        }
        return this.update(new Element("tr", c).inject(d || this.body, b), e, a);
                }, pushMany: function (d, c, e, a, b) {
        return d.map(function (f) {
        return this.push(f, c, e, a, b);
        }, this);
                } });
        ["adopt", "inject", "wraps", "grab", "replaces", "dispose"].each(function (a) {
HtmlTable.implement(a, function () {
this.element[a].apply(this.element, arguments);
        return this;
});
        });
        HtmlTable = Class.refactor(HtmlTable, { options: { classZebra: "table-tr-odd", zebra: true, zebraOnlyVisibleRows: true }, initialize: function () {
        this.previous.apply(this, arguments);
                if (this.occluded) {
        return this.occluded;
        }
        if (this.options.zebra) {
        this.updateZebras();
        }
        }, updateZebras: function () {
        var a = 0;
                Array.each(this.body.rows, function (b) {
                if (!this.options.zebraOnlyVisibleRows || b.isDisplayed()) {
                this.zebra(b, a++);
                }
                }, this);
                }, setRowStyle: function (b, a) {
        if (this.previous) {
        this.previous(b, a);
        }
        this.zebra(b, a);
                }, zebra: function (b, a) {
        return b[((a % 2) ? "remove" : "add") + "Class"](this.options.classZebra);
                }, push: function () {
        var a = this.previous.apply(this, arguments);
                if (this.options.zebra) {
        this.updateZebras();
        }
        return a;
                } });
        HtmlTable = Class.refactor(HtmlTable, { options: { sortIndex: 0, sortReverse: false, parsers: [], defaultParser: "string", classSortable: "table-sortable", classHeadSort: "table-th-sort", classHeadSortRev: "table-th-sort-rev", classNoSort: "table-th-nosort", classGroupHead: "table-tr-group-head", classGroup: "table-tr-group", classCellSort: "table-td-sort", classSortSpan: "table-th-sort-span", sortable: false, thSelector: "th" }, initialize: function () {
        this.previous.apply(this, arguments);
                if (this.occluded) {
        return this.occluded;
        }
        this.sorted = { index: null, dir: 1 };
                if (!this.bound) {
        this.bound = {};
        }
        this.bound.headClick = this.headClick.bind(this);
                this.sortSpans = new Elements();
                if (this.options.sortable) {
        this.enableSort();
                if (this.options.sortIndex != null) {
        this.sort(this.options.sortIndex, this.options.sortReverse);
        }
        }
        }, attachSorts: function (a) {
        this.detachSorts();
                if (a !== false) {
        this.element.addEvent("click:relay(" + this.options.thSelector + ")", this.bound.headClick);
        }
        }, detachSorts: function () {
        this.element.removeEvents("click:relay(" + this.options.thSelector + ")");
                }, setHeaders: function () {
        this.previous.apply(this, arguments);
                if (this.sortEnabled) {
        this.setParsers();
        }
        }, setParsers: function () {
        this.parsers = this.detectParsers();
                }, detectParsers: function () {
        return this.head && this.head.getElements(this.options.thSelector).flatten().map(this.detectParser, this);
                }, detectParser: function (a, b) {
        if (a.hasClass(this.options.classNoSort) || a.retrieve("htmltable-parser")) {
        return a.retrieve("htmltable-parser");
        }
        var c = new Element("div");
                c.adopt(a.childNodes).inject(a);
                var f = new Element("span", { "class": this.options.classSortSpan }).inject(c, "top");
                this.sortSpans.push(f);
                var g = this.options.parsers[b], e = this.body.rows, d;
                switch (typeOf(g)) {
        case "function":
                g = { convert: g };
                d = true;
                break;
                case "string":
                g = g;
                d = true;
                break;
        }
        if (!d) {
        HtmlTable.ParserPriority.some(function (k) {
        var o = HtmlTable.Parsers[k], m = o.match;
                if (!m) {
        return false;
        }
        for (var n = 0, l = e.length; n < l; n++) {
        var h = document.id(e[n].cells[b]), p = h ? h.get("html").clean() : "";
                if (p && m.test(p)) {
        g = o;
                return true;
        }
        }
        });
        }
        if (!g) {
        g = this.options.defaultParser;
        }
        a.store("htmltable-parser", g);
                return g;
                }, headClick: function (b, a) {
        if (!this.head || a.hasClass(this.options.classNoSort)) {
        return;
        }
        return this.sort(Array.indexOf(this.head.getElements(this.options.thSelector).flatten(), a) % this.body.rows[0].cells.length);
                }, serialize: function () {
        var a = this.previous.apply(this, arguments) || {};
                if (this.options.sortable) {
        a.sortIndex = this.sorted.index;
                a.sortReverse = this.sorted.reverse;
        }
        return a;
                }, restore: function (a) {
        if (this.options.sortable && a.sortIndex) {
        this.sort(a.sortIndex, a.sortReverse);
        }
        this.previous.apply(this, arguments);
                }, setSortedState: function (b, a) {
        if (a != null) {
        this.sorted.reverse = a;
        }
        else {
        if (this.sorted.index == b) {
        this.sorted.reverse = !this.sorted.reverse;
        }
        else {
        this.sorted.reverse = this.sorted.index == null;
        }
        }
        if (b != null) {
        this.sorted.index = b;
        }
        }, setHeadSort: function (a) {
        var b = $$(!this.head.length ? this.head.cells[this.sorted.index] : this.head.map(function (c) {
        return c.getElements(this.options.thSelector)[this.sorted.index];
        }, this).clean());
                if (!b.length) {
        return;
        }
        if (a) {
        b.addClass(this.options.classHeadSort);
                if (this.sorted.reverse) {
        b.addClass(this.options.classHeadSortRev);
        }
        else {
        b.removeClass(this.options.classHeadSortRev);
        }
        }
        else {
        b.removeClass(this.options.classHeadSort).removeClass(this.options.classHeadSortRev);
        }
        }, setRowSort: function (b, a) {
        var e = b.length, d = this.body, g, f;
                while (e) {
        var h = b[--e], c = h.position, i = d.rows[c];
                if (i.disabled) {
        continue;
        }
        if (!a) {
        g = this.setGroupSort(g, i, h);
                this.setRowStyle(i, e);
        }
        d.appendChild(i);
                for (f = 0; f < e; f++) {
        if (b[f].position > c) {
        b[f].position--;
        }
        }
        }
        }, setRowStyle: function (b, a) {
        this.previous(b, a);
                b.cells[this.sorted.index].addClass(this.options.classCellSort);
                }, setGroupSort: function (b, c, a) {
        if (b == a.value) {
        c.removeClass(this.options.classGroupHead).addClass(this.options.classGroup);
        }
        else {
        c.removeClass(this.options.classGroup).addClass(this.options.classGroupHead);
        }
        return a.value;
                }, getParser: function () {
        var a = this.parsers[this.sorted.index];
                return typeOf(a) == "string" ? HtmlTable.Parsers[a] : a;
                }, sort: function (c, b, e) {
        if (!this.head) {
        return;
        }
        if (!e) {
        this.clearSort();
                this.setSortedState(c, b);
                this.setHeadSort(true);
        }
        var f = this.getParser();
                if (!f) {
        return;
        }
        var a;
                if (!Browser.ie) {
        a = this.body.getParent();
                this.body.dispose();
        }
        var d = this.parseData(f).sort(function (h, g) {
        if (h.value === g.value) {
        return 0;
        }
        return h.value > g.value ? 1 : - 1;
        });
                if (this.sorted.reverse == (f == HtmlTable.Parsers["input-checked"])) {
        d.reverse(true);
        }
        this.setRowSort(d, e);
                if (a) {
        a.grab(this.body);
        }
        this.fireEvent("stateChanged");
                return this.fireEvent("sort", [this.body, this.sorted.index]);
                }, parseData: function (a) {
        return Array.map(this.body.rows, function (d, b) {
        var c = a.convert.call(document.id(d.cells[this.sorted.index]));
                return { position: b, value: c };
        }, this);
                }, clearSort: function () {
        this.setHeadSort(false);
                this.body.getElements("td").removeClass(this.options.classCellSort);
                }, reSort: function () {
        if (this.sortEnabled) {
        this.sort.call(this, this.sorted.index, this.sorted.reverse);
        }
        return this;
                }, enableSort: function () {
        this.element.addClass(this.options.classSortable);
                this.attachSorts(true);
                this.setParsers();
                this.sortEnabled = true;
                return this;
                }, disableSort: function () {
        this.element.removeClass(this.options.classSortable);
                this.attachSorts(false);
                this.sortSpans.each(function (a) {
                a.destroy();
                });
                this.sortSpans.empty();
                this.sortEnabled = false;
                return this;
                } });
        HtmlTable.ParserPriority = ["date", "input-checked", "input-value", "float", "number"];
        HtmlTable.Parsers = { date: { match: /^\d{2}[-\/ ]\d{2}[-\/ ]\d{2,4}$/, convert: function () {
        var a = Date.parse(this.get("text").stripTags());
                return (typeOf(a) == "date") ? a.format("db") : "";
                }, type: "date" }, "input-checked": { match: / type="(radio|checkbox)" /, convert: function () {
        return this.getElement("input").checked;
                } }, "input-value": { match: /<input/, convert: function () {
        return this.getElement("input").value;
                } }, number: { match: /^\d+[^\d.,]*$/, convert: function () {
        return this.get("text").stripTags().toInt();
                }, number: true }, numberLax: { match: /^[^\d]+\d+$/, convert: function () {
        return this.get("text").replace(/[^-?^0-9]/, "").stripTags().toInt();
                }, number: true }, "float": { match: /^[\d]+\.[\d]+/, convert: function () {
        return this.get("text").replace(/[^-?^\d.]/, "").stripTags().toFloat();
                }, number: true }, floatLax: { match: /^[^\d]+[\d]+\.[\d]+$/, convert: function () {
        return this.get("text").replace(/[^-?^\d.]/, "").stripTags();
                }, number: true }, string: { match: null, convert: function () {
        return this.get("text").stripTags().toLowerCase();
                } }, title: { match: null, convert: function () {
        return this.title;
                } } };
        HtmlTable.Parsers = new Hash(HtmlTable.Parsers);
        HtmlTable.defineParsers = function (a) {
        HtmlTable.Parsers = Object.append(HtmlTable.Parsers, a);
                for (var b in a) {
        HtmlTable.ParserPriority.unshift(b);
        }
        };
        (function () {
        var a = this.Keyboard = new Class({ Extends: Events, Implements: [Options], options: { defaultEventType: "keydown", active: false, manager: null, events: {}, nonParsedEvents: ["activate", "deactivate", "onactivate", "ondeactivate", "changed", "onchanged"] }, initialize: function (f) {
        if (f && f.manager) {
        this._manager = f.manager;
                delete f.manager;
        }
        this.setOptions(f);
                this._setup();
        }, addEvent: function (h, g, f) {
        return this.parent(a.parse(h, this.options.defaultEventType, this.options.nonParsedEvents), g, f);
        }, removeEvent: function (g, f) {
        return this.parent(a.parse(g, this.options.defaultEventType, this.options.nonParsedEvents), f);
        }, toggleActive: function () {
        return this[this.isActive() ? "deactivate" : "activate"]();
        }, activate: function (f) {
        if (f) {
        if (f.isActive()) {
        return this;
        }
        if (this._activeKB && f != this._activeKB) {
        this.previous = this._activeKB;
                this.previous.fireEvent("deactivate");
        }
        this._activeKB = f.fireEvent("activate");
                a.manager.fireEvent("changed");
        }
        else {
        if (this._manager) {
        this._manager.activate(this);
        }
        }
        return this;
        }, isActive: function () {
        return this._manager ? (this._manager._activeKB == this) : (a.manager == this);
        }, deactivate: function (f) {
        if (f) {
        if (f === this._activeKB) {
        this._activeKB = null;
                f.fireEvent("deactivate");
                a.manager.fireEvent("changed");
        }
        }
        else {
        if (this._manager) {
        this._manager.deactivate(this);
        }
        }
        return this;
        }, relinquish: function () {
        if (this.isActive() && this._manager && this._manager.previous) {
        this._manager.activate(this._manager.previous);
        }
        else {
        this.deactivate();
        }
        return this;
        }, manage: function (f) {
        if (f._manager) {
        f._manager.drop(f);
        }
        this._instances.push(f);
                f._manager = this;
                if (!this._activeKB) {
        this.activate(f);
        }
        return this;
        }, drop: function (f) {
        f.relinquish();
                this._instances.erase(f);
                if (this._activeKB == f) {
        if (this.previous && this._instances.contains(this.previous)) {
        this.activate(this.previous);
        }
        else {
        this._activeKB = this._instances[0];
        }
        }
        return this;
        }, trace: function () {
        a.trace(this);
        }, each: function (f) {
        a.each(this, f);
        }, _instances: [], _disable: function (f) {
        if (this._activeKB == f) {
        this._activeKB = null;
        }
        }, _setup: function () {
        this.addEvents(this.options.events);
                if (a.manager && !this._manager) {
        a.manager.manage(this);
        }
        if (this.options.active) {
        this.activate();
        }
        else {
        this.relinquish();
        }
        }, _handle: function (h, g) {
        if (h.preventKeyboardPropagation) {
        return;
        }
        var f = !!this._manager;
                if (f && this._activeKB) {
        this._activeKB._handle(h, g);
                if (h.preventKeyboardPropagation) {
        return;
        }
        }
        this.fireEvent(g, h);
                if (!f && this._activeKB) {
        this._activeKB._handle(h, g);
        }
        } });
                var b = {};
                var c = ["shift", "control", "alt", "meta"];
                var e = /^(?:shift|control|ctrl|alt|meta)$/;
                a.parse = function (h, g, k) {
                if (k && k.contains(h.toLowerCase())) {
                return h;
                }
                h = h.toLowerCase().replace(/^(keyup|keydown):/, function (m, l) {
                g = l;
                        return "";
                });
                        if (!b[h]) {
                var f, j = {};
                        h.split("+").each(function (l) {
                if (e.test(l)) {
                j[l] = true;
                }
                else {
                f = l;
                }
                });
                        j.control = j.control || j.ctrl;
                        var i = [];
                        c.each(function (l) {
                        if (j[l]) {
                        i.push(l);
                        }
                        });
                        if (f) {
                i.push(f);
                }
                b[h] = i.join("+");
                }
                return g + ":keys(" + b[h] + ")";
                };
                a.each = function (f, g) {
                var h = f || a.manager;
                        while (h) {
                g.run(h);
                        h = h._activeKB;
                }
                };
                a.stop = function (f) {
                f.preventKeyboardPropagation = true;
                };
                a.manager = new a({ active: true });
                a.trace = function (f) {
                f = f || a.manager;
                        var g = window.console && console.log;
                        if (g) {
                console.log("the following items have focus: ");
                }
                a.each(f, function (h) {
                if (g) {
                console.log(document.id(h.widget) || h.wiget || h);
                }
                });
                };
                var d = function (g) {
                var f = [];
                        c.each(function (h) {
                        if (g[h]) {
                        f.push(h);
                        }
                        });
                        if (!e.test(g.key)) {
                f.push(g.key);
                }
                a.manager._handle(g, g.type + ":keys(" + f.join("+") + ")");
                };
                document.addEvents({ keyup: d, keydown: d });
                })();
        Keyboard.prototype.options.nonParsedEvents.combine(["rebound", "onrebound"]);
        Keyboard.implement({ addShortcut: function (b, a) {
        this._shortcuts = this._shortcuts || [];
                this._shortcutIndex = this._shortcutIndex || {};
                a.getKeyboard = Function.from(this);
                a.name = b;
                this._shortcutIndex[b] = a;
                this._shortcuts.push(a);
                if (a.keys) {
        this.addEvent(a.keys, a.handler);
        }
        return this;
                }, addShortcuts: function (b) {
        for (var a in b) {
        this.addShortcut(a, b[a]);
        }
        return this;
                }, removeShortcut: function (b) {
        var a = this.getShortcut(b);
                if (a && a.keys) {
        this.removeEvent(a.keys, a.handler);
                delete this._shortcutIndex[b];
                this._shortcuts.erase(a);
        }
        return this;
                }, removeShortcuts: function (a) {
        a.each(this.removeShortcut, this);
                return this;
                }, getShortcuts: function () {
        return this._shortcuts || [];
                }, getShortcut: function (a) {
        return (this._shortcutIndex || {})[a];
                } });
        Keyboard.rebind = function (b, a) {
        Array.from(a).each(function (c) {
        c.getKeyboard().removeEvent(c.keys, c.handler);
                c.getKeyboard().addEvent(b, c.handler);
                c.keys = b;
                c.getKeyboard().fireEvent("rebound");
        });
                };
        Keyboard.getActiveShortcuts = function (b) {
        var a = [], c = [];
                Keyboard.each(b, [].push.bind(a));
                a.each(function (d) {
                c.extend(d.getShortcuts());
                });
                return c;
                };
        Keyboard.getShortcut = function (c, b, d) {
        d = d || {};
                var a = d.many ? [] : null, e = d.many ? function (g) {
        var f = g.getShortcut(c);
                if (f) {
        a.push(f);
        }
        } : function (f) {
        if (!a) {
        a = f.getShortcut(c);
        }
        };
                Keyboard.each(b, e);
                return a;
                };
        Keyboard.getShortcuts = function (b, a) {
        return Keyboard.getShortcut(b, a, { many: true });
                };
        HtmlTable = Class.refactor(HtmlTable, { options: { useKeyboard: true, classRowSelected: "table-tr-selected", classRowHovered: "table-tr-hovered", classSelectable: "table-selectable", shiftForMultiSelect: true, allowMultiSelect: true, selectable: false, selectHiddenRows: false }, initialize: function () {
        this.previous.apply(this, arguments);
                if (this.occluded) {
        return this.occluded;
        }
        this.selectedRows = new Elements();
                if (!this.bound) {
        this.bound = {};
        }
        this.bound.mouseleave = this.mouseleave.bind(this);
                this.bound.clickRow = this.clickRow.bind(this);
                this.bound.activateKeyboard = function () {
                if (this.keyboard && this.selectEnabled) {
                this.keyboard.activate();
                }
                }.bind(this);
                if (this.options.selectable) {
        this.enableSelect();
        }
        }, empty: function () {
        this.selectNone();
                return this.previous();
                }, enableSelect: function () {
        this.selectEnabled = true;
                this.attachSelects();
                this.element.addClass(this.options.classSelectable);
                return this;
                }, disableSelect: function () {
        this.selectEnabled = false;
                this.attachSelects(false);
                this.element.removeClass(this.options.classSelectable);
                return this;
                }, push: function () {
        var a = this.previous.apply(this, arguments);
                this.updateSelects();
                return a;
                }, toggleRow: function (a) {
        return this[(this.isSelected(a) ? "de" : "") + "selectRow"](a);
                }, selectRow: function (b, a) {
        if (this.isSelected(b) || (!a && !this.body.getChildren().contains(b))) {
        return;
        }
        if (!this.options.allowMultiSelect) {
        this.selectNone();
        }
        if (!this.isSelected(b)) {
        this.selectedRows.push(b);
                b.addClass(this.options.classRowSelected);
                this.fireEvent("rowFocus", [b, this.selectedRows]);
                this.fireEvent("stateChanged");
        }
        this.focused = b;
                document.clearSelection();
                return this;
                }, isSelected: function (a) {
        return this.selectedRows.contains(a);
                }, getSelected: function () {
        return this.selectedRows;
                }, getSelected: function () {
        return this.selectedRows;
                }, serialize: function () {
        var a = this.previous.apply(this, arguments) || {};
                if (this.options.selectable) {
        a.selectedRows = this.selectedRows.map(function (b) {
        return Array.indexOf(this.body.rows, b);
        }.bind(this));
        }
        return a;
                }, restore: function (a) {
        if (this.options.selectable && a.selectedRows) {
        a.selectedRows.each(function (b) {
        this.selectRow(this.body.rows[b]);
        }.bind(this));
        }
        this.previous.apply(this, arguments);
                }, deselectRow: function (b, a) {
        if (!this.isSelected(b) || (!a && !this.body.getChildren().contains(b))) {
        return;
        }
        this.selectedRows = new Elements(Array.from(this.selectedRows).erase(b));
                b.removeClass(this.options.classRowSelected);
                this.fireEvent("rowUnfocus", [b, this.selectedRows]);
                this.fireEvent("stateChanged");
                return this;
                }, selectAll: function (a) {
        if (!a && !this.options.allowMultiSelect) {
        return;
        }
        this.selectRange(0, this.body.rows.length, a);
                return this;
                }, selectNone: function () {
        return this.selectAll(true);
                }, selectRange: function (b, a, f) {
        if (!this.options.allowMultiSelect && !f) {
        return;
        }
        var g = f ? "deselectRow" : "selectRow", e = Array.clone(this.body.rows);
                if (typeOf(b) == "element") {
        b = e.indexOf(b);
        }
        if (typeOf(a) == "element") {
        a = e.indexOf(a);
        }
        a = a < e.length - 1 ? a : e.length - 1;
                if (a < b) {
        var d = b;
                b = a;
                a = d;
        }
        for (var c = b; c <= a; c++) {
        if (this.options.selectHiddenRows || e[c].isDisplayed()) {
        this[g](e[c], true);
        }
        }
        return this;
                }, deselectRange: function (b, a) {
        this.selectRange(b, a, true);
                }, getSelected: function () {
        return this.selectedRows;
                }, enterRow: function (a) {
        if (this.hovered) {
        this.hovered = this.leaveRow(this.hovered);
        }
        this.hovered = a.addClass(this.options.classRowHovered);
                }, leaveRow: function (a) {
        a.removeClass(this.options.classRowHovered);
                }, updateSelects: function () {
        Array.each(this.body.rows, function (a) {
        var b = a.retrieve("binders");
                if (!b && !this.selectEnabled) {
        return;
        }
        if (!b) {
        b = { mouseenter: this.enterRow.pass([a], this), mouseleave: this.leaveRow.pass([a], this) };
                a.store("binders", b);
        }
        if (this.selectEnabled) {
        a.addEvents(b);
        }
        else {
        a.removeEvents(b);
        }
        }, this);
                }, shiftFocus: function (b, a) {
        if (!this.focused) {
        return this.selectRow(this.body.rows[0], a);
        }
        var c = this.getRowByOffset(b, this.options.selectHiddenRows);
                if (c === null || this.focused == this.body.rows[c]) {
        return this;
        }
        this.toggleRow(this.body.rows[c], a);
                }, clickRow: function (a, b) {
        var c = (a.shift || a.meta || a.control) && this.options.shiftForMultiSelect;
                if (!c && !(a.rightClick && this.isSelected(b) && this.options.allowMultiSelect)) {
        this.selectNone();
        }
        if (a.rightClick) {
        this.selectRow(b);
        }
        else {
        this.toggleRow(b);
        }
        if (a.shift) {
        this.selectRange(this.rangeStart || this.body.rows[0], b, this.rangeStart ? !this.isSelected(b) : true);
                this.focused = b;
        }
        this.rangeStart = b;
                }, getRowByOffset: function (e, d) {
        if (!this.focused) {
        return 0;
        }
        var b = Array.indexOf(this.body.rows, this.focused);
                if ((b == 0 && e < 0) || (b == this.body.rows.length - 1 && e > 0)) {
        return null;
        }
        if (d) {
        b += e;
        }
        else {
        var a = 0, c = 0;
                if (e > 0) {
        while (c < e && b < this.body.rows.length - 1) {
        if (this.body.rows[++b].isDisplayed()) {
        c++;
        }
        }
        }
        else {
        while (c > e && b > 0) {
        if (this.body.rows[--b].isDisplayed()) {
        c--;
        }
        }
        }
        }
        return b;
                }, attachSelects: function (d) {
        d = d != null ? d : true;
                var g = d ? "addEvents" : "removeEvents";
                this.element[g]({ mouseleave: this.bound.mouseleave, click: this.bound.activateKeyboard });
                this.body[g]({ "click:relay(tr)": this.bound.clickRow, "contextmenu:relay(tr)": this.bound.clickRow });
                if (this.options.useKeyboard || this.keyboard) {
        if (!this.keyboard) {
        this.keyboard = new Keyboard();
        }
        if (!this.selectKeysDefined) {
        this.selectKeysDefined = true;
                var f, e;
                var c = function (i) {
                var h = function (j) {
                clearTimeout(f);
                        j.preventDefault();
                        var k = this.body.rows[this.getRowByOffset(i, this.options.selectHiddenRows)];
                        if (j.shift && k && this.isSelected(k)) {
                this.deselectRow(this.focused);
                        this.focused = k;
                }
                else {
                if (k && (!this.options.allowMultiSelect || !j.shift)) {
                this.selectNone();
                }
                this.shiftFocus(i, j);
                }
                if (e) {
                f = h.delay(100, this, j);
                }
                else {
                f = (function () {
                e = true;
                        h(j);
                }).delay(400);
                }
                }.bind(this);
                        return h;
                }.bind(this);
                var b = function () {
                clearTimeout(f);
                        e = false;
                };
                this.keyboard.addEvents({ "keydown:shift+up": c( - 1), "keydown:shift+down": c(1), "keyup:shift+up": b, "keyup:shift+down": b, "keyup:up": b, "keyup:down": b });
                var a = "";
                if (this.options.allowMultiSelect && this.options.shiftForMultiSelect && this.options.useKeyboard) {
        a = " (Shift multi-selects).";
        }
        this.keyboard.addShortcuts({ "Select Previous Row": { keys: "up", shortcut: "up arrow", handler: c( - 1), description: "Select the previous row in the table." + a }, "Select Next Row": { keys: "down", shortcut: "down arrow", handler: c(1), description: "Select the next row in the table." + a } });
        }
        this.keyboard[d ? "activate" : "deactivate"]();
        }
        this.updateSelects();
                }, mouseleave: function () {
        if (this.hovered) {
        this.leaveRow(this.hovered);
        }
        } });
        var Scroller = new Class({ Implements: [Events, Options], options: { area: 20, velocity: 1, onChange: function (a, b) {
        this.element.scrollTo(a, b);
                }, fps: 50 }, initialize: function (b, a) {
        this.setOptions(a);
                this.element = document.id(b);
                this.docBody = document.id(this.element.getDocument().body);
                this.listener = (typeOf(this.element) != "element") ? this.docBody : this.element;
                this.timer = null;
                this.bound = { attach: this.attach.bind(this), detach: this.detach.bind(this), getCoords: this.getCoords.bind(this) };
                }, start: function () {
        this.listener.addEvents({ mouseover: this.bound.attach, mouseleave: this.bound.detach });
                return this;
                }, stop: function () {
        this.listener.removeEvents({ mouseover: this.bound.attach, mouseleave: this.bound.detach });
                this.detach();
                this.timer = clearInterval(this.timer);
                return this;
                }, attach: function () {
        this.listener.addEvent("mousemove", this.bound.getCoords);
                }, detach: function () {
        this.listener.removeEvent("mousemove", this.bound.getCoords);
                this.timer = clearInterval(this.timer);
                }, getCoords: function (a) {
        this.page = (this.listener.get("tag") == "body") ? a.client : a.page;
                if (!this.timer) {
        this.timer = this.scroll.periodical(Math.round(1000 / this.options.fps), this);
        }
        }, scroll: function () {
        var c = this.element.getSize(), a = this.element.getScroll(), h = this.element != this.docBody ? this.element.getOffsets() : { x: 0, y: 0 }, d = this.element.getScrollSize(), g = { x: 0, y: 0 }, e = this.options.area.top || this.options.area, b = this.options.area.bottom || this.options.area;
                for (var f in this.page) {
        if (this.page[f] < (e + h[f]) && a[f] != 0) {
        g[f] = (this.page[f] - e - h[f]) * this.options.velocity;
        }
        else {
        if (this.page[f] + b > (c[f] + h[f]) && a[f] + c[f] != d[f]) {
        g[f] = (this.page[f] - c[f] + b - h[f]) * this.options.velocity;
        }
        }
        g[f] = g[f].round();
        }
        if (g.y || g.x) {
        this.fireEvent("change", [a.x + g.x, a.y + g.y]);
        }
        } });
        (function () {
        var a = function (c, b) {
        return (c) ? (typeOf(c) == "function" ? c(b) : b.get(c)) : "";
        };
                this.Tips = new Class({ Implements: [Events, Options], options: { onShow: function () {
                this.tip.setStyle("display", "block");
                }, onHide: function () {
                this.tip.setStyle("display", "none");
                }, title: "title", text: function (b) {
                return b.get("rel") || b.get("href");
                }, showDelay: 100, hideDelay: 100, className: "tip-wrap", offset: { x: 16, y: 16 }, windowPadding: { x: 0, y: 0 }, fixed: false, waiAria: true }, initialize: function () {
                var b = Array.link(arguments, { options: Type.isObject, elements: function (c) {
                return c != null;
                } });
                        this.setOptions(b.options);
                        if (b.elements) {
                this.attach(b.elements);
                }
                this.container = new Element("div", { "class": "tip" });
                        if (this.options.id) {
                this.container.set("id", this.options.id);
                        if (this.options.waiAria) {
                this.attachWaiAria();
                }
                }
                }, toElement: function () {
                if (this.tip) {
                return this.tip;
                }
                this.tip = new Element("div", { "class": this.options.className, styles: { position: "absolute", top: 0, left: 0 } }).adopt(new Element("div", { "class": "tip-top" }), this.container, new Element("div", { "class": "tip-bottom" }));
                        return this.tip;
                }, attachWaiAria: function () {
                var b = this.options.id;
                        this.container.set("role", "tooltip");
                        if (!this.waiAria) {
                this.waiAria = { show: function (c) {
                if (b) {
                c.set("aria-describedby", b);
                }
                this.container.set("aria-hidden", "false");
                }, hide: function (c) {
                if (b) {
                c.erase("aria-describedby");
                }
                this.container.set("aria-hidden", "true");
                } };
                }
                this.addEvents(this.waiAria);
                }, detachWaiAria: function () {
                if (this.waiAria) {
                this.container.erase("role");
                        this.container.erase("aria-hidden");
                        this.removeEvents(this.waiAria);
                }
                }, attach: function (b) {
                $$(b).each(function (d) {
                var f = a(this.options.title, d), e = a(this.options.text, d);
                        d.set("title", "").store("tip:native", f).retrieve("tip:title", f);
                        d.retrieve("tip:text", e);
                        this.fireEvent("attach", [d]);
                        var c = ["enter", "leave"];
                        if (!this.options.fixed) {
                c.push("move");
                }
                c.each(function (h) {
                var g = d.retrieve("tip:" + h);
                        if (!g) {
                g = function (i) {
                this["element" + h.capitalize()].apply(this, [i, d]);
                }.bind(this);
                }
                d.store("tip:" + h, g).addEvent("mouse" + h, g);
                }, this);
                }, this);
                        return this;
                }, detach: function (b) {
                $$(b).each(function (d) {
                ["enter", "leave", "move"].each(function (e) {
                d.removeEvent("mouse" + e, d.retrieve("tip:" + e)).eliminate("tip:" + e);
                });
                        this.fireEvent("detach", [d]);
                        if (this.options.title == "title") {
                var c = d.retrieve("tip:native");
                        if (c) {
                d.set("title", c);
                }
                }
                }, this);
                        return this;
                }, elementEnter: function (c, b) {
                clearTimeout(this.timer);
                        this.timer = (function () {
                        this.container.empty();
                                ["title", "text"].each(function (e) {
                        var d = b.retrieve("tip:" + e);
                                var f = this["_" + e + "Element"] = new Element("div", { "class": "tip-" + e }).inject(this.container);
                                if (d) {
                        this.fill(f, d);
                        }
                        }, this);
                                this.show(b);
                                this.position((this.options.fixed) ? { page: b.getPosition() } : c);
                        }).delay(this.options.showDelay, this);
                }, elementLeave: function (c, b) {
                clearTimeout(this.timer);
                        this.timer = this.hide.delay(this.options.hideDelay, this, b);
                        this.fireForParent(c, b);
                }, setTitle: function (b) {
                if (this._titleElement) {
                this._titleElement.empty();
                        this.fill(this._titleElement, b);
                }
                return this;
                }, setText: function (b) {
                if (this._textElement) {
                this._textElement.empty();
                        this.fill(this._textElement, b);
                }
                return this;
                }, fireForParent: function (c, b) {
                b = b.getParent();
                        if (!b || b == document.body) {
                return;
                }
                if (b.retrieve("tip:enter")) {
                b.fireEvent("mouseenter", c);
                }
                else {
                this.fireForParent(c, b);
                }
                }, elementMove: function (c, b) {
                this.position(c);
                }, position: function (f) {
                if (!this.tip) {
                document.id(this);
                }
                var c = window.getSize(), b = window.getScroll(), g = { x: this.tip.offsetWidth, y: this.tip.offsetHeight }, d = { x: "left", y: "top" }, e = { y: false, x2: false, y2: false, x: false }, h = {};
                        for (var i in d) {
                h[d[i]] = f.page[i] + this.options.offset[i];
                        if (h[d[i]] < 0) {
                e[i] = true;
                }
                if ((h[d[i]] + g[i] - b[i]) > c[i] - this.options.windowPadding[i]) {
                h[d[i]] = f.page[i] - this.options.offset[i] - g[i];
                        e[i + "2"] = true;
                }
                }
                this.fireEvent("bound", e);
                        this.tip.setStyles(h);
                }, fill: function (b, c) {
                if (typeof c == "string") {
                b.set("html", c);
                }
                else {
                b.adopt(c);
                }
                }, show: function (b) {
                if (!this.tip) {
                document.id(this);
                }
                if (!this.tip.getParent()) {
                this.tip.inject(document.body);
                }
                this.fireEvent("show", [this.tip, b]);
                }, hide: function (b) {
                if (!this.tip) {
                document.id(this);
                }
                this.fireEvent("hide", [this.tip, b]);
                } });
                })();
        (function () {
        var a = { json: JSON.decode };
                Locale.Set.defineParser = function (b, c) {
                a[b] = c;
                };
                Locale.Set.from = function (d, c) {
                if (instanceOf(d, Locale.Set)) {
                return d;
                }
                if (!c && typeOf(d) == "string") {
                c = "json";
                }
                if (a[c]) {
                d = a[c](d);
                }
                var b = new Locale.Set;
                        b.sets = d.sets || {};
                        if (d.inherits) {
                b.inherits.locales = Array.from(d.inherits.locales);
                        b.inherits.sets = d.inherits.sets || {};
                }
                return b;
                };
                })();
        Locale.define("ar", "Date", { dateOrder: ["date", "month", "year"], shortDate: "%d/%m/%Y", shortTime: "%H:%M" });
        Locale.define("ar", "FormValidator", { required: "هذا الحقل مطلوب.", minLength: "رجاءً إدخال {minLength} أحرف على الأقل (تم إدخال {length} أحرف).", maxLength: "الرجاء عدم إدخال أكثر من {maxLength} أحرف (تم إدخال {length} أحرف).", integer: "الرجاء إدخال عدد صحيح في هذا الحقل. أي رقم ذو كسر عشري أو مئوي (مثال 1.25 ) غير مسموح.", numeric: 'الرجاء إدخال قيم رقمية في هذا الحقل (مثال "1" أو "1.1" أو "-1" أو "-1.1").', digits: "الرجاء أستخدام قيم رقمية وعلامات ترقيمية فقط في هذا الحقل (مثال, رقم هاتف مع نقطة أو شحطة)", alpha: "الرجاء أستخدام أحرف فقط (ا-ي) في هذا الحقل. أي فراغات أو علامات غير مسموحة.", alphanum: "الرجاء أستخدام أحرف فقط (ا-ي) أو أرقام (0-9) فقط في هذا الحقل. أي فراغات أو علامات غير مسموحة.", dateSuchAs: "الرجاء إدخال تاريخ صحيح كالتالي {date}", dateInFormatMDY: "الرجاء إدخال تاريخ صحيح (مثال, 31-12-1999)", email: "الرجاء إدخال بريد إلكتروني صحيح.", url: "الرجاء إدخال عنوان إلكتروني صحيح مثل http://www.example.com", currencyDollar: "الرجاء إدخال قيمة $ صحيحة. مثال, 100.00$", oneRequired: "الرجاء إدخال قيمة في أحد هذه الحقول على الأقل.", errorPrefix: "خطأ: ", warningPrefix: "تحذير: " });
        Locale.define("ca-CA", "Date", { months: ["Gener", "Febrer", "Març", "Abril", "Maig", "Juny", "Juli", "Agost", "Setembre", "Octubre", "Novembre", "Desembre"], months_abbr: ["gen.", "febr.", "març", "abr.", "maig", "juny", "jul.", "ag.", "set.", "oct.", "nov.", "des."], days: ["Diumenge", "Dilluns", "Dimarts", "Dimecres", "Dijous", "Divendres", "Dissabte"], days_abbr: ["dg", "dl", "dt", "dc", "dj", "dv", "ds"], dateOrder: ["date", "month", "year"], shortDate: "%d/%m/%Y", shortTime: "%H:%M", AM: "AM", PM: "PM", firstDayOfWeek: 0, ordinal: "", lessThanMinuteAgo: "fa menys d`un minut", minuteAgo: "fa un minut", minutesAgo: "fa {delta} minuts", hourAgo: "fa un hora", hoursAgo: "fa unes {delta} hores", dayAgo: "fa un dia", daysAgo: "fa {delta} dies", lessThanMinuteUntil: "menys d`un minut des d`ara", minuteUntil: "un minut des d`ara", minutesUntil: "{delta} minuts des d`ara", hourUntil: "un hora des d`ara", hoursUntil: "unes {delta} hores des d`ara", dayUntil: "1 dia des d`ara", daysUntil: "{delta} dies des d`ara" });
        Locale.define("ca-CA", "FormValidator", { required: "Aquest camp es obligatori.", minLength: "Per favor introdueix al menys {minLength} caracters (has introduit {length} caracters).", maxLength: "Per favor introdueix no mes de {maxLength} caracters (has introduit {length} caracters).", integer: "Per favor introdueix un nombre enter en aquest camp. Nombres amb decimals (p.e. 1,25) no estan permesos.", numeric: 'Per favor introdueix sols valors numerics en aquest camp (p.e. "1" o "1,1" o "-1" o "-1,1").', digits: "Per favor usa sols numeros i puntuacio en aquest camp (per exemple, un nombre de telefon amb guions i punts no esta permes).", alpha: "Per favor utilitza lletres nomes (a-z) en aquest camp. No s´admiteixen espais ni altres caracters.", alphanum: "Per favor, utilitza nomes lletres (a-z) o numeros (0-9) en aquest camp. No s´admiteixen espais ni altres caracters.", dateSuchAs: "Per favor introdueix una data valida com {date}", dateInFormatMDY: 'Per favor introdueix una data valida com DD/MM/YYYY (p.e. "31/12/1999")', email: 'Per favor, introdueix una adreça de correu electronic valida. Per exemple, "fred@domain.com".', url: "Per favor introdueix una URL valida com http://www.example.com.", currencyDollar: "Per favor introdueix una quantitat valida de €. Per exemple €100,00 .", oneRequired: "Per favor introdueix alguna cosa per al menys una d´aquestes entrades.", errorPrefix: "Error: ", warningPrefix: "Avis: ", noSpace: "No poden haver espais en aquesta entrada.", reqChkByNode: "No hi han elements seleccionats.", requiredChk: "Aquest camp es obligatori.", reqChkByName: "Per favor selecciona una {label}.", match: "Aquest camp necessita coincidir amb el camp {matchName}", startDate: "la data de inici", endDate: "la data de fi", currendDate: "la data actual", afterDate: "La data deu ser igual o posterior a {label}.", beforeDate: "La data deu ser igual o anterior a {label}.", startMonth: "Per favor selecciona un mes d´orige", sameMonth: "Aquestes dos dates deuen estar dins del mateix mes - deus canviar una o altra." });
        (function () {
        var a = function (e, d, c, b) {
        if (e == 1) {
        return d;
        }
        else {
        if (e == 2 || e == 3 || e == 4) {
        return c;
        }
        else {
        return b;
        }
        }
        };
                Locale.define("cs-CZ", "Date", { months: ["Leden", "Únor", "Březen", "Duben", "Květen", "Červen", "Červenec", "Srpen", "Září", "Říjen", "Listopad", "Prosinec"], months_abbr: ["ledna", "února", "března", "dubna", "května", "června", "července", "srpna", "září", "října", "listopadu", "prosince"], days: ["Neděle", "Pondělí", "Úterý", "Středa", "Čtvrtek", "Pátek", "Sobota"], days_abbr: ["ne", "po", "út", "st", "čt", "pá", "so"], dateOrder: ["date", "month", "year"], shortDate: "%d.%m.%Y", shortTime: "%H:%M", AM: "dop.", PM: "odp.", firstDayOfWeek: 1, ordinal: ".", lessThanMinuteAgo: "před chvílí", minuteAgo: "přibližně před minutou", minutesAgo: function (b) {
                return "před {delta} " + a(b, "minutou", "minutami", "minutami");
                }, hourAgo: "přibližně před hodinou", hoursAgo: function (b) {
                return "před {delta} " + a(b, "hodinou", "hodinami", "hodinami");
                }, dayAgo: "před dnem", daysAgo: function (b) {
                return "před {delta} " + a(b, "dnem", "dny", "dny");
                }, weekAgo: "před týdnem", weeksAgo: function (b) {
                return "před {delta} " + a(b, "týdnem", "týdny", "týdny");
                }, monthAgo: "před měsícem", monthsAgo: function (b) {
                return "před {delta} " + a(b, "měsícem", "měsíci", "měsíci");
                }, yearAgo: "před rokem", yearsAgo: function (b) {
                return "před {delta} " + a(b, "rokem", "lety", "lety");
                }, lessThanMinuteUntil: "za chvíli", minuteUntil: "přibližně za minutu", minutesUntil: function (b) {
                return "za {delta} " + a(b, "minutu", "minuty", "minut");
                }, hourUntil: "přibližně za hodinu", hoursUntil: function (b) {
                return "za {delta} " + a(b, "hodinu", "hodiny", "hodin");
                }, dayUntil: "za den", daysUntil: function (b) {
                return "za {delta} " + a(b, "den", "dny", "dnů");
                }, weekUntil: "za týden", weeksUntil: function (b) {
                return "za {delta} " + a(b, "týden", "týdny", "týdnů");
                }, monthUntil: "za měsíc", monthsUntil: function (b) {
                return "za {delta} " + a(b, "měsíc", "měsíce", "měsíců");
                }, yearUntil: "za rok", yearsUntil: function (b) {
                return "za {delta} " + a(b, "rok", "roky", "let");
                } });
                })();
        Locale.define("cs-CZ", "FormValidator", { required: "Tato položka je povinná.", minLength: "Zadejte prosím alespoň {minLength} znaků (napsáno {length} znaků).", maxLength: "Zadejte prosím méně než {maxLength} znaků (nápsáno {length} znaků).", integer: "Zadejte prosím celé číslo. Desetinná čísla (např. 1.25) nejsou povolena.", numeric: 'Zadejte jen číselné hodnoty (tj. "1" nebo "1.1" nebo "-1" nebo "-1.1").', digits: "Zadejte prosím pouze čísla a interpunkční znaménka(například telefonní číslo s pomlčkami nebo tečkami je povoleno).", alpha: "Zadejte prosím pouze písmena (a-z). Mezery nebo jiné znaky nejsou povoleny.", alphanum: "Zadejte prosím pouze písmena (a-z) nebo číslice (0-9). Mezery nebo jiné znaky nejsou povoleny.", dateSuchAs: "Zadejte prosím platné datum jako {date}", dateInFormatMDY: 'Zadejte prosím platné datum jako MM / DD / RRRR (tj. "12/31/1999")', email: 'Zadejte prosím platnou e-mailovou adresu. Například "fred@domain.com".', url: "Zadejte prosím platnou URL adresu jako http://www.example.com.", currencyDollar: "Zadejte prosím platnou částku. Například $100.00.", oneRequired: "Zadejte prosím alespoň jednu hodnotu pro tyto položky.", errorPrefix: "Chyba: ", warningPrefix: "Upozornění: ", noSpace: "V této položce nejsou povoleny mezery", reqChkByNode: "Nejsou vybrány žádné položky.", requiredChk: "Tato položka je vyžadována.", reqChkByName: "Prosím vyberte {label}.", match: "Tato položka se musí shodovat s položkou {matchName}", startDate: "datum zahájení", endDate: "datum ukončení", currendDate: "aktuální datum", afterDate: "Datum by mělo být stejné nebo větší než {label}.", beforeDate: "Datum by mělo být stejné nebo menší než {label}.", startMonth: "Vyberte počáteční měsíc.", sameMonth: "Tyto dva datumy musí být ve stejném měsíci - změňte jeden z nich.", creditcard: "Zadané číslo kreditní karty je neplatné. Prosím opravte ho. Bylo zadáno {length} čísel." });
        Locale.define("da-DK", "Date", { months: ["Januar", "Februar", "Marts", "April", "Maj", "Juni", "Juli", "August", "September", "Oktober", "November", "December"], months_abbr: ["jan.", "feb.", "mar.", "apr.", "maj.", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], days: ["Søndag", "Mandag", "Tirsdag", "Onsdag", "Torsdag", "Fredag", "Lørdag"], days_abbr: ["søn", "man", "tir", "ons", "tor", "fre", "lør"], dateOrder: ["date", "month", "year"], shortDate: "%d-%m-%Y", shortTime: "%H:%M", AM: "AM", PM: "PM", firstDayOfWeek: 1, ordinal: ".", lessThanMinuteAgo: "mindre end et minut siden", minuteAgo: "omkring et minut siden", minutesAgo: "{delta} minutter siden", hourAgo: "omkring en time siden", hoursAgo: "omkring {delta} timer siden", dayAgo: "1 dag siden", daysAgo: "{delta} dage siden", weekAgo: "1 uge siden", weeksAgo: "{delta} uger siden", monthAgo: "1 måned siden", monthsAgo: "{delta} måneder siden", yearAgo: "1 år siden", yearsAgo: "{delta} år siden", lessThanMinuteUntil: "mindre end et minut fra nu", minuteUntil: "omkring et minut fra nu", minutesUntil: "{delta} minutter fra nu", hourUntil: "omkring en time fra nu", hoursUntil: "omkring {delta} timer fra nu", dayUntil: "1 dag fra nu", daysUntil: "{delta} dage fra nu", weekUntil: "1 uge fra nu", weeksUntil: "{delta} uger fra nu", monthUntil: "1 måned fra nu", monthsUntil: "{delta} måneder fra nu", yearUntil: "1 år fra nu", yearsUntil: "{delta} år fra nu" });
        Locale.define("da-DK", "FormValidator", { required: "Feltet skal udfyldes.", minLength: "Skriv mindst {minLength} tegn (du skrev {length} tegn).", maxLength: "Skriv maksimalt {maxLength} tegn (du skrev {length} tegn).", integer: "Skriv et tal i dette felt. Decimal tal (f.eks. 1.25) er ikke tilladt.", numeric: 'Skriv kun tal i dette felt (i.e. "1" eller "1.1" eller "-1" eller "-1.1").', digits: "Skriv kun tal og tegnsætning i dette felt (eksempel, et telefon nummer med bindestreg eller punktum er tilladt).", alpha: "Skriv kun bogstaver (a-z) i dette felt. Mellemrum og andre tegn er ikke tilladt.", alphanum: "Skriv kun bogstaver (a-z) eller tal (0-9) i dette felt. Mellemrum og andre tegn er ikke tilladt.", dateSuchAs: "Skriv en gyldig dato som {date}", dateInFormatMDY: 'Skriv dato i formatet DD-MM-YYYY (f.eks. "31-12-1999")', email: 'Skriv en gyldig e-mail adresse. F.eks "fred@domain.com".', url: 'Skriv en gyldig URL adresse. F.eks "http://www.example.com".', currencyDollar: "Skriv et gldigt beløb. F.eks Kr.100.00 .", oneRequired: "Et eller flere af felterne i denne formular skal udfyldes.", errorPrefix: "Fejl: ", warningPrefix: "Advarsel: ", noSpace: "Der må ikke benyttes mellemrum i dette felt.", reqChkByNode: "Foretag et valg.", requiredChk: "Dette felt skal udfyldes.", reqChkByName: "Vælg en {label}.", match: "Dette felt skal matche {matchName} feltet", startDate: "start dato", endDate: "slut dato", currendDate: "dags dato", afterDate: "Datoen skal være større end eller lig med {label}.", beforeDate: "Datoen skal være mindre end eller lig med {label}.", startMonth: "Vælg en start måned", sameMonth: "De valgte datoer skal være i samme måned - skift en af dem." });
        Locale.define("de-DE", "Date", { months: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], months_abbr: ["Jan", "Feb", "Mär", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], days: ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], days_abbr: ["So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", "Sa."], dateOrder: ["date", "month", "year"], shortDate: "%d.%m.%Y", shortTime: "%H:%M", AM: "vormittags", PM: "nachmittags", firstDayOfWeek: 1, ordinal: ".", lessThanMinuteAgo: "vor weniger als einer Minute", minuteAgo: "vor einer Minute", minutesAgo: "vor {delta} Minuten", hourAgo: "vor einer Stunde", hoursAgo: "vor {delta} Stunden", dayAgo: "vor einem Tag", daysAgo: "vor {delta} Tagen", weekAgo: "vor einer Woche", weeksAgo: "vor {delta} Wochen", monthAgo: "vor einem Monat", monthsAgo: "vor {delta} Monaten", yearAgo: "vor einem Jahr", yearsAgo: "vor {delta} Jahren", lessThanMinuteUntil: "in weniger als einer Minute", minuteUntil: "in einer Minute", minutesUntil: "in {delta} Minuten", hourUntil: "in ca. einer Stunde", hoursUntil: "in ca. {delta} Stunden", dayUntil: "in einem Tag", daysUntil: "in {delta} Tagen", weekUntil: "in einer Woche", weeksUntil: "in {delta} Wochen", monthUntil: "in einem Monat", monthsUntil: "in {delta} Monaten", yearUntil: "in einem Jahr", yearsUntil: "in {delta} Jahren" });
        Locale.define("de-CH").inherit("de-DE", "Date");
        Locale.define("de-CH", "FormValidator", { required: "Dieses Feld ist obligatorisch.", minLength: "Geben Sie bitte mindestens {minLength} Zeichen ein (Sie haben {length} Zeichen eingegeben).", maxLength: "Bitte geben Sie nicht mehr als {maxLength} Zeichen ein (Sie haben {length} Zeichen eingegeben).", integer: "Geben Sie bitte eine ganze Zahl ein. Dezimalzahlen (z.B. 1.25) sind nicht erlaubt.", numeric: "Geben Sie bitte nur Zahlenwerte in dieses Eingabefeld ein (z.B. &quot;1&quot;, &quot;1.1&quot;, &quot;-1&quot; oder &quot;-1.1&quot;).", digits: "Benutzen Sie bitte nur Zahlen und Satzzeichen in diesem Eingabefeld (erlaubt ist z.B. eine Telefonnummer mit Bindestrichen und Punkten).", alpha: "Benutzen Sie bitte nur Buchstaben (a-z) in diesem Feld. Leerzeichen und andere Zeichen sind nicht erlaubt.", alphanum: "Benutzen Sie bitte nur Buchstaben (a-z) und Zahlen (0-9) in diesem Eingabefeld. Leerzeichen und andere Zeichen sind nicht erlaubt.", dateSuchAs: "Geben Sie bitte ein g&uuml;ltiges Datum ein. Wie zum Beispiel {date}", dateInFormatMDY: "Geben Sie bitte ein g&uuml;ltiges Datum ein. Wie zum Beispiel TT.MM.JJJJ (z.B. &quot;31.12.1999&quot;)", email: "Geben Sie bitte eine g&uuml;ltige E-Mail Adresse ein. Wie zum Beispiel &quot;maria@bernasconi.ch&quot;.", url: "Geben Sie bitte eine g&uuml;ltige URL ein. Wie zum Beispiel http://www.example.com.", currencyDollar: "Geben Sie bitte einen g&uuml;ltigen Betrag in Schweizer Franken ein. Wie zum Beispiel 100.00 CHF .", oneRequired: "Machen Sie f&uuml;r mindestens eines der Eingabefelder einen Eintrag.", errorPrefix: "Fehler: ", warningPrefix: "Warnung: ", noSpace: "In diesem Eingabefeld darf kein Leerzeichen sein.", reqChkByNode: "Es wurden keine Elemente gew&auml;hlt.", requiredChk: "Dieses Feld ist obligatorisch.", reqChkByName: "Bitte w&auml;hlen Sie ein {label}.", match: "Dieses Eingabefeld muss mit dem Feld {matchName} &uuml;bereinstimmen.", startDate: "Das Anfangsdatum", endDate: "Das Enddatum", currendDate: "Das aktuelle Datum", afterDate: "Das Datum sollte zur gleichen Zeit oder sp&auml;ter sein {label}.", beforeDate: "Das Datum sollte zur gleichen Zeit oder fr&uuml;her sein {label}.", startMonth: "W&auml;hlen Sie bitte einen Anfangsmonat", sameMonth: "Diese zwei Datumsangaben m&uuml;ssen im selben Monat sein - Sie m&uuml;ssen eine von beiden ver&auml;ndern.", creditcard: "Die eingegebene Kreditkartennummer ist ung&uuml;ltig. Bitte &uuml;berpr&uuml;fen Sie diese und versuchen Sie es erneut. {length} Zahlen eingegeben." });
        Locale.define("de-DE", "FormValidator", { required: "Dieses Eingabefeld muss ausgefüllt werden.", minLength: "Geben Sie bitte mindestens {minLength} Zeichen ein (Sie haben nur {length} Zeichen eingegeben).", maxLength: "Geben Sie bitte nicht mehr als {maxLength} Zeichen ein (Sie haben {length} Zeichen eingegeben).", integer: 'Geben Sie in diesem Eingabefeld bitte eine ganze Zahl ein. Dezimalzahlen (z.B. "1.25") sind nicht erlaubt.', numeric: 'Geben Sie in diesem Eingabefeld bitte nur Zahlenwerte (z.B. "1", "1.1", "-1" oder "-1.1") ein.', digits: "Geben Sie in diesem Eingabefeld bitte nur Zahlen und Satzzeichen ein (z.B. eine Telefonnummer mit Bindestrichen und Punkten ist erlaubt).", alpha: "Geben Sie in diesem Eingabefeld bitte nur Buchstaben (a-z) ein. Leerzeichen und andere Zeichen sind nicht erlaubt.", alphanum: "Geben Sie in diesem Eingabefeld bitte nur Buchstaben (a-z) und Zahlen (0-9) ein. Leerzeichen oder andere Zeichen sind nicht erlaubt.", dateSuchAs: 'Geben Sie bitte ein gültiges Datum ein (z.B. "{date}").', dateInFormatMDY: 'Geben Sie bitte ein gültiges Datum im Format TT.MM.JJJJ ein (z.B. "31.12.1999").', email: 'Geben Sie bitte eine gültige E-Mail-Adresse ein (z.B. "max@mustermann.de").', url: 'Geben Sie bitte eine gültige URL ein (z.B. "http://www.example.com").', currencyDollar: "Geben Sie bitte einen gültigen Betrag in EURO ein (z.B. 100.00€).", oneRequired: "Bitte füllen Sie mindestens ein Eingabefeld aus.", errorPrefix: "Fehler: ", warningPrefix: "Warnung: ", noSpace: "Es darf kein Leerzeichen in diesem Eingabefeld sein.", reqChkByNode: "Es wurden keine Elemente gewählt.", requiredChk: "Dieses Feld muss ausgefüllt werden.", reqChkByName: "Bitte wählen Sie ein {label}.", match: "Dieses Eingabefeld muss mit dem {matchName} Eingabefeld übereinstimmen.", startDate: "Das Anfangsdatum", endDate: "Das Enddatum", currendDate: "Das aktuelle Datum", afterDate: "Das Datum sollte zur gleichen Zeit oder später sein als {label}.", beforeDate: "Das Datum sollte zur gleichen Zeit oder früher sein als {label}.", startMonth: "Wählen Sie bitte einen Anfangsmonat", sameMonth: "Diese zwei Datumsangaben müssen im selben Monat sein - Sie müssen eines von beiden verändern.", creditcard: "Die eingegebene Kreditkartennummer ist ungültig. Bitte überprüfen Sie diese und versuchen Sie es erneut. {length} Zahlen eingegeben." });
        Locale.define("EU", "Number", { decimal: ",", group: ".", currency: { prefix: "€ " } });
        Locale.define("de-DE").inherit("EU", "Number");
        Locale.define("en-GB", "Date", { dateOrder: ["date", "month", "year"], shortDate: "%d/%m/%Y", shortTime: "%H:%M" }).inherit("en-US", "Date");
        Locale.define("es-ES", "Date", { months: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"], months_abbr: ["ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic"], days: ["Domingo", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado"], days_abbr: ["dom", "lun", "mar", "mié", "juv", "vie", "sáb"], dateOrder: ["date", "month", "year"], shortDate: "%d/%m/%Y", shortTime: "%H:%M", AM: "AM", PM: "PM", firstDayOfWeek: 1, ordinal: "", lessThanMinuteAgo: "hace menos de un minuto", minuteAgo: "hace un minuto", minutesAgo: "hace {delta} minutos", hourAgo: "hace una hora", hoursAgo: "hace unas {delta} horas", dayAgo: "hace un día", daysAgo: "hace {delta} días", weekAgo: "hace una semana", weeksAgo: "hace unas {delta} semanas", monthAgo: "hace un mes", monthsAgo: "hace {delta} meses", yearAgo: "hace un año", yearsAgo: "hace {delta} años", lessThanMinuteUntil: "menos de un minuto desde ahora", minuteUntil: "un minuto desde ahora", minutesUntil: "{delta} minutos desde ahora", hourUntil: "una hora desde ahora", hoursUntil: "unas {delta} horas desde ahora", dayUntil: "un día desde ahora", daysUntil: "{delta} días desde ahora", weekUntil: "una semana desde ahora", weeksUntil: "unas {delta} semanas desde ahora", monthUntil: "un mes desde ahora", monthsUntil: "{delta} meses desde ahora", yearUntil: "un año desde ahora", yearsUntil: "{delta} años desde ahora" });
        Locale.define("es-AR").inherit("es-ES", "Date");
        Locale.define("es-AR", "FormValidator", { required: "Este campo es obligatorio.", minLength: "Por favor ingrese al menos {minLength} caracteres (ha ingresado {length} caracteres).", maxLength: "Por favor no ingrese más de {maxLength} caracteres (ha ingresado {length} caracteres).", integer: "Por favor ingrese un número entero en este campo. Números con decimales (p.e. 1,25) no se permiten.", numeric: 'Por favor ingrese solo valores numéricos en este campo (p.e. "1" o "1,1" o "-1" o "-1,1").', digits: "Por favor use sólo números y puntuación en este campo (por ejemplo, un número de teléfono con guiones y/o puntos no está permitido).", alpha: "Por favor use sólo letras (a-z) en este campo. No se permiten espacios ni otros caracteres.", alphanum: "Por favor, usa sólo letras (a-z) o números (0-9) en este campo. No se permiten espacios u otros caracteres.", dateSuchAs: "Por favor ingrese una fecha válida como {date}", dateInFormatMDY: 'Por favor ingrese una fecha válida, utulizando el formato DD/MM/YYYY (p.e. "31/12/1999")', email: 'Por favor, ingrese una dirección de e-mail válida. Por ejemplo, "fred@dominio.com".', url: "Por favor ingrese una URL válida como http://www.example.com.", currencyDollar: "Por favor ingrese una cantidad válida de pesos. Por ejemplo $100,00 .", oneRequired: "Por favor ingrese algo para por lo menos una de estas entradas.", errorPrefix: "Error: ", warningPrefix: "Advertencia: ", noSpace: "No se permiten espacios en este campo.", reqChkByNode: "No hay elementos seleccionados.", requiredChk: "Este campo es obligatorio.", reqChkByName: "Por favor selecciona una {label}.", match: "Este campo necesita coincidir con el campo {matchName}", startDate: "la fecha de inicio", endDate: "la fecha de fin", currendDate: "la fecha actual", afterDate: "La fecha debe ser igual o posterior a {label}.", beforeDate: "La fecha debe ser igual o anterior a {label}.", startMonth: "Por favor selecciona un mes de origen", sameMonth: "Estas dos fechas deben estar en el mismo mes - debes cambiar una u otra." });
        Locale.define("es-ES", "FormValidator", { required: "Este campo es obligatorio.", minLength: "Por favor introduce al menos {minLength} caracteres (has introducido {length} caracteres).", maxLength: "Por favor introduce no m&aacute;s de {maxLength} caracteres (has introducido {length} caracteres).", integer: "Por favor introduce un n&uacute;mero entero en este campo. N&uacute;meros con decimales (p.e. 1,25) no se permiten.", numeric: 'Por favor introduce solo valores num&eacute;ricos en este campo (p.e. "1" o "1,1" o "-1" o "-1,1").', digits: "Por favor usa solo n&uacute;meros y puntuaci&oacute;n en este campo (por ejemplo, un n&uacute;mero de tel&eacute;fono con guiones y puntos no esta permitido).", alpha: "Por favor usa letras solo (a-z) en este campo. No se admiten espacios ni otros caracteres.", alphanum: "Por favor, usa solo letras (a-z) o n&uacute;meros (0-9) en este campo. No se admiten espacios ni otros caracteres.", dateSuchAs: "Por favor introduce una fecha v&aacute;lida como {date}", dateInFormatMDY: 'Por favor introduce una fecha v&aacute;lida como DD/MM/YYYY (p.e. "31/12/1999")', email: 'Por favor, introduce una direcci&oacute;n de email v&aacute;lida. Por ejemplo, "fred@domain.com".', url: "Por favor introduce una URL v&aacute;lida como http://www.example.com.", currencyDollar: "Por favor introduce una cantidad v&aacute;lida de €. Por ejemplo €100,00 .", oneRequired: "Por favor introduce algo para por lo menos una de estas entradas.", errorPrefix: "Error: ", warningPrefix: "Aviso: ", noSpace: "No pueden haber espacios en esta entrada.", reqChkByNode: "No hay elementos seleccionados.", requiredChk: "Este campo es obligatorio.", reqChkByName: "Por favor selecciona una {label}.", match: "Este campo necesita coincidir con el campo {matchName}", startDate: "la fecha de inicio", endDate: "la fecha de fin", currendDate: "la fecha actual", afterDate: "La fecha debe ser igual o posterior a {label}.", beforeDate: "La fecha debe ser igual o anterior a {label}.", startMonth: "Por favor selecciona un mes de origen", sameMonth: "Estas dos fechas deben estar en el mismo mes - debes cambiar una u otra." });
        Locale.define("et-EE", "Date", { months: ["jaanuar", "veebruar", "märts", "aprill", "mai", "juuni", "juuli", "august", "september", "oktoober", "november", "detsember"], months_abbr: ["jaan", "veebr", "märts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets"], days: ["pühapäev", "esmaspäev", "teisipäev", "kolmapäev", "neljapäev", "reede", "laupäev"], days_abbr: ["pühap", "esmasp", "teisip", "kolmap", "neljap", "reede", "laup"], dateOrder: ["month", "date", "year"], shortDate: "%m.%d.%Y", shortTime: "%H:%M", AM: "AM", PM: "PM", firstDayOfWeek: 1, ordinal: "", lessThanMinuteAgo: "vähem kui minut aega tagasi", minuteAgo: "umbes minut aega tagasi", minutesAgo: "{delta} minutit tagasi", hourAgo: "umbes tund aega tagasi", hoursAgo: "umbes {delta} tundi tagasi", dayAgo: "1 päev tagasi", daysAgo: "{delta} päeva tagasi", weekAgo: "1 nädal tagasi", weeksAgo: "{delta} nädalat tagasi", monthAgo: "1 kuu tagasi", monthsAgo: "{delta} kuud tagasi", yearAgo: "1 aasta tagasi", yearsAgo: "{delta} aastat tagasi", lessThanMinuteUntil: "vähem kui minuti aja pärast", minuteUntil: "umbes minuti aja pärast", minutesUntil: "{delta} minuti pärast", hourUntil: "umbes tunni aja pärast", hoursUntil: "umbes {delta} tunni pärast", dayUntil: "1 päeva pärast", daysUntil: "{delta} päeva pärast", weekUntil: "1 nädala pärast", weeksUntil: "{delta} nädala pärast", monthUntil: "1 kuu pärast", monthsUntil: "{delta} kuu pärast", yearUntil: "1 aasta pärast", yearsUntil: "{delta} aasta pärast" });
        Locale.define("et-EE", "FormValidator", { required: "Väli peab olema täidetud.", minLength: "Palun sisestage vähemalt {minLength} tähte (te sisestasite {length} tähte).", maxLength: "Palun ärge sisestage rohkem kui {maxLength} tähte (te sisestasite {length} tähte).", integer: "Palun sisestage väljale täisarv. Kümnendarvud (näiteks 1.25) ei ole lubatud.", numeric: 'Palun sisestage ainult numbreid väljale (näiteks "1", "1.1", "-1" või "-1.1").', digits: "Palun kasutage ainult numbreid ja kirjavahemärke (telefoninumbri sisestamisel on lubatud kasutada kriipse ja punkte).", alpha: "Palun kasutage ainult tähti (a-z). Tühikud ja teised sümbolid on keelatud.", alphanum: "Palun kasutage ainult tähti (a-z) või numbreid (0-9). Tühikud ja teised sümbolid on keelatud.", dateSuchAs: "Palun sisestage kehtiv kuupäev kujul {date}", dateInFormatMDY: 'Palun sisestage kehtiv kuupäev kujul MM.DD.YYYY (näiteks: "12.31.1999").', email: 'Palun sisestage kehtiv e-maili aadress (näiteks: "fred@domain.com").', url: "Palun sisestage kehtiv URL (näiteks: http://www.example.com).", currencyDollar: "Palun sisestage kehtiv $ summa (näiteks: $100.00).", oneRequired: "Palun sisestage midagi vähemalt ühele antud väljadest.", errorPrefix: "Viga: ", warningPrefix: "Hoiatus: ", noSpace: "Väli ei tohi sisaldada tühikuid.", reqChkByNode: "Ükski väljadest pole valitud.", requiredChk: "Välja täitmine on vajalik.", reqChkByName: "Palun valige üks {label}.", match: "Väli peab sobima {matchName} väljaga", startDate: "algkuupäev", endDate: "lõppkuupäev", currendDate: "praegune kuupäev", afterDate: "Kuupäev peab olema võrdne või pärast {label}.", beforeDate: "Kuupäev peab olema võrdne või enne {label}.", startMonth: "Palun valige algkuupäev.", sameMonth: "Antud kaks kuupäeva peavad olema samas kuus - peate muutma ühte kuupäeva." });
        Locale.define("fa", "Date", { months: ["ژانویه", "فوریه", "مارس", "آپریل", "مه", "ژوئن", "ژوئیه", "آگوست", "سپتامبر", "اکتبر", "نوامبر", "دسامبر"], months_abbr: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], days: ["یکشنبه", "دوشنبه", "سه شنبه", "چهارشنبه", "پنجشنبه", "جمعه", "شنبه"], days_abbr: ["ي", "د", "س", "چ", "پ", "ج", "ش"], dateOrder: ["month", "date", "year"], shortDate: "%m/%d/%Y", shortTime: "%I:%M%p", AM: "ق.ظ", PM: "ب.ظ", ordinal: "ام", lessThanMinuteAgo: "کمتر از یک دقیقه پیش", minuteAgo: "حدود یک دقیقه پیش", minutesAgo: "{delta} دقیقه پیش", hourAgo: "حدود یک ساعت پیش", hoursAgo: "حدود {delta} ساعت پیش", dayAgo: "1 روز پیش", daysAgo: "{delta} روز پیش", weekAgo: "1 هفته پیش", weeksAgo: "{delta} هفته پیش", monthAgo: "1 ماه پیش", monthsAgo: "{delta} ماه پیش", yearAgo: "1 سال پیش", yearsAgo: "{delta} سال پیش", lessThanMinuteUntil: "کمتر از یک دقیقه از حالا", minuteUntil: "حدود یک دقیقه از حالا", minutesUntil: "{delta} دقیقه از حالا", hourUntil: "حدود یک ساعت از حالا", hoursUntil: "حدود {delta} ساعت از حالا", dayUntil: "1 روز از حالا", daysUntil: "{delta} روز از حالا", weekUntil: "1 هفته از حالا", weeksUntil: "{delta} هفته از حالا", monthUntil: "1 ماه از حالا", monthsUntil: "{delta} ماه از حالا", yearUntil: "1 سال از حالا", yearsUntil: "{delta} سال از حالا" });
        Locale.define("fa", "FormValidator", { required: "این فیلد الزامی است.", minLength: "شما باید حداقل {minLength} حرف وارد کنید ({length} حرف وارد کرده اید).", maxLength: "لطفا حداکثر {maxLength} حرف وارد کنید (شما {length} حرف وارد کرده اید).", integer: "لطفا از عدد صحیح استفاده کنید. اعداد اعشاری (مانند 1.25) مجاز نیستند.", numeric: 'لطفا فقط داده عددی وارد کنید (مانند "1" یا "1.1" یا "1-" یا "1.1-").', digits: "لطفا فقط از اعداد و علامتها در این فیلد استفاده کنید (برای مثال شماره تلفن با خط تیره و نقطه قابل قبول است).", alpha: "لطفا فقط از حروف الفباء برای این بخش استفاده کنید. کاراکترهای دیگر و فاصله مجاز نیستند.", alphanum: "لطفا فقط از حروف الفباء و اعداد در این بخش استفاده کنید. کاراکترهای دیگر و فاصله مجاز نیستند.", dateSuchAs: "لطفا یک تاریخ معتبر مانند {date} وارد کنید.", dateInFormatMDY: 'لطفا یک تاریخ معتبر به شکل MM/DD/YYYY وارد کنید (مانند "12/31/1999").', email: 'لطفا یک آدرس ایمیل معتبر وارد کنید. برای مثال "fred@domain.com".', url: "لطفا یک URL معتبر مانند http://www.example.com وارد کنید.", currencyDollar: "لطفا یک محدوده معتبر برای این بخش وارد کنید مانند 100.00$ .", oneRequired: "لطفا حداقل یکی از فیلدها را پر کنید.", errorPrefix: "خطا: ", warningPrefix: "هشدار: ", noSpace: "استفاده از فاصله در این بخش مجاز نیست.", reqChkByNode: "موردی انتخاب نشده است.", requiredChk: "این فیلد الزامی است.", reqChkByName: "لطفا یک {label} را انتخاب کنید.", match: "این فیلد باید با فیلد {matchName} مطابقت داشته باشد.", startDate: "تاریخ شروع", endDate: "تاریخ پایان", currendDate: "تاریخ کنونی", afterDate: "تاریخ میبایست برابر یا بعد از {label} باشد", beforeDate: "تاریخ میبایست برابر یا قبل از {label} باشد", startMonth: "لطفا ماه شروع را انتخاب کنید", sameMonth: "این دو تاریخ باید در یک ماه باشند - شما باید یکی یا هر دو را تغییر دهید.", creditcard: "شماره کارت اعتباری که وارد کرده اید معتبر نیست. لطفا شماره را بررسی کنید و مجددا تلاش کنید. {length} رقم وارد شده است." });
        Locale.define("fi-FI", "Date", { months: ["tammikuu", "helmikuu", "maaliskuu", "huhtikuu", "toukokuu", "kesäkuu", "heinäkuu", "elokuu", "syyskuu", "lokakuu", "marraskuu", "joulukuu"], months_abbr: ["tammik.", "helmik.", "maalisk.", "huhtik.", "toukok.", "kesäk.", "heinäk.", "elok.", "syysk.", "lokak.", "marrask.", "jouluk."], days: ["sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai"], days_abbr: ["su", "ma", "ti", "ke", "to", "pe", "la"], dateOrder: ["date", "month", "year"], shortDate: "%d.%m.%Y", shortTime: "%H:%M", AM: "AM", PM: "PM", firstDayOfWeek: 1, ordinal: ".", lessThanMinuteAgo: "vajaa minuutti sitten", minuteAgo: "noin minuutti sitten", minutesAgo: "{delta} minuuttia sitten", hourAgo: "noin tunti sitten", hoursAgo: "noin {delta} tuntia sitten", dayAgo: "päivä sitten", daysAgo: "{delta} päivää sitten", weekAgo: "viikko sitten", weeksAgo: "{delta} viikkoa sitten", monthAgo: "kuukausi sitten", monthsAgo: "{delta} kuukautta sitten", yearAgo: "vuosi sitten", yearsAgo: "{delta} vuotta sitten", lessThanMinuteUntil: "vajaan minuutin kuluttua", minuteUntil: "noin minuutin kuluttua", minutesUntil: "{delta} minuutin kuluttua", hourUntil: "noin tunnin kuluttua", hoursUntil: "noin {delta} tunnin kuluttua", dayUntil: "päivän kuluttua", daysUntil: "{delta} päivän kuluttua", weekUntil: "viikon kuluttua", weeksUntil: "{delta} viikon kuluttua", monthUntil: "kuukauden kuluttua", monthsUntil: "{delta} kuukauden kuluttua", yearUntil: "vuoden kuluttua", yearsUntil: "{delta} vuoden kuluttua" });
        Locale.define("fi-FI", "FormValidator", { required: "Tämä kenttä on pakollinen.", minLength: "Ole hyvä ja anna vähintään {minLength} merkkiä (annoit {length} merkkiä).", maxLength: "Älä anna enempää kuin {maxLength} merkkiä (annoit {length} merkkiä).", integer: "Ole hyvä ja anna kokonaisluku. Luvut, joissa on desimaaleja (esim. 1.25) eivät ole sallittuja.", numeric: 'Anna tähän kenttään lukuarvo (kuten "1" tai "1.1" tai "-1" tai "-1.1").', digits: "Käytä pelkästään numeroita ja välimerkkejä tässä kentässä (syötteet, kuten esim. puhelinnumero, jossa on väliviivoja, pilkkuja tai pisteitä, kelpaa).", alpha: "Anna tähän kenttään vain kirjaimia (a-z). Välilyönnit tai muut merkit eivät ole sallittuja.", alphanum: "Anna tähän kenttään vain kirjaimia (a-z) tai numeroita (0-9). Välilyönnit tai muut merkit eivät ole sallittuja.", dateSuchAs: "Ole hyvä ja anna kelvollinen päivmäärä, kuten esimerkiksi {date}", dateInFormatMDY: 'Ole hyvä ja anna kelvollinen päivämäärä muodossa pp/kk/vvvv (kuten "12/31/1999")', email: 'Ole hyvä ja anna kelvollinen sähköpostiosoite (kuten esimerkiksi "matti@meikalainen.com").', url: "Ole hyvä ja anna kelvollinen URL, kuten esimerkiksi http://www.example.com.", currencyDollar: "Ole hyvä ja anna kelvollinen eurosumma (kuten esimerkiksi 100,00 EUR) .", oneRequired: "Ole hyvä ja syötä jotakin ainakin johonkin näistä kentistä.", errorPrefix: "Virhe: ", warningPrefix: "Varoitus: ", noSpace: "Tässä syötteessä ei voi olla välilyöntejä", reqChkByNode: "Ei valintoja.", requiredChk: "Tämä kenttä on pakollinen.", reqChkByName: "Ole hyvä ja valitse {label}.", match: "Tämän kentän tulee vastata kenttää {matchName}", startDate: "alkupäivämäärä", endDate: "loppupäivämäärä", currendDate: "nykyinen päivämäärä", afterDate: "Päivämäärän tulisi olla sama tai myöhäisempi ajankohta kuin {label}.", beforeDate: "Päivämäärän tulisi olla sama tai aikaisempi ajankohta kuin {label}.", startMonth: "Ole hyvä ja valitse aloituskuukausi", sameMonth: "Näiden kahden päivämäärän tulee olla saman kuun sisällä -- sinun pitää muuttaa jompaa kumpaa.", creditcard: "Annettu luottokortin numero ei kelpaa. Ole hyvä ja tarkista numero sekä yritä uudelleen. {length} numeroa syötetty." });
        Locale.define("fi-FI", "Number", { group: " " }).inherit("EU", "Number");
        Locale.define("fr-FR", "Date", { months: ["Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre"], months_abbr: ["janv.", "févr.", "mars", "avr.", "mai", "juin", "juil.", "août", "sept.", "oct.", "nov.", "déc."], days: ["Dimanche", "Lundi", "Mardi", "Mercredi", "Jeudi", "Vendredi", "Samedi"], days_abbr: ["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], dateOrder: ["date", "month", "year"], shortDate: "%d/%m/%Y", shortTime: "%H:%M", AM: "AM", PM: "PM", firstDayOfWeek: 1, ordinal: function (a) {
        return (a > 1) ? "" : "er";
                }, lessThanMinuteAgo: "il y a moins d'une minute", minuteAgo: "il y a une minute", minutesAgo: "il y a {delta} minutes", hourAgo: "il y a une heure", hoursAgo: "il y a {delta} heures", dayAgo: "il y a un jour", daysAgo: "il y a {delta} jours", weekAgo: "il y a une semaine", weeksAgo: "il y a {delta} semaines", monthAgo: "il y a 1 mois", monthsAgo: "il y a {delta} mois", yearthAgo: "il y a 1 an", yearsAgo: "il y a {delta} ans", lessThanMinuteUntil: "dans moins d'une minute", minuteUntil: "dans une minute", minutesUntil: "dans {delta} minutes", hourUntil: "dans une heure", hoursUntil: "dans {delta} heures", dayUntil: "dans un jour", daysUntil: "dans {delta} jours", weekUntil: "dans 1 semaine", weeksUntil: "dans {delta} semaines", monthUntil: "dans 1 mois", monthsUntil: "dans {delta} mois", yearUntil: "dans 1 an", yearsUntil: "dans {delta} ans" });
        Locale.define("fr-FR", "FormValidator", { required: "Ce champ est obligatoire.", length: "Veuillez saisir {length} caract&egrave;re(s) (vous avez saisi {elLength} caract&egrave;re(s)", minLength: "Veuillez saisir un minimum de {minLength} caract&egrave;re(s) (vous avez saisi {length} caract&egrave;re(s)).", maxLength: "Veuillez saisir un maximum de {maxLength} caract&egrave;re(s) (vous avez saisi {length} caract&egrave;re(s)).", integer: 'Veuillez saisir un nombre entier dans ce champ. Les nombres d&eacute;cimaux (ex : "1,25") ne sont pas autoris&eacute;s.', numeric: 'Veuillez saisir uniquement des chiffres dans ce champ (ex : "1" ou "1,1" ou "-1" ou "-1,1").', digits: "Veuillez saisir uniquement des chiffres et des signes de ponctuation dans ce champ (ex : un num&eacute;ro de t&eacute;l&eacute;phone avec des traits d'union est autoris&eacute;).", alpha: "Veuillez saisir uniquement des lettres (a-z) dans ce champ. Les espaces ou autres caract&egrave;res ne sont pas autoris&eacute;s.", alphanum: "Veuillez saisir uniquement des lettres (a-z) ou des chiffres (0-9) dans ce champ. Les espaces ou autres caract&egrave;res ne sont pas autoris&eacute;s.", dateSuchAs: "Veuillez saisir une date correcte comme {date}", dateInFormatMDY: 'Veuillez saisir une date correcte, au format JJ/MM/AAAA (ex : "31/11/1999").', email: 'Veuillez saisir une adresse de courrier &eacute;lectronique. Par example "fred@domaine.com".', url: "Veuillez saisir une URL, comme http://www.example.com.", currencyDollar: "Veuillez saisir une quantit&eacute; correcte. Par example 100,00&euro;.", oneRequired: "Veuillez s&eacute;lectionner au moins une de ces options.", errorPrefix: "Erreur : ", warningPrefix: "Attention : ", noSpace: "Ce champ n'accepte pas les espaces.", reqChkByNode: "Aucun &eacute;l&eacute;ment n'est s&eacute;lectionn&eacute;.", requiredChk: "Ce champ est obligatoire.", reqChkByName: "Veuillez s&eacute;lectionner un(e) {label}.", match: "Ce champ doit correspondre avec le champ {matchName}.", startDate: "date de d&eacute;but", endDate: "date de fin", currendDate: "date actuelle", afterDate: "La date doit &ecirc;tre identique ou post&eacute;rieure &agrave; {label}.", beforeDate: "La date doit &ecirc;tre identique ou ant&eacute;rieure &agrave; {label}.", startMonth: "Veuillez s&eacute;lectionner un mois de d&eacute;but.", sameMonth: "Ces deux dates doivent &ecirc;tre dans le m&ecirc;me mois - vous devez en modifier une.", creditcard: "Le num&eacute;ro de carte de cr&eacute;dit est invalide. Merci de v&eacute;rifier le num&eacute;ro et de r&eacute;essayer. Vous avez entr&eacute; {length} chiffre(s)." });
        Locale.define("fr-FR", "Number", { group: " " }).inherit("EU", "Number");
        Locale.define("he-IL", "Date", { months: ["ינואר", "פברואר", "מרץ", "אפריל", "מאי", "יוני", "יולי", "אוגוסט", "ספטמבר", "אוקטובר", "נובמבר", "דצמבר"], months_abbr: ["ינואר", "פברואר", "מרץ", "אפריל", "מאי", "יוני", "יולי", "אוגוסט", "ספטמבר", "אוקטובר", "נובמבר", "דצמבר"], days: ["ראשון", "שני", "שלישי", "רביעי", "חמישי", "שישי", "שבת"], days_abbr: ["ראשון", "שני", "שלישי", "רביעי", "חמישי", "שישי", "שבת"], dateOrder: ["date", "month", "year"], shortDate: "%d/%m/%Y", shortTime: "%H:%M", AM: "AM", PM: "PM", firstDayOfWeek: 0, ordinal: "", lessThanMinuteAgo: "לפני פחות מדקה", minuteAgo: "לפני כדקה", minutesAgo: "לפני {delta} דקות", hourAgo: "לפני כשעה", hoursAgo: "לפני {delta} שעות", dayAgo: "לפני יום", daysAgo: "לפני {delta} ימים", weekAgo: "לפני שבוע", weeksAgo: "לפני {delta} שבועות", monthAgo: "לפני חודש", monthsAgo: "לפני {delta} חודשים", yearAgo: "לפני שנה", yearsAgo: "לפני {delta} שנים", lessThanMinuteUntil: "בעוד פחות מדקה", minuteUntil: "בעוד כדקה", minutesUntil: "בעוד {delta} דקות", hourUntil: "בעוד כשעה", hoursUntil: "בעוד {delta} שעות", dayUntil: "בעוד יום", daysUntil: "בעוד {delta} ימים", weekUntil: "בעוד שבוע", weeksUntil: "בעוד {delta} שבועות", monthUntil: "בעוד חודש", monthsUntil: "בעוד {delta} חודשים", yearUntil: "בעוד שנה", yearsUntil: "בעוד {delta} שנים" });
        Locale.define("he-IL", "FormValidator", { required: "נא למלא שדה זה.", minLength: "נא להזין לפחות {minLength} תווים (הזנת {length} תווים).", maxLength: "נא להזין עד {maxLength} תווים (הזנת {length} תווים).", integer: "נא להזין מספר שלם לשדה זה. מספרים עשרוניים (כמו 1.25) אינם חוקיים.", numeric: 'נא להזין ערך מספרי בלבד בשדה זה (כמו "1", "1.1", "-1" או "-1.1").', digits: "נא להזין רק ספרות וסימני הפרדה בשדה זה (למשל, מספר טלפון עם מקפים או נקודות הוא חוקי).", alpha: "נא להזין רק אותיות באנגלית (a-z) בשדה זה. רווחים או תווים אחרים אינם חוקיים.", alphanum: "נא להזין רק אותריות באנגלית (a-z) או ספרות (0-9) בשדה זה. אווחרים או תווים אחרים אינם חוקיים.", dateSuchAs: "נא להזין תאריך חוקי, כמו {date}", dateInFormatMDY: 'נא להזין תאריך חוקי בפורמט MM/DD/YYYY (כמו "12/31/1999")', email: 'נא להזין כתובת אימייל חוקית. לדוגמה: "fred@domain.com".', url: "נא להזין כתובת אתר חוקית, כמו http://www.example.com.", currencyDollar: "נא להזין סכום דולרי חוקי. לדוגמה $100.00.", oneRequired: "נא לבחור לפחות בשדה אחד.", errorPrefix: "שגיאה: ", warningPrefix: "אזהרה: ", noSpace: "אין להזין רווחים בשדה זה.", reqChkByNode: "נא לבחור אחת מהאפשרויות.", requiredChk: "שדה זה נדרש.", reqChkByName: "נא לבחור {label}.", match: "שדה זה צריך להתאים לשדה {matchName}", startDate: "תאריך ההתחלה", endDate: "תאריך הסיום", currendDate: "התאריך הנוכחי", afterDate: "התאריך צריך להיות זהה או אחרי {label}.", beforeDate: "התאריך צריך להיות זהה או לפני {label}.", startMonth: "נא לבחור חודש התחלה", sameMonth: "שני תאריכים אלה צריכים להיות באותו חודש - נא לשנות אחד התאריכים.", creditcard: "מספר כרטיס האשראי שהוזן אינו חוקי. נא לבדוק שנית. הוזנו {length} ספרות." });
        Locale.define("he-IL", "Number", { decimal: ".", group: ",", currency: { suffix: " ₪" } });
        Locale.define("hu-HU", "Date", { months: ["Január", "Február", "Március", "Április", "Május", "Június", "Július", "Augusztus", "Szeptember", "Október", "November", "December"], months_abbr: ["jan.", "febr.", "márc.", "ápr.", "máj.", "jún.", "júl.", "aug.", "szept.", "okt.", "nov.", "dec."], days: ["Vasárnap", "Hétfő", "Kedd", "Szerda", "Csütörtök", "Péntek", "Szombat"], days_abbr: ["V", "H", "K", "Sze", "Cs", "P", "Szo"], dateOrder: ["year", "month", "date"], shortDate: "%Y.%m.%d.", shortTime: "%I:%M", AM: "de.", PM: "du.", firstDayOfWeek: 1, ordinal: ".", lessThanMinuteAgo: "alig egy perce", minuteAgo: "egy perce", minutesAgo: "{delta} perce", hourAgo: "egy órája", hoursAgo: "{delta} órája", dayAgo: "1 napja", daysAgo: "{delta} napja", weekAgo: "1 hete", weeksAgo: "{delta} hete", monthAgo: "1 hónapja", monthsAgo: "{delta} hónapja", yearAgo: "1 éve", yearsAgo: "{delta} éve", lessThanMinuteUntil: "alig egy perc múlva", minuteUntil: "egy perc múlva", minutesUntil: "{delta} perc múlva", hourUntil: "egy óra múlva", hoursUntil: "{delta} óra múlva", dayUntil: "1 nap múlva", daysUntil: "{delta} nap múlva", weekUntil: "1 hét múlva", weeksUntil: "{delta} hét múlva", monthUntil: "1 hónap múlva", monthsUntil: "{delta} hónap múlva", yearUntil: "1 év múlva", yearsUntil: "{delta} év múlva" });
        Locale.define("hu-HU", "FormValidator", { required: "A mező kitöltése kötelező.", minLength: "Legalább {minLength} karakter megadása szükséges (megadva {length} karakter).", maxLength: "Legfeljebb {maxLength} karakter megadása lehetséges (megadva {length} karakter).", integer: "Egész szám megadása szükséges. A tizedesjegyek (pl. 1.25) nem engedélyezettek.", numeric: 'Szám megadása szükséges (pl. "1" vagy "1.1" vagy "-1" vagy "-1.1").', digits: "Csak számok és írásjelek megadása lehetséges (pl. telefonszám kötőjelek és/vagy perjelekkel).", alpha: "Csak betűk (a-z) megadása lehetséges. Szóköz és egyéb karakterek nem engedélyezettek.", alphanum: "Csak betűk (a-z) vagy számok (0-9) megadása lehetséges. Szóköz és egyéb karakterek nem engedélyezettek.", dateSuchAs: "Valós dátum megadása szükséges (pl. {date}).", dateInFormatMDY: 'Valós dátum megadása szükséges ÉÉÉÉ.HH.NN. formában. (pl. "1999.12.31.")', email: 'Valós e-mail cím megadása szükséges (pl. "fred@domain.hu").', url: "Valós URL megadása szükséges (pl. http://www.example.com).", currencyDollar: "Valós pénzösszeg megadása szükséges (pl. 100.00 Ft.).", oneRequired: "Az alábbi mezők legalább egyikének kitöltése kötelező.", errorPrefix: "Hiba: ", warningPrefix: "Figyelem: ", noSpace: "A mező nem tartalmazhat szóközöket.", reqChkByNode: "Nincs egyetlen kijelölt elem sem.", requiredChk: "A mező kitöltése kötelező.", reqChkByName: "Egy {label} kiválasztása szükséges.", match: "A mezőnek egyeznie kell a(z) {matchName} mezővel.", startDate: "a kezdet dátuma", endDate: "a vég dátuma", currendDate: "jelenlegi dátum", afterDate: "A dátum nem lehet kisebb, mint {label}.", beforeDate: "A dátum nem lehet nagyobb, mint {label}.", startMonth: "Kezdeti hónap megadása szükséges.", sameMonth: "A két dátumnak ugyanazon hónapban kell lennie.", creditcard: "A megadott bankkártyaszám nem valódi (megadva {length} számjegy)." });
        Locale.define("it-IT", "Date", { months: ["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", "Dicembre"], months_abbr: ["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"], days: ["Domenica", "Lunedì", "Martedì", "Mercoledì", "Giovedì", "Venerdì", "Sabato"], days_abbr: ["dom", "lun", "mar", "mer", "gio", "ven", "sab"], dateOrder: ["date", "month", "year"], shortDate: "%d/%m/%Y", shortTime: "%H.%M", AM: "AM", PM: "PM", firstDayOfWeek: 1, ordinal: "º", lessThanMinuteAgo: "meno di un minuto fa", minuteAgo: "circa un minuto fa", minutesAgo: "circa {delta} minuti fa", hourAgo: "circa un'ora fa", hoursAgo: "circa {delta} ore fa", dayAgo: "circa 1 giorno fa", daysAgo: "circa {delta} giorni fa", weekAgo: "una settimana fa", weeksAgo: "{delta} settimane fa", monthAgo: "un mese fa", monthsAgo: "{delta} mesi fa", yearAgo: "un anno fa", yearsAgo: "{delta} anni fa", lessThanMinuteUntil: "tra meno di un minuto", minuteUntil: "tra circa un minuto", minutesUntil: "tra circa {delta} minuti", hourUntil: "tra circa un'ora", hoursUntil: "tra circa {delta} ore", dayUntil: "tra circa un giorno", daysUntil: "tra circa {delta} giorni", weekUntil: "tra una settimana", weeksUntil: "tra {delta} settimane", monthUntil: "tra un mese", monthsUntil: "tra {delta} mesi", yearUntil: "tra un anno", yearsUntil: "tra {delta} anni" });
        Locale.define("it-IT", "FormValidator", { required: "Il campo &egrave; obbligatorio.", minLength: "Inserire almeno {minLength} caratteri (ne sono stati inseriti {length}).", maxLength: "Inserire al massimo {maxLength} caratteri (ne sono stati inseriti {length}).", integer: "Inserire un numero intero. Non sono consentiti decimali (es.: 1.25).", numeric: 'Inserire solo valori numerici (es.: "1" oppure "1.1" oppure "-1" oppure "-1.1").', digits: "Inserire solo numeri e caratteri di punteggiatura. Per esempio &egrave; consentito un numero telefonico con trattini o punti.", alpha: "Inserire solo lettere (a-z). Non sono consentiti spazi o altri caratteri.", alphanum: "Inserire solo lettere (a-z) o numeri (0-9). Non sono consentiti spazi o altri caratteri.", dateSuchAs: "Inserire una data valida del tipo {date}", dateInFormatMDY: 'Inserire una data valida nel formato MM/GG/AAAA (es.: "12/31/1999")', email: 'Inserire un indirizzo email valido. Per esempio "nome@dominio.com".', url: 'Inserire un indirizzo valido. Per esempio "http://www.example.com".', currencyDollar: 'Inserire un importo valido. Per esempio "$100.00".', oneRequired: "Completare almeno uno dei campi richiesti.", errorPrefix: "Errore: ", warningPrefix: "Attenzione: ", noSpace: "Non sono consentiti spazi.", reqChkByNode: "Nessuna voce selezionata.", requiredChk: "Il campo &egrave; obbligatorio.", reqChkByName: "Selezionare un(a) {label}.", match: "Il valore deve corrispondere al campo {matchName}", startDate: "data d'inizio", endDate: "data di fine", currendDate: "data attuale", afterDate: "La data deve corrispondere o essere successiva al {label}.", beforeDate: "La data deve corrispondere o essere precedente al {label}.", startMonth: "Selezionare un mese d'inizio", sameMonth: "Le due date devono essere dello stesso mese - occorre modificarne una." });
        Locale.define("ja-JP", "Date", { months: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], months_abbr: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], days: ["日曜日", "月曜日", "火曜日", "水曜日", "木曜日", "金曜日", "土曜日"], days_abbr: ["日", "月", "火", "水", "木", "金", "土"], dateOrder: ["year", "month", "date"], shortDate: "%Y/%m/%d", shortTime: "%H:%M", AM: "午前", PM: "午後", firstDayOfWeek: 0, ordinal: "", lessThanMinuteAgo: "1分以内前", minuteAgo: "約1分前", minutesAgo: "約{delta}分前", hourAgo: "約1時間前", hoursAgo: "約{delta}時間前", dayAgo: "1日前", daysAgo: "{delta}日前", weekAgo: "1週間前", weeksAgo: "{delta}週間前", monthAgo: "1ヶ月前", monthsAgo: "{delta}ヶ月前", yearAgo: "1年前", yearsAgo: "{delta}年前", lessThanMinuteUntil: "今から約1分以内", minuteUntil: "今から約1分", minutesUntil: "今から約{delta}分", hourUntil: "今から約1時間", hoursUntil: "今から約{delta}時間", dayUntil: "今から1日間", daysUntil: "今から{delta}日間", weekUntil: "今から1週間", weeksUntil: "今から{delta}週間", monthUntil: "今から1ヶ月", monthsUntil: "今から{delta}ヶ月", yearUntil: "今から1年", yearsUntil: "今から{delta}年" });
        Locale.define("ja-JP", "FormValidator", { required: "入力は必須です。", minLength: "入力文字数は{minLength}以上にしてください。({length}文字)", maxLength: "入力文字数は{maxLength}以下にしてください。({length}文字)", integer: "整数を入力してください。", numeric: '入力できるのは数値だけです。(例: "1", "1.1", "-1", "-1.1"....)', digits: "入力できるのは数値と句読記号です。 (例: -や+を含む電話番号など).", alpha: "入力できるのは半角英字だけです。それ以外の文字は入力できません。", alphanum: "入力できるのは半角英数字だけです。それ以外の文字は入力できません。", dateSuchAs: "有効な日付を入力してください。{date}", dateInFormatMDY: '日付の書式に誤りがあります。YYYY/MM/DD (i.e. "1999/12/31")', email: "メールアドレスに誤りがあります。", url: "URLアドレスに誤りがあります。", currencyDollar: "金額に誤りがあります。", oneRequired: "ひとつ以上入力してください。", errorPrefix: "エラー: ", warningPrefix: "警告: ", noSpace: "スペースは入力できません。", reqChkByNode: "選択されていません。", requiredChk: "この項目は必須です。", reqChkByName: "{label}を選択してください。", match: "{matchName}が入力されている場合必須です。", startDate: "開始日", endDate: "終了日", currendDate: "今日", afterDate: "{label}以降の日付にしてください。", beforeDate: "{label}以前の日付にしてください。", startMonth: "開始月を選択してください。", sameMonth: "日付が同一です。どちらかを変更してください。" });
        Locale.define("ja-JP", "Number", { decimal: ".", group: ",", currency: { decimals: 0, prefix: "\\" } });
        Locale.define("nl-NL", "Date", { months: ["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"], months_abbr: ["jan", "feb", "mrt", "apr", "mei", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], days: ["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"], days_abbr: ["zo", "ma", "di", "wo", "do", "vr", "za"], dateOrder: ["date", "month", "year"], shortDate: "%d-%m-%Y", shortTime: "%H:%M", AM: "AM", PM: "PM", firstDayOfWeek: 1, ordinal: "e", lessThanMinuteAgo: "minder dan een minuut geleden", minuteAgo: "ongeveer een minuut geleden", minutesAgo: "{delta} minuten geleden", hourAgo: "ongeveer een uur geleden", hoursAgo: "ongeveer {delta} uur geleden", dayAgo: "een dag geleden", daysAgo: "{delta} dagen geleden", weekAgo: "een week geleden", weeksAgo: "{delta} weken geleden", monthAgo: "een maand geleden", monthsAgo: "{delta} maanden geleden", yearAgo: "een jaar geleden", yearsAgo: "{delta} jaar geleden", lessThanMinuteUntil: "over minder dan een minuut", minuteUntil: "over ongeveer een minuut", minutesUntil: "over {delta} minuten", hourUntil: "over ongeveer een uur", hoursUntil: "over {delta} uur", dayUntil: "over ongeveer een dag", daysUntil: "over {delta} dagen", weekUntil: "over een week", weeksUntil: "over {delta} weken", monthUntil: "over een maand", monthsUntil: "over {delta} maanden", yearUntil: "over een jaar", yearsUntil: "over {delta} jaar" });
        Locale.define("nl-NL", "FormValidator", { required: "Dit veld is verplicht.", length: "Vul precies {length} karakters in (je hebt {elLength} karakters ingevoerd).", minLength: "Vul minimaal {minLength} karakters in (je hebt {length} karakters ingevoerd).", maxLength: "Vul niet meer dan {maxLength} karakters in (je hebt {length} karakters ingevoerd).", integer: "Vul een getal in. Getallen met decimalen (bijvoorbeeld 1.25) zijn niet toegestaan.", numeric: 'Vul alleen numerieke waarden in (bijvoorbeeld "1" of "1.1" of "-1" of "-1.1").', digits: "Vul alleen nummers en leestekens in (bijvoorbeeld een telefoonnummer met streepjes is toegestaan).", alpha: "Vul alleen letters in (a-z). Spaties en andere karakters zijn niet toegestaan.", alphanum: "Vul alleen letters (a-z) of nummers (0-9) in. Spaties en andere karakters zijn niet toegestaan.", dateSuchAs: "Vul een geldige datum in, zoals {date}", dateInFormatMDY: 'Vul een geldige datum, in het formaat MM/DD/YYYY (bijvoorbeeld "12/31/1999")', email: 'Vul een geldig e-mailadres in. Bijvoorbeeld "fred@domein.nl".', url: "Vul een geldige URL in, zoals http://www.example.com.", currencyDollar: "Vul een geldig $ bedrag in. Bijvoorbeeld $100.00 .", oneRequired: "Vul iets in bij in ieder geval een van deze velden.", warningPrefix: "Waarschuwing: ", errorPrefix: "Fout: ", noSpace: "Spaties zijn niet toegestaan in dit veld.", reqChkByNode: "Er zijn geen items geselecteerd.", requiredChk: "Dit veld is verplicht.", reqChkByName: "Selecteer een {label}.", match: "Dit veld moet overeen komen met het {matchName} veld", startDate: "de begin datum", endDate: "de eind datum", currendDate: "de huidige datum", afterDate: "De datum moet hetzelfde of na {label} zijn.", beforeDate: "De datum moet hetzelfde of voor {label} zijn.", startMonth: "Selecteer een begin maand", sameMonth: "Deze twee data moeten in dezelfde maand zijn - u moet een van beide aanpassen.", creditcard: "Het ingevulde creditcardnummer is niet geldig. Controleer het nummer en probeer opnieuw. {length} getallen ingevuld." });
        Locale.define("nl-NL").inherit("EU", "Number");
        Locale.define("no-NO", "Date", { dateOrder: ["date", "month", "year"], shortDate: "%d.%m.%Y", shortTime: "%H:%M", AM: "AM", PM: "PM", firstDayOfWeek: 1, lessThanMinuteAgo: "kortere enn et minutt siden", minuteAgo: "omtrent et minutt siden", minutesAgo: "{delta} minutter siden", hourAgo: "omtrent en time siden", hoursAgo: "omtrent {delta} timer siden", dayAgo: "{delta} dag siden", daysAgo: "{delta} dager siden" });
        Locale.define("no-NO", "FormValidator", { required: "Dette feltet er pÃ¥krevd.", minLength: "Vennligst skriv inn minst {minLength} tegn (du skrev {length} tegn).", maxLength: "Vennligst skriv inn maksimalt {maxLength} tegn (du skrev {length} tegn).", integer: "Vennligst skriv inn et tall i dette feltet. Tall med desimaler (for eksempel 1,25) er ikke tillat.", numeric: 'Vennligst skriv inn kun numeriske verdier i dette feltet (for eksempel "1", "1.1", "-1" eller "-1.1").', digits: "Vennligst bruk kun nummer og skilletegn i dette feltet.", alpha: "Vennligst bruk kun bokstaver (a-z) i dette feltet. Ingen mellomrom eller andre tegn er tillat.", alphanum: "Vennligst bruk kun bokstaver (a-z) eller nummer (0-9) i dette feltet. Ingen mellomrom eller andre tegn er tillat.", dateSuchAs: "Vennligst skriv inn en gyldig dato, som {date}", dateInFormatMDY: 'Vennligst skriv inn en gyldig dato, i formatet MM/DD/YYYY (for eksempel "12/31/1999")', email: 'Vennligst skriv inn en gyldig epost-adresse. For eksempel "espen@domene.no".', url: "Vennligst skriv inn en gyldig URL, for eksempel http://www.example.com.", currencyDollar: "Vennligst fyll ut et gyldig $ belÃ¸p. For eksempel $100.00 .", oneRequired: "Vennligst fyll ut noe i minst ett av disse feltene.", errorPrefix: "Feil: ", warningPrefix: "Advarsel: " });
        Locale.define("pl-PL", "Date", { months: ["Styczeń", "Luty", "Marzec", "Kwiecień", "Maj", "Czerwiec", "Lipiec", "Sierpień", "Wrzesień", "Październik", "Listopad", "Grudzień"], months_abbr: ["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "paź", "lis", "gru"], days: ["Niedziela", "Poniedziałek", "Wtorek", "Środa", "Czwartek", "Piątek", "Sobota"], days_abbr: ["niedz.", "pon.", "wt.", "śr.", "czw.", "pt.", "sob."], dateOrder: ["year", "month", "date"], shortDate: "%Y-%m-%d", shortTime: "%H:%M", AM: "nad ranem", PM: "po południu", firstDayOfWeek: 1, ordinal: function (a) {
        return (a > 3 && a < 21) ? "ty" : ["ty", "szy", "gi", "ci", "ty"][Math.min(a % 10, 4)];
                }, lessThanMinuteAgo: "mniej niż minute temu", minuteAgo: "około minutę temu", minutesAgo: "{delta} minut temu", hourAgo: "około godzinę temu", hoursAgo: "około {delta} godzin temu", dayAgo: "Wczoraj", daysAgo: "{delta} dni temu", lessThanMinuteUntil: "za niecałą minutę", minuteUntil: "za około minutę", minutesUntil: "za {delta} minut", hourUntil: "za około godzinę", hoursUntil: "za około {delta} godzin", dayUntil: "za 1 dzień", daysUntil: "za {delta} dni" });
        Locale.define("pl-PL", "FormValidator", { required: "To pole jest wymagane.", minLength: "Wymagane jest przynajmniej {minLength} znaków (wpisanych zostało tylko {length}).", maxLength: "Dozwolone jest nie więcej niż {maxLength} znaków (wpisanych zostało {length})", integer: "To pole wymaga liczb całych. Liczby dziesiętne (np. 1.25) są niedozwolone.", numeric: 'Prosimy używać tylko numerycznych wartości w tym polu (np. "1", "1.1", "-1" lub "-1.1").', digits: "Prosimy używać liczb oraz zankow punktuacyjnych w typ polu (dla przykładu, przy numerze telefonu myślniki i kropki są dozwolone).", alpha: "Prosimy używać tylko liter (a-z) w tym polu. Spacje oraz inne znaki są niedozwolone.", alphanum: "Prosimy używać tylko liter (a-z) lub liczb (0-9) w tym polu. Spacje oraz inne znaki są niedozwolone.", dateSuchAs: "Prosimy podać prawidłową datę w formacie: {date}", dateInFormatMDY: 'Prosimy podać poprawną date w formacie DD.MM.RRRR (i.e. "12.01.2009")', email: 'Prosimy podać prawidłowy adres e-mail, np. "jan@domena.pl".', url: "Prosimy podać prawidłowy adres URL, np. http://www.example.com.", currencyDollar: "Prosimy podać prawidłową sumę w PLN. Dla przykładu: 100.00 PLN.", oneRequired: "Prosimy wypełnić chociaż jedno z pól.", errorPrefix: "Błąd: ", warningPrefix: "Uwaga: ", noSpace: "W tym polu nie mogą znajdować się spacje.", reqChkByNode: "Brak zaznaczonych elementów.", requiredChk: "To pole jest wymagane.", reqChkByName: "Prosimy wybrać z {label}.", match: "To pole musi być takie samo jak {matchName}", startDate: "data początkowa", endDate: "data końcowa", currendDate: "aktualna data", afterDate: "Podana data poinna być taka sama lub po {label}.", beforeDate: "Podana data poinna być taka sama lub przed {label}.", startMonth: "Prosimy wybrać początkowy miesiąc.", sameMonth: "Te dwie daty muszą być w zakresie tego samego miesiąca - wymagana jest zmiana któregoś z pól." });
        Locale.define("pt-PT", "Date", { months: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"], months_abbr: ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"], days: ["Domingo", "Segunda-feira", "Terça-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "Sábado"], days_abbr: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sáb"], dateOrder: ["date", "month", "year"], shortDate: "%d-%m-%Y", shortTime: "%H:%M", AM: "AM", PM: "PM", firstDayOfWeek: 1, ordinal: "º", lessThanMinuteAgo: "há menos de um minuto", minuteAgo: "há cerca de um minuto", minutesAgo: "há {delta} minutos", hourAgo: "há cerca de uma hora", hoursAgo: "há cerca de {delta} horas", dayAgo: "há um dia", daysAgo: "há {delta} dias", weekAgo: "há uma semana", weeksAgo: "há {delta} semanas", monthAgo: "há um mês", monthsAgo: "há {delta} meses", yearAgo: "há um ano", yearsAgo: "há {delta} anos", lessThanMinuteUntil: "em menos de um minuto", minuteUntil: "em um minuto", minutesUntil: "em {delta} minutos", hourUntil: "em uma hora", hoursUntil: "em {delta} horas", dayUntil: "em um dia", daysUntil: "em {delta} dias", weekUntil: "em uma semana", weeksUntil: "em {delta} semanas", monthUntil: "em um mês", monthsUntil: "em {delta} meses", yearUntil: "em um ano", yearsUntil: "em {delta} anos" });
        Locale.define("pt-BR", "Date", { shortDate: "%d/%m/%Y" }).inherit("pt-PT", "Date");
        Locale.define("pt-BR", "FormValidator", { required: "Este campo é obrigatório.", minLength: "Digite pelo menos {minLength} caracteres (tamanho atual: {length}).", maxLength: "Não digite mais de {maxLength} caracteres (tamanho atual: {length}).", integer: "Por favor digite apenas um número inteiro neste campo. Não são permitidos números decimais (por exemplo, 1,25).", numeric: 'Por favor digite apenas valores numéricos neste campo (por exemplo, "1" ou "1.1" ou "-1" ou "-1,1").', digits: "Por favor use apenas números e pontuação neste campo (por exemplo, um número de telefone com traços ou pontos é permitido).", alpha: "Por favor use somente letras (a-z). Espaço e outros caracteres não são permitidos.", alphanum: "Use somente letras (a-z) ou números (0-9) neste campo. Espaço e outros caracteres não são permitidos.", dateSuchAs: "Digite uma data válida, como {date}", dateInFormatMDY: 'Digite uma data válida, como DD/MM/YYYY (por exemplo, "31/12/1999")', email: 'Digite um endereço de email válido. Por exemplo "nome@dominio.com".', url: "Digite uma URL válida. Exemplo: http://www.example.com.", currencyDollar: "Digite um valor em dinheiro válido. Exemplo: R$100,00 .", oneRequired: "Digite algo para pelo menos um desses campos.", errorPrefix: "Erro: ", warningPrefix: "Aviso: ", noSpace: "Não é possível digitar espaços neste campo.", reqChkByNode: "Não foi selecionado nenhum item.", requiredChk: "Este campo é obrigatório.", reqChkByName: "Por favor digite um {label}.", match: "Este campo deve ser igual ao campo {matchName}.", startDate: "a data inicial", endDate: "a data final", currendDate: "a data atual", afterDate: "A data deve ser igual ou posterior a {label}.", beforeDate: "A data deve ser igual ou anterior a {label}.", startMonth: "Por favor selecione uma data inicial.", sameMonth: "Estas duas datas devem ter o mesmo mês - você deve modificar uma das duas.", creditcard: "O número do cartão de crédito informado é inválido. Por favor verifique o valor e tente novamente. {length} números informados." });
        Locale.define("pt-PT", "FormValidator", { required: "Este campo é necessário.", minLength: "Digite pelo menos{minLength} caracteres (comprimento {length} caracteres).", maxLength: "Não insira mais de {maxLength} caracteres (comprimento {length} caracteres).", integer: "Digite um número inteiro neste domínio. Com números decimais (por exemplo, 1,25), não são permitidas.", numeric: 'Digite apenas valores numéricos neste domínio (p.ex., "1" ou "1.1" ou "-1" ou "-1,1").', digits: "Por favor, use números e pontuação apenas neste campo (p.ex., um número de telefone com traços ou pontos é permitida).", alpha: "Por favor use somente letras (a-z), com nesta área. Não utilize espaços nem outros caracteres são permitidos.", alphanum: "Use somente letras (a-z) ou números (0-9) neste campo. Não utilize espaços nem outros caracteres são permitidos.", dateSuchAs: "Digite uma data válida, como {date}", dateInFormatMDY: 'Digite uma data válida, como DD/MM/YYYY (p.ex. "31/12/1999")', email: 'Digite um endereço de email válido. Por exemplo "fred@domain.com".', url: "Digite uma URL válida, como http://www.example.com.", currencyDollar: "Digite um valor válido $. Por exemplo $ 100,00. ", oneRequired: "Digite algo para pelo menos um desses insumos.", errorPrefix: "Erro: ", warningPrefix: "Aviso: " });
        (function () {
        var a = function (h, e, d, g, b) {
        var c = h % 10, f = h % 100;
                if (c == 1 && f != 11) {
        return e;
        }
        else {
        if ((c == 2 || c == 3 || c == 4) && !(f == 12 || f == 13 || f == 14)) {
        return d;
        }
        else {
        if (c == 0 || (c == 5 || c == 6 || c == 7 || c == 8 || c == 9) || (f == 11 || f == 12 || f == 13 || f == 14)) {
        return g;
        }
        else {
        return b;
        }
        }
        }
        };
                Locale.define("ru-RU", "Date", { months: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"], months_abbr: ["янв", "февр", "март", "апр", "май", "июнь", "июль", "авг", "сент", "окт", "нояб", "дек"], days: ["Воскресенье", "Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота"], days_abbr: ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"], dateOrder: ["date", "month", "year"], shortDate: "%d.%m.%Y", shortTime: "%H:%M", AM: "AM", PM: "PM", firstDayOfWeek: 1, ordinal: "", lessThanMinuteAgo: "меньше минуты назад", minuteAgo: "минуту назад", minutesAgo: function (b) {
                return "{delta} " + a(b, "минуту", "минуты", "минут") + " назад";
                }, hourAgo: "час назад", hoursAgo: function (b) {
                return "{delta} " + a(b, "час", "часа", "часов") + " назад";
                }, dayAgo: "вчера", daysAgo: function (b) {
                return "{delta} " + a(b, "день", "дня", "дней") + " назад";
                }, weekAgo: "неделю назад", weeksAgo: function (b) {
                return "{delta} " + a(b, "неделя", "недели", "недель") + " назад";
                }, monthAgo: "месяц назад", monthsAgo: function (b) {
                return "{delta} " + a(b, "месяц", "месяца", "месецев") + " назад";
                }, yearAgo: "год назад", yearsAgo: function (b) {
                return "{delta} " + a(b, "год", "года", "лет") + " назад";
                }, lessThanMinuteUntil: "меньше чем через минуту", minuteUntil: "через минуту", minutesUntil: function (b) {
                return "через {delta} " + a(b, "час", "часа", "часов") + "";
                }, hourUntil: "через час", hoursUntil: function (b) {
                return "через {delta} " + a(b, "час", "часа", "часов") + "";
                }, dayUntil: "завтра", daysUntil: function (b) {
                return "через {delta} " + a(b, "день", "дня", "дней") + "";
                }, weekUntil: "через неделю", weeksUntil: function (b) {
                return "через {delta} " + a(b, "неделю", "недели", "недель") + "";
                }, monthUntil: "через месяц", monthsUntil: function (b) {
                return "через {delta} " + a(b, "месяц", "месяца", "месецев") + "";
                }, yearUntil: "через", yearsUntil: function (b) {
                return "через {delta} " + a(b, "год", "года", "лет") + "";
                } });
                Locale.define("ru-RU-unicode").inherit("ru-RU", "Date");
                })();
        Locale.define("ru-RU", "FormValidator", { required: "Это поле обязательно к заполнению.", minLength: "Пожалуйста, введите хотя бы {minLength} символов (Вы ввели {length}).", maxLength: "Пожалуйста, введите не больше {maxLength} символов (Вы ввели {length}).", integer: "Пожалуйста, введите в это поле число. Дробные числа (например 1.25) тут не разрешены.", numeric: 'Пожалуйста, введите в это поле число (например "1" или "1.1", или "-1", или "-1.1").', digits: "В этом поле Вы можете использовать только цифры и знаки пунктуации (например, телефонный номер со знаками дефиса или с точками).", alpha: "В этом поле можно использовать только латинские буквы (a-z). Пробелы и другие символы запрещены.", alphanum: "В этом поле можно использовать только латинские буквы (a-z) и цифры (0-9). Пробелы и другие символы запрещены.", dateSuchAs: "Пожалуйста, введите корректную дату {date}", dateInFormatMDY: 'Пожалуйста, введите дату в формате ММ/ДД/ГГГГ (например "12/31/1999")', email: 'Пожалуйста, введите корректный емейл-адрес. Для примера "fred@domain.com".', url: "Пожалуйста, введите правильную ссылку вида http://www.example.com.", currencyDollar: "Пожалуйста, введите сумму в долларах. Например: $100.00 .", oneRequired: "Пожалуйста, выберите хоть что-нибудь в одном из этих полей.", errorPrefix: "Ошибка: ", warningPrefix: "Внимание: " });
        Locale.define("ru-RU-unicode").inherit("ru-RU", "FormValidator");
        (function () {
        var a = function (f, d, c, e, b) {
        return (f >= 1 && f <= 3) ? arguments[f] : b;
        };
                Locale.define("si-SI", "Date", { months: ["januar", "februar", "marec", "april", "maj", "junij", "julij", "avgust", "september", "oktober", "november", "december"], months_abbr: ["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"], days: ["nedelja", "ponedeljek", "torek", "sreda", "četrtek", "petek", "sobota"], days_abbr: ["ned", "pon", "tor", "sre", "čet", "pet", "sob"], dateOrder: ["date", "month", "year"], shortDate: "%d.%m.%Y", shortTime: "%H.%M", AM: "AM", PM: "PM", firstDayOfWeek: 1, ordinal: ".", lessThanMinuteAgo: "manj kot minuto nazaj", minuteAgo: "minuto nazaj", minutesAgo: function (b) {
                return "{delta} " + a(b, "minuto", "minuti", "minute", "minut") + " nazaj";
                }, hourAgo: "uro nazaj", hoursAgo: function (b) {
                return "{delta} " + a(b, "uro", "uri", "ure", "ur") + " nazaj";
                }, dayAgo: "dan nazaj", daysAgo: function (b) {
                return "{delta} " + a(b, "dan", "dneva", "dni", "dni") + " nazaj";
                }, weekAgo: "teden nazaj", weeksAgo: function (b) {
                return "{delta} " + a(b, "teden", "tedna", "tedne", "tednov") + " nazaj";
                }, monthAgo: "mesec nazaj", monthsAgo: function (b) {
                return "{delta} " + a(b, "mesec", "meseca", "mesece", "mesecov") + " nazaj";
                }, yearthAgo: "leto nazaj", yearsAgo: function (b) {
                return "{delta} " + a(b, "leto", "leti", "leta", "let") + " nazaj";
                }, lessThanMinuteUntil: "še manj kot minuto", minuteUntil: "še minuta", minutesUntil: function (b) {
                return "še {delta} " + a(b, "minuta", "minuti", "minute", "minut");
                }, hourUntil: "še ura", hoursUntil: function (b) {
                return "še {delta} " + a(b, "ura", "uri", "ure", "ur");
                }, dayUntil: "še dan", daysUntil: function (b) {
                return "še {delta} " + a(b, "dan", "dneva", "dnevi", "dni");
                }, weekUntil: "še tedn", weeksUntil: function (b) {
                return "še {delta} " + a(b, "teden", "tedna", "tedni", "tednov");
                }, monthUntil: "še mesec", monthsUntil: function (b) {
                return "še {delta} " + a(b, "mesec", "meseca", "meseci", "mesecov");
                }, yearUntil: "še leto", yearsUntil: function (b) {
                return "še {delta} " + a(b, "leto", "leti", "leta", "let");
                } });
                })();
        Locale.define("si-SI", "FormValidator", { required: "To polje je obvezno", minLength: "Prosim, vnesite vsaj {minLength} znakov (vnesli ste {length} znakov).", maxLength: "Prosim, ne vnesite več kot {maxLength} znakov (vnesli ste {length} znakov).", integer: "Prosim, vnesite celo število. Decimalna števila (kot 1,25) niso dovoljena.", numeric: 'Prosim, vnesite samo numerične vrednosti (kot "1" ali "1.1" ali "-1" ali "-1.1").', digits: "Prosim, uporabite številke in ločila le na tem polju (na primer, dovoljena je telefonska številka z pomišlaji ali pikami).", alpha: "Prosim, uporabite le črke v tem plju. Presledki in drugi znaki niso dovoljeni.", alphanum: "Prosim, uporabite samo črke ali številke v tem polju. Presledki in drugi znaki niso dovoljeni.", dateSuchAs: "Prosim, vnesite pravilen datum kot {date}", dateInFormatMDY: 'Prosim, vnesite pravilen datum kot MM.DD.YYYY (primer "12.31.1999")', email: 'Prosim, vnesite pravilen email naslov. Na primer "fred@domain.com".', url: "Prosim, vnesite pravilen URL kot http://www.example.com.", currencyDollar: "Prosim, vnesit epravilno vrednost €. Primer 100,00€ .", oneRequired: "Prosimo, vnesite nekaj za vsaj eno izmed teh polj.", errorPrefix: "Napaka: ", warningPrefix: "Opozorilo: ", noSpace: "To vnosno polje ne dopušča presledkov.", reqChkByNode: "Nič niste izbrali.", requiredChk: "To polje je obvezno", reqChkByName: "Prosim, izberite {label}.", match: "To polje se mora ujemati z poljem {matchName}", startDate: "datum začetka", endDate: "datum konca", currendDate: "trenuten datum", afterDate: "Datum bi moral biti isti ali po {label}.", beforeDate: "Datum bi moral biti isti ali pred {label}.", startMonth: "Prosim, vnesite začetni datum", sameMonth: "Ta dva datuma morata biti v istem mesecu - premeniti morate eno ali drugo.", creditcard: "Številka kreditne kartice ni pravilna. Preverite številko ali poskusite še enkrat. Vnešenih {length} znakov." });
        Locale.define("sv-SE", "Date", { months: ["januari", "februari", "mars", "april", "maj", "juni", "juli", "augusti", "september", "oktober", "november", "december"], months_abbr: ["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], days: ["söndag", "måndag", "tisdag", "onsdag", "torsdag", "fredag", "lördag"], days_abbr: ["sön", "mån", "tis", "ons", "tor", "fre", "lör"], dateOrder: ["year", "month", "date"], shortDate: "%Y-%m-%d", shortTime: "%H:%M", AM: "", PM: "", firstDayOfWeek: 1, ordinal: "", lessThanMinuteAgo: "mindre än en minut sedan", minuteAgo: "ungefär en minut sedan", minutesAgo: "{delta} minuter sedan", hourAgo: "ungefär en timme sedan", hoursAgo: "ungefär {delta} timmar sedan", dayAgo: "1 dag sedan", daysAgo: "{delta} dagar sedan", lessThanMinuteUntil: "mindre än en minut sedan", minuteUntil: "ungefär en minut sedan", minutesUntil: "{delta} minuter sedan", hourUntil: "ungefär en timme sedan", hoursUntil: "ungefär {delta} timmar sedan", dayUntil: "1 dag sedan", daysUntil: "{delta} dagar sedan" });
        Locale.define("sv-SE", "FormValidator", { required: "Fältet är obligatoriskt.", minLength: "Ange minst {minLength} tecken (du angav {length} tecken).", maxLength: "Ange högst {maxLength} tecken (du angav {length} tecken). ", integer: "Ange ett heltal i fältet. Tal med decimaler (t.ex. 1,25) är inte tillåtna.", numeric: 'Ange endast numeriska värden i detta fält (t.ex. "1" eller "1.1" eller "-1" eller "-1,1").', digits: "Använd endast siffror och skiljetecken i detta fält (till exempel ett telefonnummer med bindestreck tillåtet).", alpha: "Använd endast bokstäver (a-ö) i detta fält. Inga mellanslag eller andra tecken är tillåtna.", alphanum: "Använd endast bokstäver (a-ö) och siffror (0-9) i detta fält. Inga mellanslag eller andra tecken är tillåtna.", dateSuchAs: "Ange ett giltigt datum som t.ex. {date}", dateInFormatMDY: 'Ange ett giltigt datum som t.ex. YYYY-MM-DD (i.e. "1999-12-31")', email: 'Ange en giltig e-postadress. Till exempel "erik@domain.com".', url: "Ange en giltig webbadress som http://www.example.com.", currencyDollar: "Ange en giltig belopp. Exempelvis 100,00.", oneRequired: "Vänligen ange minst ett av dessa alternativ.", errorPrefix: "Fel: ", warningPrefix: "Varning: ", noSpace: "Det får inte finnas några mellanslag i detta fält.", reqChkByNode: "Inga objekt är valda.", requiredChk: "Detta är ett obligatoriskt fält.", reqChkByName: "Välj en {label}.", match: "Detta fält måste matcha {matchName}", startDate: "startdatumet", endDate: "slutdatum", currendDate: "dagens datum", afterDate: "Datumet bör vara samma eller senare än {label}.", beforeDate: "Datumet bör vara samma eller tidigare än {label}.", startMonth: "Välj en start månad", sameMonth: "Dessa två datum måste vara i samma månad - du måste ändra det ena eller det andra." });
        (function () {
        var a = function (j, e, c, i, b) {
        var h = (j / 10).toInt(), g = j % 10, f = (j / 100).toInt();
                if (h == 1 && j > 10) {
        return i;
        }
        if (g == 1) {
        return e;
        }
        if (g > 0 && g < 5) {
        return c;
        }
        return i;
        };
                Locale.define("uk-UA", "Date", { months: ["Січень", "Лютий", "Березень", "Квітень", "Травень", "Червень", "Липень", "Серпень", "Вересень", "Жовтень", "Листопад", "Грудень"], months_abbr: ["Січ", "Лют", "Бер", "Квіт", "Трав", "Черв", "Лип", "Серп", "Вер", "Жовт", "Лист", "Груд"], days: ["Неділя", "Понеділок", "Вівторок", "Середа", "Четвер", "П'ятниця", "Субота"], days_abbr: ["Нд", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"], dateOrder: ["date", "month", "year"], shortDate: "%d/%m/%Y", shortTime: "%H:%M", AM: "до полудня", PM: "по полудню", firstDayOfWeek: 1, ordinal: "", lessThanMinuteAgo: "меньше хвилини тому", minuteAgo: "хвилину тому", minutesAgo: function (b) {
                return "{delta} " + a(b, "хвилину", "хвилини", "хвилин") + " тому";
                }, hourAgo: "годину тому", hoursAgo: function (b) {
                return "{delta} " + a(b, "годину", "години", "годин") + " тому";
                }, dayAgo: "вчора", daysAgo: function (b) {
                return "{delta} " + a(b, "день", "дня", "днів") + " тому";
                }, weekAgo: "тиждень тому", weeksAgo: function (b) {
                return "{delta} " + a(b, "тиждень", "тижні", "тижнів") + " тому";
                }, monthAgo: "місяць тому", monthsAgo: function (b) {
                return "{delta} " + a(b, "місяць", "місяці", "місяців") + " тому";
                }, yearAgo: "рік тому", yearsAgo: function (b) {
                return "{delta} " + a(b, "рік", "роки", "років") + " тому";
                }, lessThanMinuteUntil: "за мить", minuteUntil: "через хвилину", minutesUntil: function (b) {
                return "через {delta} " + a(b, "хвилину", "хвилини", "хвилин");
                }, hourUntil: "через годину", hoursUntil: function (b) {
                return "через {delta} " + a(b, "годину", "години", "годин");
                }, dayUntil: "завтра", daysUntil: function (b) {
                return "через {delta} " + a(b, "день", "дня", "днів");
                }, weekUntil: "через тиждень", weeksUntil: function (b) {
                return "через {delta} " + a(b, "тиждень", "тижні", "тижнів");
                }, monthUntil: "через місяць", monthesUntil: function (b) {
                return "через {delta} " + a(b, "місяць", "місяці", "місяців");
                }, yearUntil: "через рік", yearsUntil: function (b) {
                return "через {delta} " + a(b, "рік", "роки", "років");
                } });
                })();
        Locale.define("uk-UA", "FormValidator", { required: "Це поле повинне бути заповненим.", minLength: "Введіть хоча б {minLength} символів (Ви ввели {length}).", maxLength: "Кількість символів не може бути більше {maxLength} (Ви ввели {length}).", integer: "Введіть в це поле число. Дробові числа (наприклад 1.25) не дозволені.", numeric: 'Введіть в це поле число (наприклад "1" або "1.1", або "-1", або "-1.1").', digits: "В цьому полі ви можете використовувати лише цифри і знаки пунктіації (наприклад, телефонний номер з знаками дефізу або з крапками).", alpha: "В цьому полі можна використовувати лише латинські літери (a-z). Пробіли і інші символи заборонені.", alphanum: "В цьому полі можна використовувати лише латинські літери (a-z) і цифри (0-9). Пробіли і інші символи заборонені.", dateSuchAs: "Введіть коректну дату {date}.", dateInFormatMDY: 'Введіть дату в форматі ММ/ДД/РРРР (наприклад "12/31/2009").', email: 'Введіть коректну адресу електронної пошти (наприклад "name@domain.com").', url: "Введіть коректне інтернет-посилання (наприклад http://www.example.com).", currencyDollar: 'Введіть суму в доларах (наприклад "$100.00").', oneRequired: "Заповніть одне з полів.", errorPrefix: "Помилка: ", warningPrefix: "Увага: ", noSpace: "Пробіли заборонені.", reqChkByNode: "Не відмічено жодного варіанту.", requiredChk: "Це поле повинне бути віміченим.", reqChkByName: "Будь ласка, відмітьте {label}.", match: "Це поле повинно відповідати {matchName}", startDate: "початкова дата", endDate: "кінцева дата", currendDate: "сьогоднішня дата", afterDate: "Ця дата повинна бути такою ж, або пізнішою за {label}.", beforeDate: "Ця дата повинна бути такою ж, або ранішою за {label}.", startMonth: "Будь ласка, виберіть початковий місяць", sameMonth: "Ці дати повинні відноситись одного і того ж місяця. Будь ласка, змініть одну з них.", creditcard: "Номер кредитної карти введений неправильно. Будь ласка, перевірте його. Введено {length} символів." });
        Locale.define("zh-CHS", "Date", { months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"], months_abbr: ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十", "十一", "十二"], days: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"], days_abbr: ["日", "一", "二", "三", "四", "五", "六"], dateOrder: ["year", "month", "date"], shortDate: "%Y-%m-%d", shortTime: "%I:%M%p", AM: "AM", PM: "PM", firstDayOfWeek: 1, ordinal: "", lessThanMinuteAgo: "不到1分钟前", minuteAgo: "大约1分钟前", minutesAgo: "{delta}分钟之前", hourAgo: "大约1小时前", hoursAgo: "大约{delta}小时前", dayAgo: "1天前", daysAgo: "{delta}天前", weekAgo: "1星期前", weeksAgo: "{delta}星期前", monthAgo: "1个月前", monthsAgo: "{delta}个月前", yearAgo: "1年前", yearsAgo: "{delta}年前", lessThanMinuteUntil: "从现在开始不到1分钟", minuteUntil: "从现在开始約1分钟", minutesUntil: "从现在开始约{delta}分钟", hourUntil: "从现在开始1小时", hoursUntil: "从现在开始约{delta}小时", dayUntil: "从现在开始1天", daysUntil: "从现在开始{delta}天", weekUntil: "从现在开始1星期", weeksUntil: "从现在开始{delta}星期", monthUntil: "从现在开始一个月", monthsUntil: "从现在开始{delta}个月", yearUntil: "从现在开始1年", yearsUntil: "从现在开始{delta}年" });
        Locale.define("zh-CHT", "Date", { months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"], months_abbr: ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十", "十一", "十二"], days: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"], days_abbr: ["日", "一", "二", "三", "四", "五", "六"], dateOrder: ["year", "month", "date"], shortDate: "%Y-%m-%d", shortTime: "%I:%M%p", AM: "AM", PM: "PM", firstDayOfWeek: 1, ordinal: "", lessThanMinuteAgo: "不到1分鐘前", minuteAgo: "大約1分鐘前", minutesAgo: "{delta}分鐘之前", hourAgo: "大約1小時前", hoursAgo: "大約{delta}小時前", dayAgo: "1天前", daysAgo: "{delta}天前", weekAgo: "1星期前", weeksAgo: "{delta}星期前", monthAgo: "1个月前", monthsAgo: "{delta}个月前", yearAgo: "1年前", yearsAgo: "{delta}年前", lessThanMinuteUntil: "從現在開始不到1分鐘", minuteUntil: "從現在開始約1分鐘", minutesUntil: "從現在開始約{delta}分鐘", hourUntil: "從現在開始1小時", hoursUntil: "從現在開始約{delta}小時", dayUntil: "從現在開始1天", daysUntil: "從現在開始{delta}天", weekUntil: "從現在開始1星期", weeksUntil: "從現在開始{delta}星期", monthUntil: "從現在開始一個月", monthsUntil: "從現在開始{delta}個月", yearUntil: "從現在開始1年", yearsUntil: "從現在開始{delta}年" });
        Locale.define("zh-CHS", "FormValidator", { required: "此项必填。", minLength: "请至少输入 {minLength} 个字符 (已输入 {length} 个)。", maxLength: "最多只能输入 {maxLength} 个字符 (已输入 {length} 个)。", integer: '请输入一个整数，不能包含小数点。例如："1", "200"。', numeric: '请输入一个数字，例如："1", "1.1", "-1", "-1.1"。', digits: "请输入由数字和标点符号组成的内容。例如电话号码。", alpha: "请输入 A-Z 的 26 个字母，不能包含空格或任何其他字符。", alphanum: "请输入 A-Z 的 26 个字母或 0-9 的 10 个数字，不能包含空格或任何其他字符。", dateSuchAs: "请输入合法的日期格式，如：{date}。", dateInFormatMDY: '请输入合法的日期格式，例如：YYYY-MM-DD ("2010-12-31")。', email: '请输入合法的电子信箱地址，例如："fred@domain.com"。', url: "请输入合法的 Url 地址，例如：http://www.example.com。", currencyDollar: "请输入合法的货币符号，例如：￥100.0", oneRequired: "请至少选择一项。", errorPrefix: "错误：", warningPrefix: "警告：", noSpace: "不能包含空格。", reqChkByNode: "未选择任何内容。", requiredChk: "此项必填。", reqChkByName: "请选择 {label}.", match: "必须与{matchName}相匹配", startDate: "起始日期", endDate: "结束日期", currendDate: "当前日期", afterDate: "日期必须等于或晚于 {label}.", beforeDate: "日期必须早于或等于 {label}.", startMonth: "请选择起始月份", sameMonth: "您必须修改两个日期中的一个，以确保它们在同一月份。", creditcard: "您输入的信用卡号码不正确。当前已输入{length}个字符。" });
        Locale.define("zh-CHT", "FormValidator", { required: "此項必填。 ", minLength: "請至少輸入{minLength} 個字符(已輸入{length} 個)。 ", maxLength: "最多只能輸入{maxLength} 個字符(已輸入{length} 個)。 ", integer: '請輸入一個整數，不能包含小數點。例如："1", "200"。 ', numeric: '請輸入一個數字，例如："1", "1.1", "-1", "-1.1"。 ', digits: "請輸入由數字和標點符號組成的內容。例如電話號碼。 ", alpha: "請輸入AZ 的26 個字母，不能包含空格或任何其他字符。 ", alphanum: "請輸入AZ 的26 個字母或0-9 的10 個數字，不能包含空格或任何其他字符。 ", dateSuchAs: "請輸入合法的日期格式，如：{date}。 ", dateInFormatMDY: '請輸入合法的日期格式，例如：YYYY-MM-DD ("2010-12-31")。 ', email: '請輸入合法的電子信箱地址，例如："fred@domain.com"。 ', url: "請輸入合法的Url 地址，例如：http://www.example.com。 ", currencyDollar: "請輸入合法的貨幣符號，例如：￥100.0", oneRequired: "請至少選擇一項。 ", errorPrefix: "錯誤：", warningPrefix: "警告：", noSpace: "不能包含空格。 ", reqChkByNode: "未選擇任何內容。 ", requiredChk: "此項必填。 ", reqChkByName: "請選擇 {label}.", match: "必須與{matchName}相匹配", startDate: "起始日期", endDate: "結束日期", currendDate: "當前日期", afterDate: "日期必須等於或晚於{label}.", beforeDate: "日期必須早於或等於{label}.", startMonth: "請選擇起始月份", sameMonth: "您必須修改兩個日期中的一個，以確保它們在同一月份。 ", creditcard: "您輸入的信用卡號碼不正確。當前已輸入{length}個字符。 " });
        Form.Validator.add("validate-currency-yuan", { errorMsg: function () {
        return Form.Validator.getMsg("currencyYuan");
                }, test: function (a) {
        return Form.Validator.getValidator("IsEmpty").test(a) || (/^￥?\-?([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{0,2})?|[1-9]{1}\d*(\.[0-9]{0,2})?|0(\.[0-9]{0,2})?|(\.[0-9]{1,2})?)$/).test(a.get("value"));
                } });
        var Skyline_ScrollToTop = new Class({ Implements: [Options], options: { 'id': 'scrollToTop', 'className': 'scrollToTop', 'image': '', 'text': '^ Scroll to Top', 'title': 'Scroll to Top', 'transition': Fx.Transitions.linear, 'duration': 500 }, initialize: function (b) {
        this.setOptions(b);
                this.scrollFx = new Fx.Scroll(window, { transition: this.options.transition, duration: this.options.duration });
                this.scrollLink = new Element('a', { 'id': this.options.id, 'html': this.options.text, 'title': this.options.title, 'class': this.options.className, 'styles': { 'visibility': 'hidden', 'opacity': 0 }, 'events': { click: function () {
                this.scrollFx.toTop();
                }.bind(this) } }).inject(document.id(document.body));
                if (this.options.image != '') {
        new Element('img', { 'src': this.options.image, 'alt': this.options.title }).inject(this.scrollLink, 'top');
        }
        if (window.getScrollTop() != 0) {
        this.scrollLink.fade(1);
        }
        window.addEvent('scroll', function () {
        var a = this.scrollLink.getStyle('visibility') == 'visible';
                if (window.getScrollTop() != 0 && !a) {
        this.scrollLink.fade(1);
        }
        else if (window.getScrollTop() == 0 && a) {
        this.scrollLink.fade(0);
        }
        }.bind(this));
                } });
        var JCaption = new Class({ initialize: function (a) {
        this.selector = a;
                $$(a).each(function (a) {
        this.createCaption(a);
        }, this);
                }, createCaption: function (a) {
        var f = document.createTextNode(a.title), c = document.createElement("div"), d = document.createElement("p"), e = a.getAttribute("width"), b = a.getAttribute("align");
                if (!e)
                e = a.width;
                b || (b = a.getStyle("float"));
                if (!b)
                b = a.style.styleFloat;
                if (b == "" || !b)
                b = "none";
                d.appendChild(f);
                d.className = this.selector.replace(".", "_");
                a.parentNode.insertBefore(c, a);
                c.appendChild(a);
                a.title != "" && c.appendChild(d);
                c.className = this.selector.replace(".", "_");
                c.className = c.className + " " + b;
                c.setAttribute("style", "float:" + b);
                c.style.width = e + "px";
                } });
        var RSFormProCalendars = {};
        var RSFormProPrices = {};
        if (typeof RSFormPro != 'object') {
var RSFormPro = {};
        }
var RSFormProUtils = { hasClass: function (el, name) {
return new RegExp('(\\s|^)' + name + '(\\s|$)').test(el.className);
        }, addClass: function (el, name) {
if (!RSFormProUtils.hasClass(el, name)) {
el.className += (el.className ? ' ' : '') + name;
}
}, removeClass: function (el, name) {
if (RSFormProUtils.hasClass(el, name)) {
el.className = el.className.replace(new RegExp('(\\s|^)' + name + '(\\s|$)'), ' ').replace(/^\s+|\s+$/g, '');
}
} };
        RSFormPro.Forms = {};
        function isset() {
        var a = arguments, l = a.length, i = 0, undef;
                if (l === 0) {
        throw new Error('Empty isset');
        }
        while (i !== l) {
        if (a[i] === undef || a[i] === null) {
        return false;
        }
        i++;
        }
        return true;
                }
function refreshCaptcha(componentId, captchaPath) {
if (!captchaPath)
        captchaPath = 'index.php?option=com_rsform&task=captcha&componentId=' + componentId;
        document.getElementById('captcha' + componentId).src = captchaPath + '&' + Math.random();
        document.getElementById('captchaTxt' + componentId).value = '';
        document.getElementById('captchaTxt' + componentId).focus();
        }
function number_format(number, decimals, dec_point, thousands_sep) {
var n = number, prec = decimals;
        n = !isFinite( + n) ? 0 : + n;
        prec = !isFinite( + prec) ? 0 : Math.abs(prec);
        var sep = (typeof thousands_sep == "undefined") ? ',' : thousands_sep;
        var dec = (typeof dec_point == "undefined") ? '.' : dec_point;
        var s = (prec > 0) ? n.toFixed(prec) : Math.round(n).toFixed(prec);
        var abs = Math.abs(n).toFixed(prec);
        var _, i;
        if (abs >= 1000) {
_ = abs.split(/\D/);
        i = _[0].length % 3 || 3;
        _[0] = s.slice(0, i + (n < 0)) + _[0].slice(i).replace(/(\d{3})/g, sep + '$1');
        s = _.join(dec);
}
else {
s = s.replace('.', dec);
}
return s;
        }
function buildXmlHttp() {
var xmlHttp;
        try {
        xmlHttp = new XMLHttpRequest();
        }
catch (e) {
try {
xmlHttp = new ActiveXObject("Msxml2.XMLHTTP");
}
catch (e) {
try {
xmlHttp = new ActiveXObject("Microsoft.XMLHTTP");
}
catch (e) {
alert("Your browser does not support AJAX!");
        return false;
}
}
}
return xmlHttp;
        }
function ajaxValidation(form, page) {
try {
var el = form.elements.length;
}
catch (err) {
form = this;
}
var xmlHttp = buildXmlHttp();
        var url = '';
        if (typeof rsfp_ajax_root != 'undefined')
        url = rsfp_ajax_root + '/';
        url += 'index.php?option=com_rsform&task=ajaxValidate';
        if (page)
        url += '&page=' + page;
        var params = new Array();
        var submits = new Array();
        var success = false;
        var formId = 0;
        for (i = 0; i < form.elements.length; i++) {
if (!form.elements[i].name)
        continue;
        if (form.elements[i].name.length == 0)
        continue;
        if (form.elements[i].type == 'checkbox' && form.elements[i].checked == false)
        continue;
        if (form.elements[i].type == 'radio' && form.elements[i].checked == false)
        continue;
        if (form.elements[i].type == 'submit') {
submits.push(form.elements[i]);
        form.elements[i].disabled = true;
}
if (form.elements[i].type == 'select-multiple') {
for (var j = 0; j < form.elements[i].options.length; j++)
        if (form.elements[i].options[j].selected)
        params.push(form.elements[i].name + '=' + encodeURIComponent(form.elements[i].options[j].value));
        continue;
}
if (form.elements[i].name == 'form[formId]')
        formId = form.elements[i].value;
        params.push(form.elements[i].name + '=' + encodeURIComponent(form.elements[i].value));
}
if (typeof ajaxExtraValidationScript[formId] == 'function') {
ajaxExtraValidationScript[formId]('beforeSend', formId, { 'url': url, 'params': params });
}
params = params.join('&');
        xmlHttp.open("POST", url, false);
        xmlHttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        xmlHttp.send(params);
        var success = true;
        if (xmlHttp.responseText.indexOf("\n") != - 1) {
var response = xmlHttp.responseText.split("\n");
        var ids = response[0].split(',');
        for (var i = 0; i < ids.length; i++)
        if (!isNaN(parseInt(ids[i])) && document.getElementById('component' + ids[i]))
        document.getElementById('component' + ids[i]).className = 'formNoError';
        var ids = response[1].split(',');
        for (var i = 0; i < ids.length; i++)
        if (!isNaN(parseInt(ids[i])) && document.getElementById('component' + ids[i])) {
document.getElementById('component' + ids[i]).className = 'formError';
        success = false;
}
if (response.length == 4) {
page = parseInt(response[2]) - 1;
        totalPages = parseInt(response[3]);
        rsfp_changePage(formId, page, totalPages, false);
}
if (typeof ajaxExtraValidationScript[formId] == 'function') {
ajaxExtraValidationScript[formId]('afterSend', formId, { 'url': url, 'params': params, 'response': response });
}
}
for (var i = 0; i < submits.length; i++)
        submits[i].disabled = false;
        if (success == false && document.getElementById('rsform_error_' + formId)) {
try {
document.getElementById('rsform_error_' + formId).style.display = 'block';
}
catch (err) {
}
}
if (success == true) {
try {
document.getElementById('rsform_error_' + formId).style.display = 'none';
}
catch (err) {
}
}
return success;
        }
var ajaxExtraValidationScript = {};
        function rsfp_addEvent(obj, evType, fn) {
        if (obj.addEventListener) {
        obj.addEventListener(evType, fn, false);
                return true;
        }
        else if (obj.attachEvent) {
        var r = obj.attachEvent("on" + evType, fn);
                return r;
        }
        else {
        return false;
        }
        }
function rsfp_getForm(formId) {
if (typeof RSFormPro.Forms[formId] == 'undefined') {
var formIds = document.getElementsByName('form[formId]');
        for (var i = 0; i < formIds.length; i++) {
if (parseInt(formIds[i].value) != parseInt(formId))
        continue;
        var form = formIds[i].parentNode;
        if (form.tagName == 'FORM' || form.nodeName == 'FORM') {
RSFormPro.Forms[formId] = form;
        return form;
}
while (form.parentNode) {
form = form.parentNode;
        if (form.tagName == 'FORM' || form.nodeName == 'FORM') {
RSFormPro.Forms[formId] = form;
        return form;
}
}
}
}
return RSFormPro.Forms[formId];
        }
function rsfp_setCalculationsEvents(formId, fields) {
var func = window["rsfp_Calculations" + formId];
        var thefields = fields ? fields : RSFormProPrices;
        var isIE8 = navigator.userAgent.match(/MSIE 8\.0/);
        var event = 'click';
        for (field in thefields) {
field = field.replace(formId + '_', '');
        objects = rsfp_getFieldsByName(formId, field);
        for (i = 0; i < objects.length; i++) {
tagName = objects[i].tagName || objects[i].nodeName;
        if (tagName == 'INPUT' || tagName == 'SELECT') {
if (tagName == 'INPUT' && isIE8 && objects[i].type && objects[i].type.toLowerCase() == 'checkbox') {
event = 'click';
}
else {
event = 'change';
}
rsfp_addEvent(objects[i], event, function () {
if (typeof func == "function") {
func();
}
});
}
}
}
}
function rsfp_getValue(formId, name) {
form = rsfp_getForm(formId);
        values = [];
        if (typeof form != 'undefined') {
for (var i = 0; i < form.elements.length; i++) {
var element = form.elements[i];
        var tagName = element.tagName || element.nodeName;
        switch (tagName) {
case 'INPUT':
        if (element.type)
        switch (element.type.toUpperCase()) {
case 'TEXT':
        case 'HIDDEN':
        if (!element.name || element.name != 'form[' + name + ']')
        continue;
        return element.value;
        break;
        case 'RADIO':
        if (!element.name || element.name != 'form[' + name + ']')
        continue;
        if (element.checked == true) {
values.push(element.value);
}
break;
        case 'CHECKBOX':
        if (!element.name || element.name != 'form[' + name + '][]')
        continue;
        if (element.checked == true) {
values.push(element.value);
}
break;
}
break;
        case 'SELECT':
        if (!element.name || element.name != 'form[' + name + '][]')
        continue;
        if (element.options)
        for (var o = 0; o < element.options.length; o++)
        if (element.options[o].selected) {
values.push(element.options[o].value);
}
break;
}
}
}
return values;
        }
function rsfp_toNumber(number, replace1, replace2) {
if (number.indexOf(',') == - 1 && number.indexOf('.') != - 1) {
return number;
}
else if (number.indexOf(',') != - 1 && number.indexOf('.') == - 1) {
return number.replace(',', '.');
}
number = number.replace(replace1, '').replace(replace2, '');
        return parseFloat(number) / 100;
        }
function rsfp_verifyChecked(formId, name, value) {
isChecked = false;
        form = rsfp_getForm(formId);
        if (typeof form != 'undefined') {
primary_loop: for (var i = 0; i < form.elements.length; i++) {
var element = form.elements[i];
        var tagName = element.tagName || element.nodeName;
        switch (tagName) {
case 'INPUT':
        if (element.type)
        switch (element.type.toUpperCase()) {
case 'RADIO':
        if (!element.name || element.name != 'form[' + name + ']')
        continue;
        if (element.checked == true && element.value == value) {
isChecked = true;
        break primary_loop;
}
break;
        case 'CHECKBOX':
        if (!element.name || element.name != 'form[' + name + '][]')
        continue;
        if (element.checked == true && element.value == value) {
isChecked = true;
        break primary_loop;
}
break;
}
break;
        case 'SELECT':
        if (!element.name || element.name != 'form[' + name + '][]')
        continue;
        if (element.options)
        for (var o = 0; o < element.options.length; o++)
        if (element.options[o].selected && element.options[o].value == value) {
isChecked = true;
        break primary_loop;
}
break;
}
}
}
return isChecked;
        }
function rsfp_addCondition(formId, name, fnCondition) {
form = rsfp_getForm(formId);
        if (typeof form != 'undefined') {
for (var i = 0; i < form.elements.length; i++) {
var element = form.elements[i];
        var tagName = element.tagName || element.nodeName;
        if (element.name && (element.name == 'form[' + name + ']' || element.name == 'form[' + name + '][]')) {
if (tagName == 'SELECT') {
rsfp_addEvent(element, 'change', function () {
fnCondition();
});
}
else {
rsfp_addEvent(element, 'click', function () {
fnCondition();
});
}
}
}
}
}
function rsfp_getBlock(formId, block) {
form = rsfp_getForm(formId);
        if (typeof form != 'undefined') {
if (blocks = getElementsByClassName('rsform-block')) {
for (i = 0; i < blocks.length; i++) {
var classes = blocks[i].className.split(' ');
        for (c = 0; c < classes.length; c++) {
if (classes[c] == 'rsform-block-' + block) {
if (blocks[i].parentNode) {
current_block = blocks[i];
        if (current_block == form)
        return [blocks[i]];
        while (current_block.parentNode) {
current_block = current_block.parentNode;
        if (current_block == form)
        return [blocks[i]];
}
}
return [blocks[i]];
}
}
}
}
}
}
function rsfp_getFieldsByName(formId, name) {
form = rsfp_getForm(formId);
        var results = [];
        if (typeof form != 'undefined') {
for (var i = 0; i < form.elements.length; i++) {
var element = form.elements[i];
        pushed = false;
        if (element.name && (element.name == 'form[' + name + ']' || element.name == 'form[' + name + '][]' || element.name == 'form[' + name + '][d]' || element.name == 'form[' + name + '][m]' || element.name == 'form[' + name + '][y]')) {
results.push(element);
        pushed = true;
}
if (pushed) {
if (element.id && element.id.indexOf('txtcal') > - 1) {
var suffix = element.id.replace('txtcal', '');
        results.push(document.getElementById('btn' + suffix));
}
var labels = form.getElementsByTagName('label');
        for (var l = 0; l < labels.length; l++) {
if (labels[l].htmlFor && labels[l].htmlFor == element.id)
        results.push(labels[l]);
}
}
}
}
return results;
        }
function rsfp_setDisplay(items, value) {
for (i = 0; i < items.length; i++)
        items[i].style.display = value;
        }
function rsfp_checkValidDate(fieldName) {
var theDate = new Date();
        for (var day = 1; day <= 31; day++) {
var year = parseInt(document.getElementById(fieldName + 'y').value);
        var month = parseInt(document.getElementById(fieldName + 'm').value) - 1;
        var index = day - 1;
        if (document.getElementById(fieldName + 'd').options[0].value == '') {
index++;
}
document.getElementById(fieldName + 'd').options[index].disabled = false;
        if (!isNaN(year) && !isNaN(month)) {
if (typeof theDate.__msh_oldSetFullYear == 'function') {
theDate.__msh_oldSetFullYear(year, month, day);
}
else {
theDate.setFullYear(year, month, day);
}
if (theDate.getDate() != day || theDate.getMonth() != month) {
document.getElementById(fieldName + 'd').options[index].disabled = true;
}
}
}
if (document.getElementById(fieldName + 'd').options[document.getElementById(fieldName + 'd').selectedIndex].disabled == true) {
for (var day = 31; day >= 28; day--) {
var index = day - 1;
        if (document.getElementById(fieldName + 'd').options[0].value == '') {
index++;
}
if (document.getElementById(fieldName + 'd').options[index].disabled == false) {
document.getElementById(fieldName + 'd').value = day;
        break;
}
}
}
}
function rsfp_geolocation(term, id, mapid, map, marker, geocoder, type) {
var content = document.getElementById('rsform_geolocation' + id);
        var address = document.getElementById(mapid).clientWidth;
        document.getElementById('rsform_geolocation' + id).style.width = address + 'px';
        document.getElementById('rsform_geolocation' + id).style.display = 'none';
        document.getElementById('rsform_geolocation' + id).innerHTML = '';
        if (term != '') {
geocoder.geocode({ 'address': term }, function (results, status) {
if (status == 'OK') {
for (var i = 0; i < results.length; i++) {
var item = results[i];
        var theli = document.createElement('li');
        var thea = document.createElement('a');
        thea.setAttribute('href', 'javascript:void(0)');
        thea.innerHTML = item.formatted_address;
        rsfp_addEvent(thea, 'click', (function () {
        var mapValue = type ? item.formatted_address : item.geometry.location.lat().toFixed(5) + ',' + item.geometry.location.lng().toFixed(5);
                var mapId = mapid;
                var location = new google.maps.LatLng(item.geometry.location.lat().toFixed(5), item.geometry.location.lng().toFixed(5));
                return function () {
                document.getElementById(mapId).value = mapValue;
                        marker.setPosition(location);
                        map.setCenter(location);
                        document.getElementById('rsform_geolocation' + id).style.display = 'none';
                };
        })());
        theli.appendChild(thea);
        content.appendChild(theli);
}
document.getElementById('rsform_geolocation' + id).style.display = '';
}
});
}
}
function rsfp_runAllConditions(formId) {
var func = window["rsfp_runAllConditions" + formId];
        if (typeof func == "function") {
func();
}
}
var getElementsByClassName = function (className, tag, elm) {
if (document.getElementsByClassName) {
getElementsByClassName = function (className, tag, elm) {
elm = elm || document;
        var elements = elm.getElementsByClassName(className), nodeName = (tag) ? new RegExp("\\b" + tag + "\\b", "i") : null, returnElements = [], current;
        for (var i = 0, il = elements.length; i < il; i += 1) {
current = elements[i];
        if (!nodeName || nodeName.test(current.nodeName)) {
returnElements.push(current);
}
}
return returnElements;
};
}
else if (document.evaluate) {
getElementsByClassName = function (className, tag, elm) {
tag = tag || "*";
        elm = elm || document;
        var classes = className.split(" "), classesToCheck = "", xhtmlNamespace = "http://www.w3.org/1999/xhtml", namespaceResolver = (document.documentElement.namespaceURI === xhtmlNamespace) ? xhtmlNamespace : null, returnElements = [], elements, node;
        for (var j = 0, jl = classes.length; j < jl; j += 1) {
classesToCheck += "[contains(concat(' ', @class, ' '), ' " + classes[j] + " ')]";
}
try {
elements = document.evaluate(".//" + tag + classesToCheck, elm, namespaceResolver, 0, null);
}
catch (e) {
elements = document.evaluate(".//" + tag + classesToCheck, elm, null, 0, null);
}
while ((node = elements.iterateNext())) {
returnElements.push(node);
}
return returnElements;
};
}
else {
getElementsByClassName = function (className, tag, elm) {
tag = tag || "*";
        elm = elm || document;
        var classes = className.split(" "), classesToCheck = [], elements = (tag === "*" && elm.all) ? elm.all : elm.getElementsByTagName(tag), current, returnElements = [], match;
        for (var k = 0, kl = classes.length; k < kl; k += 1) {
classesToCheck.push(new RegExp("(^|\\s)" + classes[k] + "(\\s|$)"));
}
for (var l = 0, ll = elements.length; l < ll; l += 1) {
current = elements[l];
        match = false;
        for (var m = 0, ml = classesToCheck.length; m < ml; m += 1) {
match = classesToCheck[m].test(current.className);
        if (!match) {
break;
}
}
if (match) {
returnElements.push(current);
}
}
return returnElements;
};
}
return getElementsByClassName(className, tag, elm);
        };
        function switchFontSize(ckname, val) {
        var bd = document.getElementsByTagName('body');
                if (!bd || !bd.length)
                return;
                bd = bd[0];
                switch (val) {
        case 'inc':
                if (CurrentFontSize + 1 < 7) {
        CurrentFontSize++;
        }
        break;
                case 'dec':
                if (CurrentFontSize - 1 > 0) {
        CurrentFontSize--;
        }
        break;
                case 'reset':
                default: CurrentFontSize = DefaultFontSize;
        }
        var newclass = 'fs' + CurrentFontSize;
                bd.className = bd.className.replace(new RegExp('fs.?', 'g'), '');
                bd.className = trim(bd.className);
                bd.className += (bd.className ? ' ' : '') + newclass;
                createCookie(ckname, CurrentFontSize, 365);
                }
function switchTool(ckname, val) {
createCookie(ckname, val, 365);
        window.location.reload();
        }
function cpanel_reset() {
var matches = document.cookie.match(new RegExp('(?:^|;)\\s*' + tmpl_name.escapeRegExp() + '_([^=]*)=([^;]*)', 'g'));
        if (!matches)
        return;
        for (var i = 0; i < matches.length; i++) {
var ck = matches[i].match(new RegExp('(?:^|;)\\s*' + tmpl_name.escapeRegExp() + '_([^=]*)=([^;]*)'));
        if (ck) {
createCookie(tmpl_name + '_' + ck[1], '', - 1);
}
}
if (window.location.href.indexOf('?') > - 1) {
window.location.href = window.location.href.substr(0, window.location.href.indexOf('?'));
}
else {
window.location.reload(true);
}
}
function cpanel_apply() {
var elems = document.getElementById('ja-cpanel-main').getElementsByTagName('*');
        var usersetting = {};
        for (var i = 0; i < elems.length; i++) {
var el = elems[i];
        if (el.name && (match = el.name.match(/^user_(.*)$/))) {
var name = match[1];
        var value = '';
        if (el.tagName.toLowerCase() == 'input' && (el.type.toLowerCase() == 'radio' || el.type.toLowerCase() == 'checkbox')) {
if (el.checked)
        value = el.value;
}
else {
value = el.value;
}
if (usersetting[name]) {
if (value)
        usersetting[name] = value + ',' + usersetting[name];
}
else {
usersetting[name] = value;
}
}
}
for (var k in usersetting) {
name = tmpl_name + '_' + k;
        value = usersetting[k].trim();
        if (value.length > 0) {
createCookie(name, value, 365);
}
}
if (window.location.href.indexOf('?') > - 1) {
window.location.href = window.location.href.substr(0, window.location.href.indexOf('?'));
}
else {
window.location.reload(true);
}
}
function createCookie(name, value, days) {
if (days) {
var date = new Date();
        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
        var expires = "; expires=" + date.toGMTString();
}
else {
expires = "";
}
document.cookie = name + "=" + value + expires + "; path=/";
        }
function trim(str, chars) {
return ltrim(rtrim(str, chars), chars);
        }
function ltrim(str, chars) {
chars = chars || "\\s";
        return str.replace(new RegExp("^[" + chars + "]+", "g"), "");
        }
function rtrim(str, chars) {
chars = chars || "\\s";
        return str.replace(new RegExp("[" + chars + "]+$", "g"), "");
        }
function getScreenWidth() {
var x = 0;
        if (self.innerHeight) {
x = self.innerWidth;
}
else if (document.documentElement && document.documentElement.clientHeight) {
x = document.documentElement.clientWidth;
}
else if (document.body) {
x = document.body.clientWidth;
}
return x;
        }
function equalHeight(els) {
els = $$_(els);
        if (!els || els.length < 2)
        return;
        var maxh = 0;
        var els_ = [];
        els.each(function (el, i) {
        if (!el)
                return;
                els_[i] = el;
                var ch = els_[i].getCoordinates().height;
                maxh = (maxh < ch) ? ch : maxh;
        }, this);
        els_.each(function (el, i) {
        if (!el)
                return;
                if (el.getStyle('padding-top') != null && el.getStyle('padding-bottom') != null) {
        if (maxh - el.getStyle('padding-top').toInt() - el.getStyle('padding-bottom').toInt() > 0) {
        el.setStyle('min-height', maxh - el.getStyle('padding-top').toInt() - el.getStyle('padding-bottom').toInt());
        }
        }
        else {
        if (maxh > 0)
                el.setStyle('min-height', maxh);
        }
        }, this);
        }
function getDeepestWrapper(el) {
while (el.getChildren().length == 1) {
el = el.getChildren()[0];
}
return el;
        }
function fixHeight(els, group1, group2) {
els = $$_(els);
        group1 = $$_(group1);
        group2 = $$_(group2);
        if (!els || !group1)
        return;
        var height = 0;
        group1.each(function (el) {
        if (!el)
                return;
                height += el.getCoordinates().height;
        });
        if (group2) {
group2.each(function (el) {
if (!el)
        return;
        height -= el.getCoordinates().height;
});
}
els.each(function (el, i) {
if (!el)
        return;
        if (el.getStyle('padding-top') != null && el.getStyle('padding-bottom') != null) {
if (height - el.getStyle('padding-top').toInt() - el.getStyle('padding-bottom').toInt() > 0) {
el.setStyle('min-height', height - el.getStyle('padding-top').toInt() - el.getStyle('padding-bottom').toInt());
}
}
else {
if (height > 0) {
el.setStyle('min-height', height);
}
}
});
        }
function addFirstLastItem(el) {
el = $(el);
        if (!el || !el.getChildren() || !el.getChildren().length)
        return;
        el.getChildren()[0].addClass('first-item');
        el.getChildren()[el.getChildren().length - 1].addClass('last-item');
        }
function $$_(els) {
if (typeOf(els) == 'string')
        return $$(els);
        var els_ = [];
        els.each(function (el) {
        el = $(el);
                if (el)
                els_.push(el);
        });
        return els_;
        }
$(document).addEvent('domready', function () {
$$('[data-dismiss="alert"]').each(function (el) {
el.addEvent('click', function () {
el.getParent().destroy();
        if ($('system-message').getChildren().length == 0) {
Joomla.removeMessages();
}
});
});
        });
        var jaMegaMenuMoo = new Class({ Implements: Options, options: { slide: 0, duration: 300, fading: 0, bgopacity: 0.9, delayHide: 500, direction: 'down', action: 'mouseenter', hidestyle: 'normal', offset: 5, fixArrow: false }, toElement: function () {
        return this.menu;
                }, initialize: function (menu, options) {
        this.menu = $(menu);
                if (!this.menu) {
        return;
        }
        this.setOptions(options);
                if (!this.options.slide && !this.options.fading) {
        this.options.delayHide = 10;
        }
        this.childopen = [];
                this.imgloaded = false;
                this.loaded = false;
                this.prepare();
                }, prepare: function () {
        var imgElms = this.menu.getElements('img');
                if (imgElms.length && !this.imgloaded) {
        var imgSrcs = [];
                imgElms.each(function (image) {
                imgSrcs.push(image.src);
                });
                new Asset.images(imgSrcs, { onComplete: function () {
                this.start();
                }.bind(this) });
                this.imgloaded = true;
                this.start.delay(3000, this);
        }
        else {
        this.start();
        }
        }, start: function () {
        if (this.loaded) {
        return;
        }
        this.loaded = true;
                this.zindex = 1000;
                var pw = this.menu;
                while (pw = pw.getParent()) {
        if (pw.hasClass('main') || pw.hasClass('wrap')) {
        this.wrapper = pw;
                break;
        }
        }
        this.items = this.menu.getElements('li.mega');
                this.items.each(function (li) {
                var link = li.getChildren('a.mega')[0], child = li.getChildren('.childcontent')[0], level0 = li.getParent().hasClass('level0'), parent = this.getParent(li), item = { stimer: null, direction: ((level0 && this.options.direction == 'up') ? 0 : 1) };
                        if (child) {
                var childwrap = child.getElement('.childcontent-inner-wrap'), childinner = child.getElement('.childcontent-inner'), width = childinner.getWidth(), height = childinner.getHeight(), padding = childwrap.getStyle('padding-left').toInt() + childwrap.getStyle('padding-right').toInt(), overflow = false;
                        child.setStyles({ width: width + 20, height: height + 20 });
                        childwrap.setStyle('width', width);
                        if (['auto', 'scroll'].contains(childinner.getStyle('overflow'))) {
                overflow = true;
                        if (Browser.ie) {
                if (Browser.version <= 7) {
                childinner.setStyle('position', 'relative');
                }
                if (Browser.version == 6) {
                childinner.setStyle('height', childinner.getStyle('max-height') || 400);
                }
                }
                }
                if (this.options.direction == 'up') {
                if (level0) {
                child.setStyle('top', - child.getHeight());
                }
                else {
                child.setStyle('bottom', 0);
                }
                }
                }
                if (child && this.options.bgopacity) {
                new Element('div', { 'class': 'childcontent-bg', styles: { width: '100%', height: height, opacity: this.options.bgopacity, position: 'absolute', top: 0, left: 0, zIndex: 1, background: child.getStyle('background'), backgroundImage: child.getStyle('background-image'), backgroundRepeat: child.getStyle('background-repeat'), backgroundColor: child.getStyle('background-color') } }).inject(childwrap, 'top');
                        child.setStyle('background', 'none');
                        childwrap.setStyles({ position: 'relative', zIndex: 2 });
                }
                if (child && (this.options.slide || this.options.fading)) {
                if (child.hasClass('right')) {
                child.setStyle('right', 0);
                }
                var fx = new Fx.Morph(childwrap, { duration: this.options.duration, transition: Fx.Transitions.linear, onComplete: this.itemAnimDone.bind(this, item), link: 'cancel' }), stylesOn = {};
                        if (this.options.slide) {
                if (level0) {
                stylesOn[item.direction == 1 ? 'margin-top' : 'bottom'] = 0;
                }
                else {
                stylesOn[window.isRTL ? 'margin-right' : 'margin-left'] = 0;
                }
                }
                if (this.options.fading) {
                stylesOn['opacity'] = 1;
                }
                }
                if (child && this.options.action == 'click') {
                li.addEvent('click', function (e) {
                e.stopPropagation();
                        if (li.hasClass('group')) {
                return;
                }
                if (item.status == 'open') {
                if (this.cursorIn(li, e)) {
                this.itemHide(item);
                }
                else {
                this.hideOthers(li);
                }
                }
                else {
                this.itemShow(item);
                }
                }.bind(this));
                }
                if (this.options.action == 'mouseover' || this.options.action == 'mouseenter') {
                li.addEvent('mouseover', function (e) {
                if (li.hasClass('group')) {
                return;
                }
                e.stop();
                        clearTimeout(item.stimer);
                        clearTimeout(this.atimer);
                        this.intent(item, 'open');
                        this.itemShow(item);
                }.bind(this)).addEvent('mouseleave', function (e) {
                if (li.hasClass('group')) {
                return;
                }
                clearTimeout(item.stimer);
                        this.intent(item, 'close');
                        if (child) {
                item.stimer = this.itemHide.delay(this.options.delayHide, this, [item]);
                }
                else {
                this.itemHide(item);
                }
                }.bind(this));
                        if (link && child) {
                link.addEvent('click', function (e) {
                if (!item.clickable) {
                e.stop();
                }
                });
                }
                li.addEvent('click', function (e) {
                e.stopPropagation();
                });
                        if (child) {
                child.addEvent('mouseover', function () {
                clearTimeout(item.stimer);
                        clearTimeout(this.atimer);
                        this.intent(item, 'open');
                        this.itemShow(item);
                }.bind(this)).addEvent('mouseleave', function (e) {
                e.stop();
                        this.intent(item, 'close');
                        clearTimeout(item.stimer);
                        if (!this.cursorIn(item.el, e)) {
                this.atimer = this.hideAlls.delay(this.options.delayHide, this);
                }
                }.bind(this));
                }
                }
                if (link && !child) {
                link.addEvent('click', function (e) {
                e.stopPropagation();
                        this.hideOthers(null);
                        this.menu.getElements('.active').removeClass('active');
                        var p = li;
                        while (p) {
                var idata = p.retrieve('item');
                        p.addClass('active');
                        idata.link.addClass('active');
                        p = idata.parent;
                }
                }.bind(this));
                }
                Object.append(item, { el: li, parent: parent, link: link, child: child, childwrap: childwrap, childinner: childinner, width: width, height: height, padding: padding, level0: level0, fx: fx, stylesOn: stylesOn, overflow: overflow, clickable: !(link && child) });
                        li.store('item', item);
                }, this);
                var container = $('ja-wrapper');
                if (!container) {
        container = document.body;
        }
        container.addEvent('click', function (e) {
        this.hideAlls();
        }.bind(this));
                this.menu.getElements('.childcontent').setStyle('display', 'none');
                }, getParent: function (el) {
        var p = el;
                while ((p = p.getParent())) {
        if (this.items.contains(p) && !p.hasClass('group')) {
        return p;
        }
        if (!p || p == this.menu) {
        return null;
        }
        }
        }, intent: function (item, action) {
        item.intent = action;
                while (item.parent && (item = item.parent.retrieve('item'))) {
        item.intent = action;
        }
        }, cursorIn: function (el, event) {
        if (!el || !event) {
        return false;
        }
        var pos = el.getPosition(), cursor = event.page;
                return (cursor.x > pos.x && cursor.x < pos.x + el.getWidth() && cursor.y > pos.y && cursor.y < pos.y + el.getHeight());
                }, itemOver: function (item) {
        item.el.addClass('over');
                if (item.el.hasClass('haschild')) {
        item.el.removeClass('haschild').addClass('haschild-over');
        }
        if (item.link) {
        item.link.addClass('over');
        }
        }, itemOut: function (item) {
        item.el.removeClass('over');
                if (item.el.hasClass('haschild-over')) {
        item.el.removeClass('haschild-over').addClass('haschild');
        }
        if (item.link) {
        item.link.removeClass('over');
        }
        }, itemShow: function (item) {
        if (this.childopen.indexOf(item) < this.childopen.length - 1) {
        this.hideOthers(item.el);
        }
        if (item.status == 'open') {
        return;
        }
        this.itemOver(item);
                if (item.level0) {
        this.childopen.length = 0;
        }
        if (item.child) {
        this.childopen.push(item);
        }
        item.intent = 'open';
                item.status = 'open';
                this.enableclick.delay(100, this, item);
                if (item.child) {
        this.positionSubmenu(item);
                if (item.fx && !item.stylesOff) {
        item.stylesOff = {};
                if (this.options.slide) {
        if (item.level0) {
        item.stylesOff[item.direction == 1 ? 'margin-top' : 'bottom'] = - item.height;
        }
        else {
        item.stylesOff[window.isRTL ? 'margin-right' : 'margin-left'] = (item.direction == 1 ? - item.width : item.width);
        }
        }
        if (this.options.fading) {
        item.stylesOff['opacity'] = 0;
        }
        item.fx.set(item.stylesOff);
        }
        clearTimeout(item.sid);
                item.child.setStyles({ display: 'block', zIndex: this.zindex++ });
        }
        if (!item.fx || !item.child) {
        return;
        }
        item.child.setStyle('overflow', 'hidden');
                if (item.overflow) {
        item.childinner.setStyle('overflow', 'hidden');
        }
        item.fx.start(item.stylesOn);
                }, itemHide: function (item) {
        clearTimeout(item.stimer);
                item.status = 'close';
                item.intent = 'close';
                this.itemOut(item);
                this.childopen.erase(item);
                if (!item.fx && item.child) {
        clearTimeout(item.sid);
                item.sid = setTimeout(function () {
                item.child.setStyle('display', 'none');
                }, this.options.delayHide);
        }
        if (!item.fx || !item.child || item.child.getStyle('opacity') == '0') {
        return;
        }
        item.child.setStyle('overflow', 'hidden');
                if (item.overflow) {
        item.childinner.setStyle('overflow', 'hidden');
        }
        switch (this.options.hidestyle) {
        case 'fast':
                item.fx.options.duration = 100;
                item.fx.start(item.stylesOff);
                break;
                case 'fastwhenshow':
                item.fx.start(Object.merge(item.stylesOff, { 'opacity': 0 }));
                break;
                case 'normal':
                default:
                item.fx.start(item.stylesOff);
                break;
        }
        }, itemAnimDone: function (item) {
        if (item.status == 'close') {
        if (this.options.hidestyle.test(/fast/)) {
        item.fx.options.duration = this.options.duration;
                if (!this.options.fading) {
        item.childwrap.setStyle('opacity', 1);
        }
        }
        item.child.setStyle('display', 'none');
                this.disableclick.delay(100, this, item);
                var pitem = item.parent ? item.parent.retrieve('item') : null;
                if (pitem && pitem.intent == 'close') {
        this.itemHide(pitem);
        }
        }
        if (item.status == 'open') {
        item.child.setStyle('overflow', '');
                if (item.overflow) {
        item.childinner.setStyle('overflow-y', 'auto');
        }
        item.childwrap.setStyle('opacity', 1);
                item.child.setStyle('display', 'block');
        }
        }, hideOthers: function (el) {
        this.childopen.each(function (item) {
        if (!el || (item.el != el && !item.el.contains(el))) {
        item.intent = 'close';
        }
        });
                if (this.options.slide || this.options.fading) {
        var last = this.childopen.getLast();
                if (last && last.intent == 'close') {
        this.itemHide(last);
        }
        }
        else {
        this.childopen.each(function (item) {
        if (item.intent == 'close') {
        this.itemHide(item);
        }
        }, this);
        }
        }, hideAlls: function (el) {
        this.childopen.flatten().each(function (item) {
        if (!item.fx) {
        this.itemHide(item);
        }
        else {
        item.intent = 'close';
        }
        }, this);
                if (this.options.slide || this.options.fading) {
        var last = this.childopen.getLast();
                if (last && last.intent == 'close') {
        this.itemHide(last);
        }
        }
        }, enableclick: function (item) {
        if (item.link && item.child) {
        item.clickable = true;
        }
        }, disableclick: function (item) {
        item.clickable = false;
                }, positionSubmenu: function (item) {
        var options = this.options, offsleft, offstop, left, top, stylesOff = {}, icoord = item.el.getCoordinates(), bodySize = $(document.body).getScrollSize(), winRect = { top: window.getScrollTop(), left: window.getScrollLeft(), width: window.getWidth(), height: window.getHeight() }, wrapRect = this.wrapper ? this.wrapper.getCoordinates() : { top: 0, left: 0, width: winRect.width, height: winRect.height };
                winRect.top = Math.max(winRect.top, wrapRect.top);
                winRect.left = Math.max(winRect.left, wrapRect.left);
                winRect.width = Math.min(winRect.width, wrapRect.width);
                winRect.height = Math.min(winRect.height, $(document.body).getScrollHeight());
                winRect.right = winRect.left + winRect.width;
                winRect.bottom = winRect.top + winRect.height;
                if (!item.level0) {
        var pitem = item.parent.retrieve('item'), offsety = parseFloat(pitem.child.getFirst().getStyle('margin-top')), offsetx = parseFloat(pitem.child.getFirst().getStyle(window.isRTL ? 'margin-right' : 'margin-left'));
                item.direction = pitem.direction;
                window.isRTL && (offsetx = 0 - offsetx);
                icoord.top -= offsety;
                icoord.bottom -= offsety;
                icoord.left -= offsetx;
                icoord.right -= offsetx;
        }
        if (item.level0) {
        if (window.isRTL) {
        offsleft = Math.max(winRect.left, icoord.right - item.width - 20);
                left = Math.max(0, offsleft - winRect.left);
        }
        else {
        offsleft = Math.max(winRect.left, Math.min(winRect.right - item.width, icoord.left));
                left = Math.max(0, Math.min(winRect.right - item.width, icoord.left) - winRect.left);
        }
        }
        else {
        if (window.isRTL) {
        if (item.direction == 1) {
        offsleft = icoord.left - item.width - 20 + options.offset;
                left = - icoord.width - 20;
                if (offsleft < winRect.left) {
        item.direction = 0;
                offsleft = Math.min(winRect.right, Math.max(winRect.left, icoord.right + item.padding - 20 - options.offset));
                left = icoord.width - 20;
                stylesOff['margin-right'] = item.width;
        }
        }
        else {
        offsleft = icoord.right + item.padding - 20;
                left = icoord.width - 20;
                if (offsleft + item.width > winRect.right) {
        item.direction = 1;
                offsleft = Math.max(winRect.left, icoord.left - item.width - 20);
                left = - icoord.width - 20;
                stylesOff['margin-right'] = - item.width;
        }
        }
        }
        else {
        if (item.direction == 1) {
        offsleft = icoord.right - options.offset;
                left = icoord.width;
                if (offsleft + item.width > winRect.right) {
        item.direction = 0;
                offsleft = Math.max(winRect.left, icoord.left - item.width - item.padding + options.offset);
                left = - icoord.width;
                stylesOff['margin-left'] = item.width;
        }
        }
        else {
        offsleft = icoord.left - item.width - item.padding + options.offset;
                left = - icoord.width;
                if (offsleft < winRect.left) {
        item.direction = 1;
                offsleft = Math.max(winRect.left, Math.min(winRect.right - item.width, icoord.right - options.offset));
                left = icoord.width;
                stylesOff['margin-left'] = - item.width;
        }
        }
        }
        }
        if (options.slide && item.fx && Object.getLength(stylesOff)) {
        item.fx.set(stylesOff);
        }
        if (options.fixArrow && item.childinner) {
        item.childinner.setStyle('background-position', (icoord.left - offsleft + (icoord.width / 2 - 4.5)) + 'px top');
        }
        var oldp = item.child.getStyle('display');
                item.child.setStyle('display', 'block');
                if (item.child.getOffsetParent()) {
        left = offsleft - item.child.getOffsetParent().getCoordinates().left;
        }
        item.child.setStyles({ 'margin-left': 0, 'left': left, 'display': oldp });
                } });
        (function (e, t) {
        function _(e) {
        var t = M[e] = {};
                return v.each(e.split(y), function (e, n) {
                t[n] = !0;
                }), t;
        }
        function H(e, n, r) {
        if (r === t && e.nodeType === 1) {
        var i = "data-" + n.replace(P, "-$1").toLowerCase();
                r = e.getAttribute(i);
                if (typeof r == "string") {
        try {
        r = r === "true" ? !0 : r === "false" ? !1 : r === "null" ? null : + r + "" === r ? + r : D.test(r) ? v.parseJSON(r) : r;
        }
        catch (s) {
        }
        v.data(e, n, r);
        }
        else
                r = t;
        }
        return r;
        }
        function B(e) {
        var t;
                for (t in e) {
        if (t === "data" && v.isEmptyObject(e[t]))
                continue;
                if (t !== "toJSON")
                return !1;
        }
        return !0;
        }
        function et() {
        return !1;
        }
        function tt() {
        return !0;
        }
        function ut(e) {
        return !e || !e.parentNode || e.parentNode.nodeType === 11;
        }
        function at(e, t) {
        do
                e = e[t];
                while (e && e.nodeType !== 1);
                return e;
        }
        function ft(e, t, n) {
        t = t || 0;
                if (v.isFunction(t))
                return v.grep(e, function (e, r) {
                var i = !!t.call(e, r, e);
                        return i === n;
                });
                if (t.nodeType)
                return v.grep(e, function (e, r) {
                return e === t === n;
                });
                if (typeof t == "string") {
        var r = v.grep(e, function (e) {
        return e.nodeType === 1;
        });
                if (it.test(t))
                return v.filter(t, r, !n);
                t = v.filter(t, r);
        }
        return v.grep(e, function (e, r) {
        return v.inArray(e, t) >= 0 === n;
        });
        }
        function lt(e) {
        var t = ct.split("|"), n = e.createDocumentFragment();
                if (n.createElement)
                while (t.length)
                n.createElement(t.pop());
                return n;
        }
        function Lt(e, t) {
        return e.getElementsByTagName(t)[0] || e.appendChild(e.ownerDocument.createElement(t));
        }
        function At(e, t) {
        if (t.nodeType !== 1 || !v.hasData(e))
                return;
                var n, r, i, s = v._data(e), o = v._data(t, s), u = s.events;
                if (u) {
        delete o.handle, o.events = {};
                for (n in u)
                for (r = 0, i = u[n].length; r < i; r++)
                v.event.add(t, n, u[n][r]);
        }
        o.data && (o.data = v.extend({}, o.data));
        }
        function Ot(e, t) {
        var n;
                if (t.nodeType !== 1)
                return;
                t.clearAttributes && t.clearAttributes(), t.mergeAttributes && t.mergeAttributes(e), n = t.nodeName.toLowerCase(), n === "object" ? (t.parentNode && (t.outerHTML = e.outerHTML), v.support.html5Clone && e.innerHTML && !v.trim(t.innerHTML) && (t.innerHTML = e.innerHTML)) : n === "input" && Et.test(e.type) ? (t.defaultChecked = t.checked = e.checked, t.value !== e.value && (t.value = e.value)) : n === "option" ? t.selected = e.defaultSelected : n === "input" || n === "textarea" ? t.defaultValue = e.defaultValue : n === "script" && t.text !== e.text && (t.text = e.text), t.removeAttribute(v.expando);
        }
        function Mt(e) {
        return typeof e.getElementsByTagName != "undefined" ? e.getElementsByTagName("*") : typeof e.querySelectorAll != "undefined" ? e.querySelectorAll("*") : [];
        }
        function _t(e) {
        Et.test(e.type) && (e.defaultChecked = e.checked);
        }
        function Qt(e, t) {
        if (t in e)
                return t;
                var n = t.charAt(0).toUpperCase() + t.slice(1), r = t, i = Jt.length;
                while (i--) {
        t = Jt[i] + n;
                if (t in e)
                return t;
        }
        return r;
        }
        function Gt(e, t) {
        return e = t || e, v.css(e, "display") === "none" || !v.contains(e.ownerDocument, e);
        }
        function Yt(e, t) {
        var n, r, i = [], s = 0, o = e.length;
                for (; s < o; s++) {
        n = e[s];
                if (!n.style)
                continue;
                i[s] = v._data(n, "olddisplay"), t ? (!i[s] && n.style.display === "none" && (n.style.display = ""), n.style.display === "" && Gt(n) && (i[s] = v._data(n, "olddisplay", nn(n.nodeName)))) : (r = Dt(n, "display"), !i[s] && r !== "none" && v._data(n, "olddisplay", r));
        }
        for (s = 0; s < o; s++) {
        n = e[s];
                if (!n.style)
                continue;
                if (!t || n.style.display === "none" || n.style.display === "")
                n.style.display = t ? i[s] || "" : "none";
        }
        return e;
        }
        function Zt(e, t, n) {
        var r = Rt.exec(t);
                return r ? Math.max(0, r[1] - (n || 0)) + (r[2] || "px") : t;
        }
        function en(e, t, n, r) {
        var i = n === (r ? "border" : "content") ? 4 : t === "width" ? 1 : 0, s = 0;
                for (; i < 4; i += 2)
                n === "margin" && (s += v.css(e, n + $t[i], !0)), r ? (n === "content" && (s -= parseFloat(Dt(e, "padding" + $t[i])) || 0), n !== "margin" && (s -= parseFloat(Dt(e, "border" + $t[i] + "Width")) || 0)) : (s += parseFloat(Dt(e, "padding" + $t[i])) || 0, n !== "padding" && (s += parseFloat(Dt(e, "border" + $t[i] + "Width")) || 0));
                return s;
        }
        function tn(e, t, n) {
        var r = t === "width" ? e.offsetWidth : e.offsetHeight, i = !0, s = v.support.boxSizing && v.css(e, "boxSizing") === "border-box";
                if (r <= 0 || r == null) {
        r = Dt(e, t);
                if (r < 0 || r == null)
                r = e.style[t];
                if (Ut.test(r))
                return r;
                i = s && (v.support.boxSizingReliable || r === e.style[t]), r = parseFloat(r) || 0;
        }
        return r + en(e, t, n || (s ? "border" : "content"), i) + "px";
        }
        function nn(e) {
        if (Wt[e])
                return Wt[e];
                var t = v("<" + e + ">").appendTo(i.body), n = t.css("display");
                t.remove();
                if (n === "none" || n === "") {
        Pt = i.body.appendChild(Pt || v.extend(i.createElement("iframe"), { frameBorder: 0, width: 0, height: 0 }));
                if (!Ht || !Pt.createElement)
                Ht = (Pt.contentWindow || Pt.contentDocument).document, Ht.write("<!doctype html><html><body>"), Ht.close();
                t = Ht.body.appendChild(Ht.createElement(e)), n = Dt(t, "display"), i.body.removeChild(Pt);
        }
        return Wt[e] = n, n;
        }
        function fn(e, t, n, r) {
        var i;
                if (v.isArray(t))
                v.each(t, function (t, i) {
                n || sn.test(e) ? r(e, i) : fn(e + "[" + (typeof i == "object" ? t : "") + "]", i, n, r);
                });
                else if (!n && v.type(t) === "object")
                for (i in t)
                fn(e + "[" + i + "]", t[i], n, r);
                else
                r(e, t);
        }
        function Cn(e) {
        return function (t, n) {
        typeof t != "string" && (n = t, t = "*");
                var r, i, s, o = t.toLowerCase().split(y), u = 0, a = o.length;
                if (v.isFunction(n))
                for (; u < a; u++)
                r = o[u], s = /^\+/.test(r), s && (r = r.substr(1) || "*"), i = e[r] = e[r] || [], i[s ? "unshift" : "push"](n);
        };
        }
        function kn(e, n, r, i, s, o) {
        s = s || n.dataTypes[0], o = o || {}, o[s] = !0;
                var u, a = e[s], f = 0, l = a ? a.length : 0, c = e === Sn;
                for (; f < l && (c || !u); f++)
                u = a[f](n, r, i), typeof u == "string" && (!c || o[u] ? u = t : (n.dataTypes.unshift(u), u = kn(e, n, r, i, u, o)));
                return (c || !u) && !o["*"] && (u = kn(e, n, r, i, "*", o)), u;
        }
        function Ln(e, n) {
        var r, i, s = v.ajaxSettings.flatOptions || {};
                for (r in n)
                n[r] !== t && ((s[r] ? e : i || (i = {}))[r] = n[r]);
                i && v.extend(!0, e, i);
        }
        function An(e, n, r) {
        var i, s, o, u, a = e.contents, f = e.dataTypes, l = e.responseFields;
                for (s in l)
                s in r && (n[l[s]] = r[s]);
                while (f[0] === "*")
                f.shift(), i === t && (i = e.mimeType || n.getResponseHeader("content-type"));
                if (i)
                for (s in a)
                if (a[s] && a[s].test(i)) {
        f.unshift(s);
                break;
        }
        if (f[0] in r)
                o = f[0];
                else {
                for (s in r) {
                if (!f[0] || e.converters[s + " " + f[0]]) {
                o = s;
                        break;
                }
                u || (u = s);
                }
                o = o || u;
                }
        if (o)
                return o !== f[0] && f.unshift(o), r[o];
        }
        function On(e, t) {
        var n, r, i, s, o = e.dataTypes.slice(), u = o[0], a = {}, f = 0;
                e.dataFilter && (t = e.dataFilter(t, e.dataType));
                if (o[1])
                for (n in e.converters)
                a[n.toLowerCase()] = e.converters[n];
                for (; i = o[++f]; )
                if (i !== "*") {
        if (u !== "*" && u !== i) {
        n = a[u + " " + i] || a["* " + i];
                if (!n)
                for (r in a) {
        s = r.split(" ");
                if (s[1] === i) {
        n = a[u + " " + s[0]] || a["* " + s[0]];
                if (n) {
        n === !0 ? n = a[r] : a[r] !== !0 && (i = s[0], o.splice(f--, 0, i));
                break;
        }
        }
        }
        if (n !== !0)
                if (n && e["throws"])
                t = n(t);
                else
                try {
                t = n(t);
                }
        catch (l) {
        return { state: "parsererror", error: n ? l : "No conversion from " + u + " to " + i };
        }
        }
        u = i;
        }
        return { state: "success", data: t };
        }
        function Fn() {
        try {
        return new e.XMLHttpRequest;
        }
        catch (t) {
        }
        }
        function In() {
        try {
        return new e.ActiveXObject("Microsoft.XMLHTTP");
        }
        catch (t) {
        }
        }
        function $n() {
        return setTimeout(function () {
        qn = t;
        }, 0), qn = v.now();
        }
        function Jn(e, t) {
        v.each(t, function (t, n) {
        var r = (Vn[t] || []).concat(Vn["*"]), i = 0, s = r.length;
                for (; i < s; i++)
                if (r[i].call(e, t, n))
                return;
        });
        }
        function Kn(e, t, n) {
        var r, i = 0, s = 0, o = Xn.length, u = v.Deferred().always(function () {
        delete a.elem;
        }), a = function () {
        var t = qn || $n(), n = Math.max(0, f.startTime + f.duration - t), r = n / f.duration || 0, i = 1 - r, s = 0, o = f.tweens.length;
                for (; s < o; s++)
                f.tweens[s].run(i);
                return u.notifyWith(e, [f, i, n]), i < 1 && o ? n : (u.resolveWith(e, [f]), !1);
        }, f = u.promise({ elem: e, props: v.extend({}, t), opts: v.extend(!0, { specialEasing: {} }, n), originalProperties: t, originalOptions: n, startTime: qn || $n(), duration: n.duration, tweens: [], createTween: function (t, n, r) {
        var i = v.Tween(e, f.opts, t, n, f.opts.specialEasing[t] || f.opts.easing);
                return f.tweens.push(i), i;
        }, stop: function (t) {
        var n = 0, r = t ? f.tweens.length : 0;
                for (; n < r; n++)
                f.tweens[n].run(1);
                return t ? u.resolveWith(e, [f, t]) : u.rejectWith(e, [f, t]), this;
        } }), l = f.props;
                Qn(l, f.opts.specialEasing);
                for (; i < o; i++) {
        r = Xn[i].call(f, e, l, f.opts);
                if (r)
                return r;
        }
        return Jn(f, l), v.isFunction(f.opts.start) && f.opts.start.call(e, f), v.fx.timer(v.extend(a, { anim: f, queue: f.opts.queue, elem: e })), f.progress(f.opts.progress).done(f.opts.done, f.opts.complete).fail(f.opts.fail).always(f.opts.always);
        }
        function Qn(e, t) {
        var n, r, i, s, o;
                for (n in e) {
        r = v.camelCase(n), i = t[r], s = e[n], v.isArray(s) && (i = s[1], s = e[n] = s[0]), n !== r && (e[r] = s, delete e[n]), o = v.cssHooks[r];
                if (o && "expand" in o) {
        s = o.expand(s), delete e[r];
                for (n in s)
                n in e || (e[n] = s[n], t[n] = i);
        }
        else
                t[r] = i;
        }
        }
        function Gn(e, t, n) {
        var r, i, s, o, u, a, f, l, c, h = this, p = e.style, d = {}, m = [], g = e.nodeType && Gt(e);
                n.queue || (l = v._queueHooks(e, "fx"), l.unqueued == null && (l.unqueued = 0, c = l.empty.fire, l.empty.fire = function () {
                l.unqueued || c();
                }), l.unqueued++, h.always(function () {
                h.always(function () {
                l.unqueued--, v.queue(e, "fx").length || l.empty.fire();
                });
                })), e.nodeType === 1 && ("height" in t || "width" in t) && (n.overflow = [p.overflow, p.overflowX, p.overflowY], v.css(e, "display") === "inline" && v.css(e, "float") === "none" && (!v.support.inlineBlockNeedsLayout || nn(e.nodeName) === "inline" ? p.display = "inline-block" : p.zoom = 1)), n.overflow && (p.overflow = "hidden", v.support.shrinkWrapBlocks || h.done(function () {
        p.overflow = n.overflow[0], p.overflowX = n.overflow[1], p.overflowY = n.overflow[2];
        }));
                for (r in t) {
        s = t[r];
                if (Un.exec(s)) {
        delete t[r], a = a || s === "toggle";
                if (s === (g ? "hide" : "show"))
                continue;
                m.push(r);
        }
        }
        o = m.length;
                if (o) {
        u = v._data(e, "fxshow") || v._data(e, "fxshow", {}), "hidden" in u && (g = u.hidden), a && (u.hidden = !g), g ? v(e).show() : h.done(function () {
        v(e).hide();
        }), h.done(function () {
        var t;
                v.removeData(e, "fxshow", !0);
                for (t in d)
                v.style(e, t, d[t]);
        });
                for (r = 0; r < o; r++)
                i = m[r], f = h.createTween(i, g ? u[i] : 0), d[i] = u[i] || v.style(e, i), i in u || (u[i] = f.start, g && (f.end = f.start, f.start = i === "width" || i === "height" ? 1 : 0));
        }
        }
        function Yn(e, t, n, r, i) {
        return new Yn.prototype.init(e, t, n, r, i);
        }
        function Zn(e, t) {
        var n, r = { height: e }, i = 0;
                t = t ? 1 : 0;
                for (; i < 4; i += 2 - t)
                n = $t[i], r["margin" + n] = r["padding" + n] = e;
                return t && (r.opacity = r.width = e), r;
        }
        function tr(e) {
        return v.isWindow(e) ? e : e.nodeType === 9 ? e.defaultView || e.parentWindow : !1;
        }
        var n, r, i = e.document, s = e.location, o = e.navigator, u = e.jQuery, a = e.$, f = Array.prototype.push, l = Array.prototype.slice, c = Array.prototype.indexOf, h = Object.prototype.toString, p = Object.prototype.hasOwnProperty, d = String.prototype.trim, v = function (e, t) {
        return new v.fn.init(e, t, n);
        }, m = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source, g = /\S/, y = /\s+/, b = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, w = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/, E = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, S = /^[\],:{}\s]*$/, x = /(?:^|:|,)(?:\s*\[)+/g, T = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g, N = /"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g, C = /^-ms-/, k = /-([\da-z])/gi, L = function (e, t) {
        return (t + "").toUpperCase();
        }, A = function () {
        i.addEventListener ? (i.removeEventListener("DOMContentLoaded", A, !1), v.ready()) : i.readyState === "complete" && (i.detachEvent("onreadystatechange", A), v.ready());
        }, O = {};
                v.fn = v.prototype = { constructor: v, init: function (e, n, r) {
                var s, o, u, a;
                        if (!e)
                        return this;
                        if (e.nodeType)
                        return this.context = this[0] = e, this.length = 1, this;
                        if (typeof e == "string") {
                e.charAt(0) === "<" && e.charAt(e.length - 1) === ">" && e.length >= 3 ? s = [null, e, null] : s = w.exec(e);
                        if (s && (s[1] || !n)) {
                if (s[1])
                        return n = n instanceof v ? n[0] : n, a = n && n.nodeType ? n.ownerDocument || n : i, e = v.parseHTML(s[1], a, !0), E.test(s[1]) && v.isPlainObject(n) && this.attr.call(e, n, !0), v.merge(this, e);
                        o = i.getElementById(s[2]);
                        if (o && o.parentNode) {
                if (o.id !== s[2])
                        return r.find(e);
                        this.length = 1, this[0] = o;
                }
                return this.context = i, this.selector = e, this;
                }
                return !n || n.jquery ? (n || r).find(e) : this.constructor(n).find(e);
                }
                return v.isFunction(e) ? r.ready(e) : (e.selector !== t && (this.selector = e.selector, this.context = e.context), v.makeArray(e, this));
                }, selector: "", jquery: "1.8.3", length: 0, size: function () {
                return this.length;
                }, toArray: function () {
                return l.call(this);
                }, get: function (e) {
                return e == null ? this.toArray() : e < 0 ? this[this.length + e] : this[e];
                }, pushStack: function (e, t, n) {
                var r = v.merge(this.constructor(), e);
                        return r.prevObject = this, r.context = this.context, t === "find" ? r.selector = this.selector + (this.selector ? " " : "") + n : t && (r.selector = this.selector + "." + t + "(" + n + ")"), r;
                }, each: function (e, t) {
                return v.each(this, e, t);
                }, ready: function (e) {
                return v.ready.promise().done(e), this;
                }, eq: function (e) {
                return e = + e, e === - 1 ? this.slice(e) : this.slice(e, e + 1);
                }, first: function () {
                return this.eq(0);
                }, last: function () {
                return this.eq( - 1);
                }, slice: function () {
                return this.pushStack(l.apply(this, arguments), "slice", l.call(arguments).join(","));
                }, map: function (e) {
                return this.pushStack(v.map(this, function (t, n) {
                return e.call(t, n, t);
                }));
                }, end: function () {
                return this.prevObject || this.constructor(null);
                }, push: f, sort: [].sort, splice: [].splice }, v.fn.init.prototype = v.fn, v.extend = v.fn.extend = function () {
        var e, n, r, i, s, o, u = arguments[0] || {}, a = 1, f = arguments.length, l = !1;
                typeof u == "boolean" && (l = u, u = arguments[1] || {}, a = 2), typeof u != "object" && !v.isFunction(u) && (u = {}), f === a && (u = this, --a);
                for (; a < f; a++)
                if ((e = arguments[a]) != null)
                for (n in e) {
        r = u[n], i = e[n];
                if (u === i)
                continue;
                l && i && (v.isPlainObject(i) || (s = v.isArray(i))) ? (s ? (s = !1, o = r && v.isArray(r) ? r : []) : o = r && v.isPlainObject(r) ? r : {}, u[n] = v.extend(l, o, i)) : i !== t && (u[n] = i);
        }
        return u;
        }, v.extend({ noConflict: function (t) {
        return e.$ === v && (e.$ = a), t && e.jQuery === v && (e.jQuery = u), v;
        }, isReady: !1, readyWait: 1, holdReady: function (e) {
        e ? v.readyWait++ : v.ready(!0);
        }, ready: function (e) {
        if (e === !0 ? --v.readyWait : v.isReady)
                return;
                if (!i.body)
                return setTimeout(v.ready, 1);
                v.isReady = !0;
                if (e !== !0 && --v.readyWait > 0)
                return;
                r.resolveWith(i, [v]), v.fn.trigger && v(i).trigger("ready").off("ready");
        }, isFunction: function (e) {
        return v.type(e) === "function";
        }, isArray: Array.isArray || function (e) {
        return v.type(e) === "array";
        }, isWindow: function (e) {
        return e != null && e == e.window;
        }, isNumeric: function (e) {
        return !isNaN(parseFloat(e)) && isFinite(e);
        }, type: function (e) {
        return e == null ? String(e) : O[h.call(e)] || "object";
        }, isPlainObject: function (e) {
        if (!e || v.type(e) !== "object" || e.nodeType || v.isWindow(e))
                return !1;
                try {
                if (e.constructor && !p.call(e, "constructor") && !p.call(e.constructor.prototype, "isPrototypeOf"))
                        return !1;
                }
        catch (n) {
        return !1;
        }
        var r;
                for (r in e)
                ;
                return r === t || p.call(e, r);
        }, isEmptyObject: function (e) {
        var t;
                for (t in e)
                return !1;
                return !0;
        }, error: function (e) {
        throw new Error(e);
        }, parseHTML: function (e, t, n) {
        var r;
                return !e || typeof e != "string" ? null : (typeof t == "boolean" && (n = t, t = 0), t = t || i, (r = E.exec(e)) ? [t.createElement(r[1])] : (r = v.buildFragment([e], t, n ? null : []), v.merge([], (r.cacheable ? v.clone(r.fragment) : r.fragment).childNodes)));
        }, parseJSON: function (t) {
        if (!t || typeof t != "string")
                return null;
                t = v.trim(t);
                if (e.JSON && e.JSON.parse)
                return e.JSON.parse(t);
                if (S.test(t.replace(T, "@").replace(N, "]").replace(x, "")))
                return (new Function("return " + t))();
                v.error("Invalid JSON: " + t);
        }, parseXML: function (n) {
        var r, i;
                if (!n || typeof n != "string")
                return null;
                try {
                e.DOMParser ? (i = new DOMParser, r = i.parseFromString(n, "text/xml")) : (r = new ActiveXObject("Microsoft.XMLDOM"), r.async = "false", r.loadXML(n));
                }
        catch (s) {
        r = t;
        }
        return (!r || !r.documentElement || r.getElementsByTagName("parsererror").length) && v.error("Invalid XML: " + n), r;
        }, noop: function () {
        }, globalEval: function (t) {
        t && g.test(t) && (e.execScript || function (t) {
        e.eval.call(e, t);
        })(t);
        }, camelCase: function (e) {
        return e.replace(C, "ms-").replace(k, L);
        }, nodeName: function (e, t) {
        return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase();
        }, each: function (e, n, r) {
        var i, s = 0, o = e.length, u = o === t || v.isFunction(e);
                if (r) {
        if (u) {
        for (i in e)
                if (n.apply(e[i], r) === !1)
                break;
        }
        else
                for (; s < o; )
                if (n.apply(e[s++], r) === !1)
                break;
        }
        else if (u) {
        for (i in e)
                if (n.call(e[i], i, e[i]) === !1)
                break;
        }
        else
                for (; s < o; )
                if (n.call(e[s], s, e[s++]) === !1)
                break;
                return e;
        }, trim: d && !d.call("\ufeff\u00a0") ? function (e) {
        return e == null ? "" : d.call(e);
        } : function (e) {
        return e == null ? "" : (e + "").replace(b, "");
        }, makeArray: function (e, t) {
        var n, r = t || [];
                return e != null && (n = v.type(e), e.length == null || n === "string" || n === "function" || n === "regexp" || v.isWindow(e) ? f.call(r, e) : v.merge(r, e)), r;
        }, inArray: function (e, t, n) {
        var r;
                if (t) {
        if (c)
                return c.call(t, e, n);
                r = t.length, n = n ? n < 0 ? Math.max(0, r + n) : n : 0;
                for (; n < r; n++)
                if (n in t && t[n] === e)
                return n;
        }
        return - 1;
        }, merge: function (e, n) {
        var r = n.length, i = e.length, s = 0;
                if (typeof r == "number")
                for (; s < r; s++)
                e[i++] = n[s];
                else
                while (n[s] !== t)
                e[i++] = n[s++];
                return e.length = i, e;
        }, grep: function (e, t, n) {
        var r, i = [], s = 0, o = e.length;
                n = !!n;
                for (; s < o; s++)
                r = !!t(e[s], s), n !== r && i.push(e[s]);
                return i;
        }, map: function (e, n, r) {
        var i, s, o = [], u = 0, a = e.length, f = e instanceof v || a !== t && typeof a == "number" && (a > 0 && e[0] && e[a - 1] || a === 0 || v.isArray(e));
                if (f)
                for (; u < a; u++)
                i = n(e[u], u, r), i != null && (o[o.length] = i);
                else
                for (s in e)
                i = n(e[s], s, r), i != null && (o[o.length] = i);
                return o.concat.apply([], o);
        }, guid: 1, proxy: function (e, n) {
        var r, i, s;
                return typeof n == "string" && (r = e[n], n = e, e = r), v.isFunction(e) ? (i = l.call(arguments, 2), s = function () {
        return e.apply(n, i.concat(l.call(arguments)));
        }, s.guid = e.guid = e.guid || v.guid++, s) : t;
        }, access: function (e, n, r, i, s, o, u) {
        var a, f = r == null, l = 0, c = e.length;
                if (r && typeof r == "object") {
        for (l in r)
                v.access(e, n, l, r[l], 1, o, i);
                s = 1;
        }
        else if (i !== t) {
        a = u === t && v.isFunction(i), f && (a ? (a = n, n = function (e, t, n) {
        return a.call(v(e), n);
        }) : (n.call(e, i), n = null));
                if (n)
                for (; l < c; l++)
                n(e[l], r, a ? i.call(e[l], l, n(e[l], r)) : i, u);
                s = 1;
        }
        return s ? e : f ? n.call(e) : c ? n(e[0], r) : o;
        }, now: function () {
        return (new Date).getTime();
        } }), v.ready.promise = function (t) {
        if (!r) {
        r = v.Deferred();
                if (i.readyState === "complete")
                setTimeout(v.ready, 1);
                else if (i.addEventListener)
                i.addEventListener("DOMContentLoaded", A, !1), e.addEventListener("load", v.ready, !1);
                else {
                i.attachEvent("onreadystatechange", A), e.attachEvent("onload", v.ready);
                        var n = !1;
                        try {
                        n = e.frameElement == null && i.documentElement;
                        }
                catch (s) {
                }
                n && n.doScroll && function o() {
                if (!v.isReady) {
                try {
                n.doScroll("left");
                }
                catch (e) {
                return setTimeout(o, 50);
                }
                v.ready();
                }
                }();
                }
        }
        return r.promise(t);
        }, v.each("Boolean Number String Function Array Date RegExp Object".split(" "), function (e, t) {
        O["[object " + t + "]"] = t.toLowerCase();
        }), n = v(i);
                var M = {};
                v.Callbacks = function (e) {
                e = typeof e == "string" ? M[e] || _(e) : v.extend({}, e);
                        var n, r, i, s, o, u, a = [], f = !e.once && [], l = function (t) {
                n = e.memory && t, r = !0, u = s || 0, s = 0, o = a.length, i = !0;
                        for (; a && u < o; u++)
                        if (a[u].apply(t[0], t[1]) === !1 && e.stopOnFalse) {
                n = !1;
                        break;
                }
                i = !1, a && (f ? f.length && l(f.shift()) : n ? a = [] : c.disable());
                }, c = { add: function () {
                if (a) {
                var t = a.length;
                        (function r(t) {
                        v.each(t, function (t, n) {
                        var i = v.type(n);
                                i === "function" ? (!e.unique || !c.has(n)) && a.push(n) : n && n.length && i !== "string" && r(n);
                        });
                        })(arguments), i ? o = a.length : n && (s = t, l(n));
                }
                return this;
                }, remove: function () {
                return a && v.each(arguments, function (e, t) {
                var n;
                        while ((n = v.inArray(t, a, n)) > - 1)
                        a.splice(n, 1), i && (n <= o && o--, n <= u && u--);
                }), this;
                }, has: function (e) {
                return v.inArray(e, a) > - 1;
                }, empty: function () {
                return a = [], this;
                }, disable: function () {
                return a = f = n = t, this;
                }, disabled: function () {
                return !a;
                }, lock: function () {
                return f = t, n || c.disable(), this;
                }, locked: function () {
                return !f;
                }, fireWith: function (e, t) {
                return t = t || [], t = [e, t.slice ? t.slice() : t], a && (!r || f) && (i ? f.push(t) : l(t)), this;
                }, fire: function () {
                return c.fireWith(this, arguments), this;
                }, fired: function () {
                return !!r;
                } };
                        return c;
                }, v.extend({ Deferred: function (e) {
        var t = [["resolve", "done", v.Callbacks("once memory"), "resolved"], ["reject", "fail", v.Callbacks("once memory"), "rejected"], ["notify", "progress", v.Callbacks("memory")]], n = "pending", r = { state: function () {
        return n;
        }, always: function () {
        return i.done(arguments).fail(arguments), this;
        }, then: function () {
        var e = arguments;
                return v.Deferred(function (n) {
                v.each(t, function (t, r) {
                var s = r[0], o = e[t];
                        i[r[1]](v.isFunction(o) ? function () {
                var e = o.apply(this, arguments);
                        e && v.isFunction(e.promise) ? e.promise().done(n.resolve).fail(n.reject).progress(n.notify) : n[s + "With"](this === i ? n : this, [e]);
                } : n[s]);
                }), e = null;
                }).promise();
        }, promise: function (e) {
        return e != null ? v.extend(e, r) : r;
        } }, i = {};
                return r.pipe = r.then, v.each(t, function (e, s) {
                var o = s[2], u = s[3];
                        r[s[1]] = o.add, u && o.add(function () {
                n = u;
                }, t[e ^ 1][2].disable, t[2][2].lock), i[s[0]] = o.fire, i[s[0] + "With"] = o.fireWith;
                }), r.promise(i), e && e.call(i, i), i;
        }, when: function (e) {
        var t = 0, n = l.call(arguments), r = n.length, i = r !== 1 || e && v.isFunction(e.promise) ? r : 0, s = i === 1 ? e : v.Deferred(), o = function (e, t, n) {
        return function (r) {
        t[e] = this, n[e] = arguments.length > 1 ? l.call(arguments) : r, n === u ? s.notifyWith(t, n) : --i || s.resolveWith(t, n);
        };
        }, u, a, f;
                if (r > 1) {
        u = new Array(r), a = new Array(r), f = new Array(r);
                for (; t < r; t++)
                n[t] && v.isFunction(n[t].promise) ? n[t].promise().done(o(t, f, n)).fail(s.reject).progress(o(t, a, u)) : --i;
        }
        return i || s.resolveWith(f, n), s.promise();
        } }), v.support = function () {
        var t, n, r, s, o, u, a, f, l, c, h, p = i.createElement("div");
                p.setAttribute("className", "t"), p.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", n = p.getElementsByTagName("*"), r = p.getElementsByTagName("a")[0];
                if (!n || !r || !n.length)
                return {};
                s = i.createElement("select"), o = s.appendChild(i.createElement("option")), u = p.getElementsByTagName("input")[0], r.style.cssText = "top:1px;float:left;opacity:.5", t = { leadingWhitespace: p.firstChild.nodeType === 3, tbody: !p.getElementsByTagName("tbody").length, htmlSerialize: !!p.getElementsByTagName("link").length, style: /top/.test(r.getAttribute("style")), hrefNormalized: r.getAttribute("href") === "/a", opacity: /^0.5/.test(r.style.opacity), cssFloat: !!r.style.cssFloat, checkOn: u.value === "on", optSelected: o.selected, getSetAttribute: p.className !== "t", enctype: !!i.createElement("form").enctype, html5Clone: i.createElement("nav").cloneNode(!0).outerHTML !== "<:nav></:nav>", boxModel: i.compatMode === "CSS1Compat", submitBubbles: !0, changeBubbles: !0, focusinBubbles: !1, deleteExpando: !0, noCloneEvent: !0, inlineBlockNeedsLayout: !1, shrinkWrapBlocks: !1, reliableMarginRight: !0, boxSizingReliable: !0, pixelPosition: !1 }, u.checked = !0, t.noCloneChecked = u.cloneNode(!0).checked, s.disabled = !0, t.optDisabled = !o.disabled;
                try {
                delete p.test;
                }
        catch (d) {
        t.deleteExpando = !1;
        }
        !p.addEventListener && p.attachEvent && p.fireEvent && (p.attachEvent("onclick", h = function () {
        t.noCloneEvent = !1;
        }), p.cloneNode(!0).fireEvent("onclick"), p.detachEvent("onclick", h)), u = i.createElement("input"), u.value = "t", u.setAttribute("type", "radio"), t.radioValue = u.value === "t", u.setAttribute("checked", "checked"), u.setAttribute("name", "t"), p.appendChild(u), a = i.createDocumentFragment(), a.appendChild(p.lastChild), t.checkClone = a.cloneNode(!0).cloneNode(!0).lastChild.checked, t.appendChecked = u.checked, a.removeChild(u), a.appendChild(p);
                if (p.attachEvent)
                for (l in { submit: !0, change: !0, focusin: !0 })
                f = "on" + l, c = f in p, c || (p.setAttribute(f, "return;"), c = typeof p[f] == "function"), t[l + "Bubbles"] = c;
                return v(function () {
                var n, r, s, o, u = "padding:0;margin:0;border:0;display:block;overflow:hidden;", a = i.getElementsByTagName("body")[0];
                        if (!a)
                        return;
                        n = i.createElement("div"), n.style.cssText = "visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px", a.insertBefore(n, a.firstChild), r = i.createElement("div"), n.appendChild(r), r.innerHTML = "<table><tr><td></td><td>t</td></tr></table>", s = r.getElementsByTagName("td"), s[0].style.cssText = "padding:0;margin:0;border:0;display:none", c = s[0].offsetHeight === 0, s[0].style.display = "", s[1].style.display = "none", t.reliableHiddenOffsets = c && s[0].offsetHeight === 0, r.innerHTML = "", r.style.cssText = "box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;", t.boxSizing = r.offsetWidth === 4, t.doesNotIncludeMarginInBodyOffset = a.offsetTop !== 1, e.getComputedStyle && (t.pixelPosition = (e.getComputedStyle(r, null) || {}).top !== "1%", t.boxSizingReliable = (e.getComputedStyle(r, null) || { width: "4px" }).width === "4px", o = i.createElement("div"), o.style.cssText = r.style.cssText = u, o.style.marginRight = o.style.width = "0", r.style.width = "1px", r.appendChild(o), t.reliableMarginRight = !parseFloat((e.getComputedStyle(o, null) || {}).marginRight)), typeof r.style.zoom != "undefined" && (r.innerHTML = "", r.style.cssText = u + "width:1px;padding:1px;display:inline;zoom:1", t.inlineBlockNeedsLayout = r.offsetWidth === 3, r.style.display = "block", r.style.overflow = "visible", r.innerHTML = "<div></div>", r.firstChild.style.width = "5px", t.shrinkWrapBlocks = r.offsetWidth !== 3, n.style.zoom = 1), a.removeChild(n), n = r = s = o = null;
                }), a.removeChild(p), n = r = s = o = u = a = p = null, t;
        }();
                var D = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/, P = /([A-Z])/g;
                v.extend({ cache: {}, deletedIds: [], uuid: 0, expando: "jQuery" + (v.fn.jquery + Math.random()).replace(/\D/g, ""), noData: { embed: !0, object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000", applet: !0 }, hasData: function (e) {
                return e = e.nodeType ? v.cache[e[v.expando]] : e[v.expando], !!e && !B(e);
                }, data: function (e, n, r, i) {
                if (!v.acceptData(e))
                        return;
                        var s, o, u = v.expando, a = typeof n == "string", f = e.nodeType, l = f ? v.cache : e, c = f ? e[u] : e[u] && u;
                        if ((!c || !l[c] || !i && !l[c].data) && a && r === t)
                        return;
                        c || (f ? e[u] = c = v.deletedIds.pop() || v.guid++ : c = u), l[c] || (l[c] = {}, f || (l[c].toJSON = v.noop));
                        if (typeof n == "object" || typeof n == "function")
                        i ? l[c] = v.extend(l[c], n) : l[c].data = v.extend(l[c].data, n);
                        return s = l[c], i || (s.data || (s.data = {}), s = s.data), r !== t && (s[v.camelCase(n)] = r), a ? (o = s[n], o == null && (o = s[v.camelCase(n)])) : o = s, o;
                }, removeData: function (e, t, n) {
                if (!v.acceptData(e))
                        return;
                        var r, i, s, o = e.nodeType, u = o ? v.cache : e, a = o ? e[v.expando] : v.expando;
                        if (!u[a])
                        return;
                        if (t) {
                r = n ? u[a] : u[a].data;
                        if (r) {
                v.isArray(t) || (t in r ? t = [t] : (t = v.camelCase(t), t in r ? t = [t] : t = t.split(" ")));
                        for (i = 0, s = t.length; i < s; i++)
                        delete r[t[i]];
                        if (!(n ? B : v.isEmptyObject)(r))
                        return;
                }
                }
                if (!n) {
                delete u[a].data;
                        if (!B(u[a]))
                        return;
                }
                o ? v.cleanData([e], !0) : v.support.deleteExpando || u != u.window ? delete u[a] : u[a] = null;
                }, _data: function (e, t, n) {
                return v.data(e, t, n, !0);
                }, acceptData: function (e) {
                var t = e.nodeName && v.noData[e.nodeName.toLowerCase()];
                        return !t || t !== !0 && e.getAttribute("classid") === t;
                } }), v.fn.extend({ data: function (e, n) {
        var r, i, s, o, u, a = this[0], f = 0, l = null;
                if (e === t) {
        if (this.length) {
        l = v.data(a);
                if (a.nodeType === 1 && !v._data(a, "parsedAttrs")) {
        s = a.attributes;
                for (u = s.length; f < u; f++)
                o = s[f].name, o.indexOf("data-") || (o = v.camelCase(o.substring(5)), H(a, o, l[o]));
                v._data(a, "parsedAttrs", !0);
        }
        }
        return l;
        }
        return typeof e == "object" ? this.each(function () {
        v.data(this, e);
        }) : (r = e.split(".", 2), r[1] = r[1] ? "." + r[1] : "", i = r[1] + "!", v.access(this, function (n) {
        if (n === t)
                return l = this.triggerHandler("getData" + i, [r[0]]), l === t && a && (l = v.data(a, e), l = H(a, e, l)), l === t && r[1] ? this.data(r[0]) : l;
                r[1] = n, this.each(function () {
        var t = v(this);
                t.triggerHandler("setData" + i, r), v.data(this, e, n), t.triggerHandler("changeData" + i, r);
        });
        }, null, n, arguments.length > 1, null, !1));
        }, removeData: function (e) {
        return this.each(function () {
        v.removeData(this, e);
        });
        } }), v.extend({ queue: function (e, t, n) {
        var r;
                if (e)
                return t = (t || "fx") + "queue", r = v._data(e, t), n && (!r || v.isArray(n) ? r = v._data(e, t, v.makeArray(n)) : r.push(n)), r || [];
        }, dequeue: function (e, t) {
        t = t || "fx";
                var n = v.queue(e, t), r = n.length, i = n.shift(), s = v._queueHooks(e, t), o = function () {
        v.dequeue(e, t);
        };
                i === "inprogress" && (i = n.shift(), r--), i && (t === "fx" && n.unshift("inprogress"), delete s.stop, i.call(e, o, s)), !r && s && s.empty.fire();
        }, _queueHooks: function (e, t) {
        var n = t + "queueHooks";
                return v._data(e, n) || v._data(e, n, { empty: v.Callbacks("once memory").add(function () {
        v.removeData(e, t + "queue", !0), v.removeData(e, n, !0);
        }) });
        } }), v.fn.extend({ queue: function (e, n) {
        var r = 2;
                return typeof e != "string" && (n = e, e = "fx", r--), arguments.length < r ? v.queue(this[0], e) : n === t ? this : this.each(function () {
        var t = v.queue(this, e, n);
                v._queueHooks(this, e), e === "fx" && t[0] !== "inprogress" && v.dequeue(this, e);
        });
        }, dequeue: function (e) {
        return this.each(function () {
        v.dequeue(this, e);
        });
        }, delay: function (e, t) {
        return e = v.fx ? v.fx.speeds[e] || e : e, t = t || "fx", this.queue(t, function (t, n) {
        var r = setTimeout(t, e);
                n.stop = function () {
                clearTimeout(r);
                };
        });
        }, clearQueue: function (e) {
        return this.queue(e || "fx", []);
        }, promise: function (e, n) {
        var r, i = 1, s = v.Deferred(), o = this, u = this.length, a = function () {
        --i || s.resolveWith(o, [o]);
        };
                typeof e != "string" && (n = e, e = t), e = e || "fx";
                while (u--)
                r = v._data(o[u], e + "queueHooks"), r && r.empty && (i++, r.empty.add(a));
                return a(), s.promise(n);
        } });
                var j, F, I, q = /[\t\r\n]/g, R = /\r/g, U = /^(?:button|input)$/i, z = /^(?:button|input|object|select|textarea)$/i, W = /^a(?:rea|)$/i, X = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i, V = v.support.getSetAttribute;
                v.fn.extend({ attr: function (e, t) {
                return v.access(this, v.attr, e, t, arguments.length > 1);
                }, removeAttr: function (e) {
                return this.each(function () {
                v.removeAttr(this, e);
                });
                }, prop: function (e, t) {
                return v.access(this, v.prop, e, t, arguments.length > 1);
                }, removeProp: function (e) {
                return e = v.propFix[e] || e, this.each(function () {
                try {
                this[e] = t, delete this[e];
                }
                catch (n) {
                }
                });
                }, addClass: function (e) {
                var t, n, r, i, s, o, u;
                        if (v.isFunction(e))
                        return this.each(function (t) {
                        v(this).addClass(e.call(this, t, this.className));
                        });
                        if (e && typeof e == "string") {
                t = e.split(y);
                        for (n = 0, r = this.length; n < r; n++) {
                i = this[n];
                        if (i.nodeType === 1)
                        if (!i.className && t.length === 1)
                        i.className = e;
                        else {
                        s = " " + i.className + " ";
                                for (o = 0, u = t.length; o < u; o++)
                                s.indexOf(" " + t[o] + " ") < 0 && (s += t[o] + " ");
                                i.className = v.trim(s);
                        }
                }
                }
                return this;
                }, removeClass: function (e) {
                var n, r, i, s, o, u, a;
                        if (v.isFunction(e))
                        return this.each(function (t) {
                        v(this).removeClass(e.call(this, t, this.className));
                        });
                        if (e && typeof e == "string" || e === t) {
                n = (e || "").split(y);
                        for (u = 0, a = this.length; u < a; u++) {
                i = this[u];
                        if (i.nodeType === 1 && i.className) {
                r = (" " + i.className + " ").replace(q, " ");
                        for (s = 0, o = n.length; s < o; s++)
                        while (r.indexOf(" " + n[s] + " ") >= 0)
                        r = r.replace(" " + n[s] + " ", " ");
                        i.className = e ? v.trim(r) : "";
                }
                }
                }
                return this;
                }, toggleClass: function (e, t) {
                var n = typeof e, r = typeof t == "boolean";
                        return v.isFunction(e) ? this.each(function (n) {
                v(this).toggleClass(e.call(this, n, this.className, t), t);
                }) : this.each(function () {
                if (n === "string") {
                var i, s = 0, o = v(this), u = t, a = e.split(y);
                        while (i = a[s++])
                        u = r ? u : !o.hasClass(i), o[u ? "addClass" : "removeClass"](i);
                }
                else if (n === "undefined" || n === "boolean")
                        this.className && v._data(this, "__className__", this.className), this.className = this.className || e === !1 ? "" : v._data(this, "__className__") || "";
                });
                }, hasClass: function (e) {
                var t = " " + e + " ", n = 0, r = this.length;
                        for (; n < r; n++)
                        if (this[n].nodeType === 1 && (" " + this[n].className + " ").replace(q, " ").indexOf(t) >= 0)
                        return !0;
                        return !1;
                }, val: function (e) {
                var n, r, i, s = this[0];
                        if (!arguments.length) {
                if (s)
                        return n = v.valHooks[s.type] || v.valHooks[s.nodeName.toLowerCase()], n && "get" in n && (r = n.get(s, "value")) !== t ? r : (r = s.value, typeof r == "string" ? r.replace(R, "") : r == null ? "" : r);
                        return;
                }
                return i = v.isFunction(e), this.each(function (r) {
                var s, o = v(this);
                        if (this.nodeType !== 1)
                        return;
                        i ? s = e.call(this, r, o.val()) : s = e, s == null ? s = "" : typeof s == "number" ? s += "" : v.isArray(s) && (s = v.map(s, function (e) {
                return e == null ? "" : e + "";
                })), n = v.valHooks[this.type] || v.valHooks[this.nodeName.toLowerCase()];
                        if (!n || !("set" in n) || n.set(this, s, "value") === t)
                        this.value = s;
                });
                } }), v.extend({ valHooks: { option: { get: function (e) {
        var t = e.attributes.value;
                return !t || t.specified ? e.value : e.text;
        } }, select: { get: function (e) {
        var t, n, r = e.options, i = e.selectedIndex, s = e.type === "select-one" || i < 0, o = s ? null : [], u = s ? i + 1 : r.length, a = i < 0 ? u : s ? i : 0;
                for (; a < u; a++) {
        n = r[a];
                if ((n.selected || a === i) && (v.support.optDisabled ? !n.disabled : n.getAttribute("disabled") === null) && (!n.parentNode.disabled || !v.nodeName(n.parentNode, "optgroup"))) {
        t = v(n).val();
                if (s)
                return t;
                o.push(t);
        }
        }
        return o;
        }, set: function (e, t) {
        var n = v.makeArray(t);
                return v(e).find("option").each(function () {
        this.selected = v.inArray(v(this).val(), n) >= 0;
        }), n.length || (e.selectedIndex = - 1), n;
        } } }, attrFn: {}, attr: function (e, n, r, i) {
        var s, o, u, a = e.nodeType;
                if (!e || a === 3 || a === 8 || a === 2)
                return;
                if (i && v.isFunction(v.fn[n]))
                return v(e)[n](r);
                if (typeof e.getAttribute == "undefined")
                return v.prop(e, n, r);
                u = a !== 1 || !v.isXMLDoc(e), u && (n = n.toLowerCase(), o = v.attrHooks[n] || (X.test(n) ? F : j));
                if (r !== t) {
        if (r === null) {
        v.removeAttr(e, n);
                return;
        }
        return o && "set" in o && u && (s = o.set(e, r, n)) !== t ? s : (e.setAttribute(n, r + ""), r);
        }
        return o && "get" in o && u && (s = o.get(e, n)) !== null ? s : (s = e.getAttribute(n), s === null ? t : s);
        }, removeAttr: function (e, t) {
        var n, r, i, s, o = 0;
                if (t && e.nodeType === 1) {
        r = t.split(y);
                for (; o < r.length; o++)
                i = r[o], i && (n = v.propFix[i] || i, s = X.test(i), s || v.attr(e, i, ""), e.removeAttribute(V ? i : n), s && n in e && (e[n] = !1));
        }
        }, attrHooks: { type: { set: function (e, t) {
        if (U.test(e.nodeName) && e.parentNode)
                v.error("type property can't be changed");
                else if (!v.support.radioValue && t === "radio" && v.nodeName(e, "input")) {
        var n = e.value;
                return e.setAttribute("type", t), n && (e.value = n), t;
        }
        } }, value: { get: function (e, t) {
        return j && v.nodeName(e, "button") ? j.get(e, t) : t in e ? e.value : null;
        }, set: function (e, t, n) {
        if (j && v.nodeName(e, "button"))
                return j.set(e, t, n);
                e.value = t;
        } } }, propFix: { tabindex: "tabIndex", readonly: "readOnly", "for": "htmlFor", "class": "className", maxlength: "maxLength", cellspacing: "cellSpacing", cellpadding: "cellPadding", rowspan: "rowSpan", colspan: "colSpan", usemap: "useMap", frameborder: "frameBorder", contenteditable: "contentEditable" }, prop: function (e, n, r) {
        var i, s, o, u = e.nodeType;
                if (!e || u === 3 || u === 8 || u === 2)
                return;
                return o = u !== 1 || !v.isXMLDoc(e), o && (n = v.propFix[n] || n, s = v.propHooks[n]), r !== t ? s && "set" in s && (i = s.set(e, r, n)) !== t ? i : e[n] = r : s && "get" in s && (i = s.get(e, n)) !== null ? i : e[n];
        }, propHooks: { tabIndex: { get: function (e) {
        var n = e.getAttributeNode("tabindex");
                return n && n.specified ? parseInt(n.value, 10) : z.test(e.nodeName) || W.test(e.nodeName) && e.href ? 0 : t;
        } } } }), F = { get: function (e, n) {
        var r, i = v.prop(e, n);
                return i === !0 || typeof i != "boolean" && (r = e.getAttributeNode(n)) && r.nodeValue !== !1 ? n.toLowerCase() : t;
        }, set: function (e, t, n) {
        var r;
                return t === !1 ? v.removeAttr(e, n) : (r = v.propFix[n] || n, r in e && (e[r] = !0), e.setAttribute(n, n.toLowerCase())), n;
        } }, V || (I = { name: !0, id: !0, coords: !0 }, j = v.valHooks.button = { get: function (e, n) {
        var r;
                return r = e.getAttributeNode(n), r && (I[n] ? r.value !== "" : r.specified) ? r.value : t;
        }, set: function (e, t, n) {
        var r = e.getAttributeNode(n);
                return r || (r = i.createAttribute(n), e.setAttributeNode(r)), r.value = t + "";
        } }, v.each(["width", "height"], function (e, t) {
        v.attrHooks[t] = v.extend(v.attrHooks[t], { set: function (e, n) {
        if (n === "")
                return e.setAttribute(t, "auto"), n;
        } });
        }), v.attrHooks.contenteditable = { get: j.get, set: function (e, t, n) {
        t === "" && (t = "false"), j.set(e, t, n);
        } }), v.support.hrefNormalized || v.each(["href", "src", "width", "height"], function (e, n) {
        v.attrHooks[n] = v.extend(v.attrHooks[n], { get: function (e) {
        var r = e.getAttribute(n, 2);
                return r === null ? t : r;
        } });
        }), v.support.style || (v.attrHooks.style = { get: function (e) {
        return e.style.cssText.toLowerCase() || t;
        }, set: function (e, t) {
        return e.style.cssText = t + "";
        } }), v.support.optSelected || (v.propHooks.selected = v.extend(v.propHooks.selected, { get: function (e) {
        var t = e.parentNode;
                return t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex), null;
        } })), v.support.enctype || (v.propFix.enctype = "encoding"), v.support.checkOn || v.each(["radio", "checkbox"], function () {
        v.valHooks[this] = { get: function (e) {
        return e.getAttribute("value") === null ? "on" : e.value;
        } };
        }), v.each(["radio", "checkbox"], function () {
        v.valHooks[this] = v.extend(v.valHooks[this], { set: function (e, t) {
        if (v.isArray(t))
                return e.checked = v.inArray(v(e).val(), t) >= 0;
        } });
        });
                var $ = /^(?:textarea|input|select)$/i, J = /^([^\.]*|)(?:\.(.+)|)$/, K = /(?:^|\s)hover(\.\S+|)\b/, Q = /^key/, G = /^(?:mouse|contextmenu)|click/, Y = /^(?:focusinfocus|focusoutblur)$/, Z = function (e) {
                return v.event.special.hover ? e : e.replace(K, "mouseenter$1 mouseleave$1");
                };
                v.event = { add: function (e, n, r, i, s) {
                var o, u, a, f, l, c, h, p, d, m, g;
                        if (e.nodeType === 3 || e.nodeType === 8 || !n || !r || !(o = v._data(e)))
                        return;
                        r.handler && (d = r, r = d.handler, s = d.selector), r.guid || (r.guid = v.guid++), a = o.events, a || (o.events = a = {}), u = o.handle, u || (o.handle = u = function (e) {
                return typeof v == "undefined" || !!e && v.event.triggered === e.type ? t : v.event.dispatch.apply(u.elem, arguments);
                }, u.elem = e), n = v.trim(Z(n)).split(" ");
                        for (f = 0; f < n.length; f++) {
                l = J.exec(n[f]) || [], c = l[1], h = (l[2] || "").split(".").sort(), g = v.event.special[c] || {}, c = (s ? g.delegateType : g.bindType) || c, g = v.event.special[c] || {}, p = v.extend({ type: c, origType: l[1], data: i, handler: r, guid: r.guid, selector: s, needsContext: s && v.expr.match.needsContext.test(s), namespace: h.join(".") }, d), m = a[c];
                        if (!m) {
                m = a[c] = [], m.delegateCount = 0;
                        if (!g.setup || g.setup.call(e, i, h, u) === !1)
                        e.addEventListener ? e.addEventListener(c, u, !1) : e.attachEvent && e.attachEvent("on" + c, u);
                }
                g.add && (g.add.call(e, p), p.handler.guid || (p.handler.guid = r.guid)), s ? m.splice(m.delegateCount++, 0, p) : m.push(p), v.event.global[c] = !0;
                }
                e = null;
                }, global: {}, remove: function (e, t, n, r, i) {
                var s, o, u, a, f, l, c, h, p, d, m, g = v.hasData(e) && v._data(e);
                        if (!g || !(h = g.events))
                        return;
                        t = v.trim(Z(t || "")).split(" ");
                        for (s = 0; s < t.length; s++) {
                o = J.exec(t[s]) || [], u = a = o[1], f = o[2];
                        if (!u) {
                for (u in h)
                        v.event.remove(e, u + t[s], n, r, !0);
                        continue;
                }
                p = v.event.special[u] || {}, u = (r ? p.delegateType : p.bindType) || u, d = h[u] || [], l = d.length, f = f ? new RegExp("(^|\\.)" + f.split(".").sort().join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
                        for (c = 0; c < d.length; c++)
                        m = d[c], (i || a === m.origType) && (!n || n.guid === m.guid) && (!f || f.test(m.namespace)) && (!r || r === m.selector || r === "**" && m.selector) && (d.splice(c--, 1), m.selector && d.delegateCount--, p.remove && p.remove.call(e, m));
                        d.length === 0 && l !== d.length && ((!p.teardown || p.teardown.call(e, f, g.handle) === !1) && v.removeEvent(e, u, g.handle), delete h[u]);
                }
                v.isEmptyObject(h) && (delete g.handle, v.removeData(e, "events", !0));
                }, customEvent: { getData: !0, setData: !0, changeData: !0 }, trigger: function (n, r, s, o) {
                if (!s || s.nodeType !== 3 && s.nodeType !== 8) {
                var u, a, f, l, c, h, p, d, m, g, y = n.type || n, b = [];
                        if (Y.test(y + v.event.triggered))
                        return;
                        y.indexOf("!") >= 0 && (y = y.slice(0, - 1), a = !0), y.indexOf(".") >= 0 && (b = y.split("."), y = b.shift(), b.sort());
                        if ((!s || v.event.customEvent[y]) && !v.event.global[y])
                        return;
                        n = typeof n == "object" ? n[v.expando] ? n : new v.Event(y, n) : new v.Event(y), n.type = y, n.isTrigger = !0, n.exclusive = a, n.namespace = b.join("."), n.namespace_re = n.namespace ? new RegExp("(^|\\.)" + b.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, h = y.indexOf(":") < 0 ? "on" + y : "";
                        if (!s) {
                u = v.cache;
                        for (f in u)
                        u[f].events && u[f].events[y] && v.event.trigger(n, r, u[f].handle.elem, !0);
                        return;
                }
                n.result = t, n.target || (n.target = s), r = r != null ? v.makeArray(r) : [], r.unshift(n), p = v.event.special[y] || {};
                        if (p.trigger && p.trigger.apply(s, r) === !1)
                        return;
                        m = [[s, p.bindType || y]];
                        if (!o && !p.noBubble && !v.isWindow(s)) {
                g = p.delegateType || y, l = Y.test(g + y) ? s : s.parentNode;
                        for (c = s; l; l = l.parentNode)
                        m.push([l, g]), c = l;
                        c === (s.ownerDocument || i) && m.push([c.defaultView || c.parentWindow || e, g]);
                }
                for (f = 0; f < m.length && !n.isPropagationStopped(); f++)
                        l = m[f][0], n.type = m[f][1], d = (v._data(l, "events") || {})[n.type] && v._data(l, "handle"), d && d.apply(l, r), d = h && l[h], d && v.acceptData(l) && d.apply && d.apply(l, r) === !1 && n.preventDefault();
                        return n.type = y, !o && !n.isDefaultPrevented() && (!p._default || p._default.apply(s.ownerDocument, r) === !1) && (y !== "click" || !v.nodeName(s, "a")) && v.acceptData(s) && h && s[y] && (y !== "focus" && y !== "blur" || n.target.offsetWidth !== 0) && !v.isWindow(s) && (c = s[h], c && (s[h] = null), v.event.triggered = y, s[y](), v.event.triggered = t, c && (s[h] = c)), n.result;
                }
                return;
                }, dispatch: function (n) {
                n = v.event.fix(n || e.event);
                        var r, i, s, o, u, a, f, c, h, p, d = (v._data(this, "events") || {})[n.type] || [], m = d.delegateCount, g = l.call(arguments), y = !n.exclusive && !n.namespace, b = v.event.special[n.type] || {}, w = [];
                        g[0] = n, n.delegateTarget = this;
                        if (b.preDispatch && b.preDispatch.call(this, n) === !1)
                        return;
                        if (m && (!n.button || n.type !== "click"))
                        for (s = n.target; s != this; s = s.parentNode || this)
                        if (s.disabled !== !0 || n.type !== "click") {
                u = {}, f = [];
                        for (r = 0; r < m; r++)
                        c = d[r], h = c.selector, u[h] === t && (u[h] = c.needsContext ? v(h, this).index(s) >= 0 : v.find(h, this, null, [s]).length), u[h] && f.push(c);
                        f.length && w.push({ elem: s, matches: f });
                }
                d.length > m && w.push({ elem: this, matches: d.slice(m) });
                        for (r = 0; r < w.length && !n.isPropagationStopped(); r++) {
                a = w[r], n.currentTarget = a.elem;
                        for (i = 0; i < a.matches.length && !n.isImmediatePropagationStopped(); i++) {
                c = a.matches[i];
                        if (y || !n.namespace && !c.namespace || n.namespace_re && n.namespace_re.test(c.namespace))
                        n.data = c.data, n.handleObj = c, o = ((v.event.special[c.origType] || {}).handle || c.handler).apply(a.elem, g), o !== t && (n.result = o, o === !1 && (n.preventDefault(), n.stopPropagation()));
                }
                }
                return b.postDispatch && b.postDispatch.call(this, n), n.result;
                }, props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "), fixHooks: {}, keyHooks: { props: "char charCode key keyCode".split(" "), filter: function (e, t) {
                return e.which == null && (e.which = t.charCode != null ? t.charCode : t.keyCode), e;
                } }, mouseHooks: { props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "), filter: function (e, n) {
                var r, s, o, u = n.button, a = n.fromElement;
                        return e.pageX == null && n.clientX != null && (r = e.target.ownerDocument || i, s = r.documentElement, o = r.body, e.pageX = n.clientX + (s && s.scrollLeft || o && o.scrollLeft || 0) - (s && s.clientLeft || o && o.clientLeft || 0), e.pageY = n.clientY + (s && s.scrollTop || o && o.scrollTop || 0) - (s && s.clientTop || o && o.clientTop || 0)), !e.relatedTarget && a && (e.relatedTarget = a === e.target ? n.toElement : a), !e.which && u !== t && (e.which = u & 1 ? 1 : u & 2 ? 3 : u & 4 ? 2 : 0), e;
                } }, fix: function (e) {
                if (e[v.expando])
                        return e;
                        var t, n, r = e, s = v.event.fixHooks[e.type] || {}, o = s.props ? this.props.concat(s.props) : this.props;
                        e = v.Event(r);
                        for (t = o.length; t; )
                        n = o[--t], e[n] = r[n];
                        return e.target || (e.target = r.srcElement || i), e.target.nodeType === 3 && (e.target = e.target.parentNode), e.metaKey = !!e.metaKey, s.filter ? s.filter(e, r) : e;
                }, special: { load: { noBubble: !0 }, focus: { delegateType: "focusin" }, blur: { delegateType: "focusout" }, beforeunload: { setup: function (e, t, n) {
                v.isWindow(this) && (this.onbeforeunload = n);
                }, teardown: function (e, t) {
                this.onbeforeunload === t && (this.onbeforeunload = null);
                } } }, simulate: function (e, t, n, r) {
                var i = v.extend(new v.Event, n, { type: e, isSimulated: !0, originalEvent: {} });
                        r ? v.event.trigger(i, null, t) : v.event.dispatch.call(t, i), i.isDefaultPrevented() && n.preventDefault();
                } }, v.event.handle = v.event.dispatch, v.removeEvent = i.removeEventListener ? function (e, t, n) {
        e.removeEventListener && e.removeEventListener(t, n, !1);
        } : function (e, t, n) {
        var r = "on" + t;
                e.detachEvent && (typeof e[r] == "undefined" && (e[r] = null), e.detachEvent(r, n));
        }, v.Event = function (e, t) {
        if (!(this instanceof v.Event))
                return new v.Event(e, t);
                e && e.type ? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || e.returnValue === !1 || e.getPreventDefault && e.getPreventDefault() ? tt : et) : this.type = e, t && v.extend(this, t), this.timeStamp = e && e.timeStamp || v.now(), this[v.expando] = !0;
        }, v.Event.prototype = { preventDefault: function () {
        this.isDefaultPrevented = tt;
                var e = this.originalEvent;
                if (!e)
                return;
                e.preventDefault ? e.preventDefault() : e.returnValue = !1;
        }, stopPropagation: function () {
        this.isPropagationStopped = tt;
                var e = this.originalEvent;
                if (!e)
                return;
                e.stopPropagation && e.stopPropagation(), e.cancelBubble = !0;
        }, stopImmediatePropagation: function () {
        this.isImmediatePropagationStopped = tt, this.stopPropagation();
        }, isDefaultPrevented: et, isPropagationStopped: et, isImmediatePropagationStopped: et }, v.each({ mouseenter: "mouseover", mouseleave: "mouseout" }, function (e, t) {
        v.event.special[e] = { delegateType: t, bindType: t, handle: function (e) {
        var n, r = this, i = e.relatedTarget, s = e.handleObj, o = s.selector;
                if (!i || i !== r && !v.contains(r, i))
                e.type = s.origType, n = s.handler.apply(this, arguments), e.type = t;
                return n;
        } };
        }), v.support.submitBubbles || (v.event.special.submit = { setup: function () {
        if (v.nodeName(this, "form"))
                return !1;
                v.event.add(this, "click._submit keypress._submit", function (e) {
                var n = e.target, r = v.nodeName(n, "input") || v.nodeName(n, "button") ? n.form : t;
                        r && !v._data(r, "_submit_attached") && (v.event.add(r, "submit._submit", function (e) {
                e._submit_bubble = !0;
                }), v._data(r, "_submit_attached", !0));
                });
        }, postDispatch: function (e) {
        e._submit_bubble && (delete e._submit_bubble, this.parentNode && !e.isTrigger && v.event.simulate("submit", this.parentNode, e, !0));
        }, teardown: function () {
        if (v.nodeName(this, "form"))
                return !1;
                v.event.remove(this, "._submit");
        } }), v.support.changeBubbles || (v.event.special.change = { setup: function () {
        if ($.test(this.nodeName)) {
        if (this.type === "checkbox" || this.type === "radio")
                v.event.add(this, "propertychange._change", function (e) {
                e.originalEvent.propertyName === "checked" && (this._just_changed = !0);
                }), v.event.add(this, "click._change", function (e) {
        this._just_changed && !e.isTrigger && (this._just_changed = !1), v.event.simulate("change", this, e, !0);
        });
                return !1;
        }
        v.event.add(this, "beforeactivate._change", function (e) {
        var t = e.target;
                $.test(t.nodeName) && !v._data(t, "_change_attached") && (v.event.add(t, "change._change", function (e) {
        this.parentNode && !e.isSimulated && !e.isTrigger && v.event.simulate("change", this.parentNode, e, !0);
        }), v._data(t, "_change_attached", !0));
        });
        }, handle: function (e) {
        var t = e.target;
                if (this !== t || e.isSimulated || e.isTrigger || t.type !== "radio" && t.type !== "checkbox")
                return e.handleObj.handler.apply(this, arguments);
        }, teardown: function () {
        return v.event.remove(this, "._change"), !$.test(this.nodeName);
        } }), v.support.focusinBubbles || v.each({ focus: "focusin", blur: "focusout" }, function (e, t) {
        var n = 0, r = function (e) {
        v.event.simulate(t, e.target, v.event.fix(e), !0);
        };
                v.event.special[t] = { setup: function () {
        n++ === 0 && i.addEventListener(e, r, !0);
        }, teardown: function () {
        --n === 0 && i.removeEventListener(e, r, !0);
        } };
        }), v.fn.extend({ on: function (e, n, r, i, s) {
        var o, u;
                if (typeof e == "object") {
        typeof n != "string" && (r = r || n, n = t);
                for (u in e)
                this.on(u, n, r, e[u], s);
                return this;
        }
        r == null && i == null ? (i = n, r = n = t) : i == null && (typeof n == "string" ? (i = r, r = t) : (i = r, r = n, n = t));
                if (i === !1)
                i = et;
                else if (!i)
                return this;
                return s === 1 && (o = i, i = function (e) {
                return v().off(e), o.apply(this, arguments);
                }, i.guid = o.guid || (o.guid = v.guid++)), this.each(function () {
        v.event.add(this, e, i, r, n);
        });
        }, one: function (e, t, n, r) {
        return this.on(e, t, n, r, 1);
        }, off: function (e, n, r) {
        var i, s;
                if (e && e.preventDefault && e.handleObj)
                return i = e.handleObj, v(e.delegateTarget).off(i.namespace ? i.origType + "." + i.namespace : i.origType, i.selector, i.handler), this;
                if (typeof e == "object") {
        for (s in e)
                this.off(s, n, e[s]);
                return this;
        }
        if (n === !1 || typeof n == "function")
                r = n, n = t;
                return r === !1 && (r = et), this.each(function () {
        v.event.remove(this, e, r, n);
        });
        }, bind: function (e, t, n) {
        return this.on(e, null, t, n);
        }, unbind: function (e, t) {
        return this.off(e, null, t);
        }, live: function (e, t, n) {
        return v(this.context).on(e, this.selector, t, n), this;
        }, die: function (e, t) {
        return v(this.context).off(e, this.selector || "**", t), this;
        }, delegate: function (e, t, n, r) {
        return this.on(t, e, n, r);
        }, undelegate: function (e, t, n) {
        return arguments.length === 1 ? this.off(e, "**") : this.off(t, e || "**", n);
        }, trigger: function (e, t) {
        return this.each(function () {
        v.event.trigger(e, t, this);
        });
        }, triggerHandler: function (e, t) {
        if (this[0])
                return v.event.trigger(e, t, this[0], !0);
        }, toggle: function (e) {
        var t = arguments, n = e.guid || v.guid++, r = 0, i = function (n) {
        var i = (v._data(this, "lastToggle" + e.guid) || 0) % r;
                return v._data(this, "lastToggle" + e.guid, i + 1), n.preventDefault(), t[i].apply(this, arguments) || !1;
        };
                i.guid = n;
                while (r < t.length)
                t[r++].guid = n;
                return this.click(i);
        }, hover: function (e, t) {
        return this.mouseenter(e).mouseleave(t || e);
        } }), v.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function (e, t) {
        v.fn[t] = function (e, n) {
        return n == null && (n = e, e = null), arguments.length > 0 ? this.on(t, null, e, n) : this.trigger(t);
        }, Q.test(t) && (v.event.fixHooks[t] = v.event.keyHooks), G.test(t) && (v.event.fixHooks[t] = v.event.mouseHooks);
        }), function (e, t) {
        function nt(e, t, n, r) {
        n = n || [], t = t || g;
                var i, s, a, f, l = t.nodeType;
                if (!e || typeof e != "string")
                return n;
                if (l !== 1 && l !== 9)
                return [];
                a = o(t);
                if (!a && !r)
                if (i = R.exec(e))
                if (f = i[1]) {
        if (l === 9) {
        s = t.getElementById(f);
                if (!s || !s.parentNode)
                return n;
                if (s.id === f)
                return n.push(s), n;
        }
        else if (t.ownerDocument && (s = t.ownerDocument.getElementById(f)) && u(t, s) && s.id === f)
                return n.push(s), n;
        }
        else {
        if (i[2])
                return S.apply(n, x.call(t.getElementsByTagName(e), 0)), n;
                if ((f = i[3]) && Z && t.getElementsByClassName)
                return S.apply(n, x.call(t.getElementsByClassName(f), 0)), n;
        }
        return vt(e.replace(j, "$1"), t, n, r, a);
        }
        function rt(e) {
        return function (t) {
        var n = t.nodeName.toLowerCase();
                return n === "input" && t.type === e;
        };
        }
        function it(e) {
        return function (t) {
        var n = t.nodeName.toLowerCase();
                return (n === "input" || n === "button") && t.type === e;
        };
        }
        function st(e) {
        return N(function (t) {
        return t = + t, N(function (n, r) {
        var i, s = e([], n.length, t), o = s.length;
                while (o--)
                n[i = s[o]] && (n[i] = !(r[i] = n[i]));
        });
        });
        }
        function ot(e, t, n) {
        if (e === t)
                return n;
                var r = e.nextSibling;
                while (r) {
        if (r === t)
                return - 1;
                r = r.nextSibling;
        }
        return 1;
        }
        function ut(e, t) {
        var n, r, s, o, u, a, f, l = L[d][e + " "];
                if (l)
                return t ? 0 : l.slice(0);
                u = e, a = [], f = i.preFilter;
                while (u) {
        if (!n || (r = F.exec(u)))
                r && (u = u.slice(r[0].length) || u), a.push(s = []);
                n = !1;
                if (r = I.exec(u))
                s.push(n = new m(r.shift())), u = u.slice(n.length), n.type = r[0].replace(j, " ");
                for (o in i.filter)
                (r = J[o].exec(u)) && (!f[o] || (r = f[o](r))) && (s.push(n = new m(r.shift())), u = u.slice(n.length), n.type = o, n.matches = r);
                if (!n)
                break;
        }
        return t ? u.length : u ? nt.error(e) : L(e, a).slice(0);
        }
        function at(e, t, r) {
        var i = t.dir, s = r && t.dir === "parentNode", o = w++;
                return t.first ? function (t, n, r) {
                while (t = t[i])
                        if (s || t.nodeType === 1)
                        return e(t, n, r);
                } : function (t, r, u) {
        if (!u) {
        var a, f = b + " " + o + " ", l = f + n;
                while (t = t[i])
                if (s || t.nodeType === 1) {
        if ((a = t[d]) === l)
                return t.sizset;
                if (typeof a == "string" && a.indexOf(f) === 0) {
        if (t.sizset)
                return t;
        }
        else {
        t[d] = l;
                if (e(t, r, u))
                return t.sizset = !0, t;
                t.sizset = !1;
        }
        }
        }
        else
                while (t = t[i])
                if (s || t.nodeType === 1)
                if (e(t, r, u))
                return t;
        };
        }
        function ft(e) {
        return e.length > 1 ? function (t, n, r) {
        var i = e.length;
                while (i--)
                if (!e[i](t, n, r))
                return !1;
                return !0;
        } : e[0];
        }
        function lt(e, t, n, r, i) {
        var s, o = [], u = 0, a = e.length, f = t != null;
                for (; u < a; u++)
                if (s = e[u])
                if (!n || n(s, r, i))
                o.push(s), f && t.push(u);
                return o;
        }
        function ct(e, t, n, r, i, s) {
        return r && !r[d] && (r = ct(r)), i && !i[d] && (i = ct(i, s)), N(function (s, o, u, a) {
        var f, l, c, h = [], p = [], d = o.length, v = s || dt(t || "*", u.nodeType ? [u] : u, []), m = e && (s || !t) ? lt(v, h, e, u, a) : v, g = n ? i || (s ? e : d || r) ? [] : o : m;
                n && n(m, g, u, a);
                if (r) {
        f = lt(g, p), r(f, [], u, a), l = f.length;
                while (l--)
                if (c = f[l])
                g[p[l]] = !(m[p[l]] = c);
        }
        if (s) {
        if (i || e) {
        if (i) {
        f = [], l = g.length;
                while (l--)
                (c = g[l]) && f.push(m[l] = c);
                i(null, g = [], f, a);
        }
        l = g.length;
                while (l--)
                (c = g[l]) && (f = i ? T.call(s, c) : h[l]) > - 1 && (s[f] = !(o[f] = c));
        }
        }
        else
                g = lt(g === o ? g.splice(d, g.length) : g), i ? i(null, o, g, a) : S.apply(o, g);
        });
        }
        function ht(e) {
        var t, n, r, s = e.length, o = i.relative[e[0].type], u = o || i.relative[" "], a = o ? 1 : 0, f = at(function (e) {
        return e === t;
        }, u, !0), l = at(function (e) {
        return T.call(t, e) > - 1;
        }, u, !0), h = [function (e, n, r) {
        return !o && (r || n !== c) || ((t = n).nodeType ? f(e, n, r) : l(e, n, r));
        }];
                for (; a < s; a++)
                if (n = i.relative[e[a].type])
                h = [at(ft(h), n)];
                else {
                n = i.filter[e[a].type].apply(null, e[a].matches);
                        if (n[d]) {
                r = ++a;
                        for (; r < s; r++)
                        if (i.relative[e[r].type])
                        break;
                        return ct(a > 1 && ft(h), a > 1 && e.slice(0, a - 1).join("").replace(j, "$1"), n, a < r && ht(e.slice(a, r)), r < s && ht(e = e.slice(r)), r < s && e.join(""));
                }
                h.push(n);
                }
        return ft(h);
        }
        function pt(e, t) {
        var r = t.length > 0, s = e.length > 0, o = function (u, a, f, l, h) {
        var p, d, v, m = [], y = 0, w = "0", x = u && [], T = h != null, N = c, C = u || s && i.find.TAG("*", h && a.parentNode || a), k = b += N == null ? 1 : Math.E;
                T && (c = a !== g && a, n = o.el);
                for (; (p = C[w]) != null; w++) {
        if (s && p) {
        for (d = 0; v = e[d]; d++)
                if (v(p, a, f)) {
        l.push(p);
                break;
        }
        T && (b = k, n = ++o.el);
        }
        r && ((p = !v && p) && y--, u && x.push(p));
        }
        y += w;
                if (r && w !== y) {
        for (d = 0; v = t[d]; d++)
                v(x, m, a, f);
                if (u) {
        if (y > 0)
                while (w--)
                !x[w] && !m[w] && (m[w] = E.call(l));
                m = lt(m);
        }
        S.apply(l, m), T && !u && m.length > 0 && y + t.length > 1 && nt.uniqueSort(l);
        }
        return T && (b = k, c = N), x;
        };
                return o.el = 0, r ? N(o) : o;
        }
        function dt(e, t, n) {
        var r = 0, i = t.length;
                for (; r < i; r++)
                nt(e, t[r], n);
                return n;
        }
        function vt(e, t, n, r, s) {
        var o, u, f, l, c, h = ut(e), p = h.length;
                if (!r && h.length === 1) {
        u = h[0] = h[0].slice(0);
                if (u.length > 2 && (f = u[0]).type === "ID" && t.nodeType === 9 && !s && i.relative[u[1].type]) {
        t = i.find.ID(f.matches[0].replace($, ""), t, s)[0];
                if (!t)
                return n;
                e = e.slice(u.shift().length);
        }
        for (o = J.POS.test(e) ? - 1 : u.length - 1; o >= 0; o--) {
        f = u[o];
                if (i.relative[l = f.type])
                break;
                if (c = i.find[l])
                if (r = c(f.matches[0].replace($, ""), z.test(u[0].type) && t.parentNode || t, s)) {
        u.splice(o, 1), e = r.length && u.join("");
                if (!e)
                return S.apply(n, x.call(r, 0)), n;
                break;
        }
        }
        }
        return a(e, h)(r, t, s, n, z.test(e)), n;
        }
        function mt() {
        }
        var n, r, i, s, o, u, a, f, l, c, h = !0, p = "undefined", d = ("sizcache" + Math.random()).replace(".", ""), m = String, g = e.document, y = g.documentElement, b = 0, w = 0, E = [].pop, S = [].push, x = [].slice, T = [].indexOf || function (e) {
        var t = 0, n = this.length;
                for (; t < n; t++)
                if (this[t] === e)
                return t;
                return - 1;
        }, N = function (e, t) {
        return e[d] = t == null || t, e;
        }, C = function () {
        var e = {}, t = [];
                return N(function (n, r) {
                return t.push(n) > i.cacheLength && delete e[t.shift()], e[n + " "] = r;
                }, e);
        }, k = C(), L = C(), A = C(), O = "[\\x20\\t\\r\\n\\f]", M = "(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+", _ = M.replace("w", "w#"), D = "([*^$|!~]?=)", P = "\\[" + O + "*(" + M + ")" + O + "*(?:" + D + O + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + _ + ")|)|)" + O + "*\\]", H = ":(" + M + ")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:" + P + ")|[^:]|\\\\.)*|.*))\\)|)", B = ":(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + O + "*((?:-\\d)?\\d*)" + O + "*\\)|)(?=[^-]|$)", j = new RegExp("^" + O + "+|((?:^|[^\\\\])(?:\\\\.)*)" + O + "+$", "g"), F = new RegExp("^" + O + "*," + O + "*"), I = new RegExp("^" + O + "*([\\x20\\t\\r\\n\\f>+~])" + O + "*"), q = new RegExp(H), R = /^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/, U = /^:not/, z = /[\x20\t\r\n\f]*[+~]/, W = /:not\($/, X = /h\d/i, V = /input|select|textarea|button/i, $ = /\\(?!\\)/g, J = { ID: new RegExp("^#(" + M + ")"), CLASS: new RegExp("^\\.(" + M + ")"), NAME: new RegExp("^\\[name=['\"]?(" + M + ")['\"]?\\]"), TAG: new RegExp("^(" + M.replace("w", "w*") + ")"), ATTR: new RegExp("^" + P), PSEUDO: new RegExp("^" + H), POS: new RegExp(B, "i"), CHILD: new RegExp("^:(only|nth|first|last)-child(?:\\(" + O + "*(even|odd|(([+-]|)(\\d*)n|)" + O + "*(?:([+-]|)" + O + "*(\\d+)|))" + O + "*\\)|)", "i"), needsContext: new RegExp("^" + O + "*[>+~]|" + B, "i") }, K = function (e) {
        var t = g.createElement("div");
                try {
                return e(t);
                }
        catch (n) {
        return !1;
        }
        finally {
        t = null;
        }
        }, Q = K(function (e) {
        return e.appendChild(g.createComment("")), !e.getElementsByTagName("*").length;
        }), G = K(function (e) {
        return e.innerHTML = "<a href='#'></a>", e.firstChild && typeof e.firstChild.getAttribute !== p && e.firstChild.getAttribute("href") === "#";
        }), Y = K(function (e) {
        e.innerHTML = "<select></select>";
                var t = typeof e.lastChild.getAttribute("multiple");
                return t !== "boolean" && t !== "string";
        }), Z = K(function (e) {
        return e.innerHTML = "<div class='hidden e'></div><div class='hidden'></div>", !e.getElementsByClassName || !e.getElementsByClassName("e").length ? !1 : (e.lastChild.className = "e", e.getElementsByClassName("e").length === 2);
        }), et = K(function (e) {
        e.id = d + 0, e.innerHTML = "<a name='" + d + "'></a><div name='" + d + "'></div>", y.insertBefore(e, y.firstChild);
                var t = g.getElementsByName && g.getElementsByName(d).length === 2 + g.getElementsByName(d + 0).length;
                return r = !g.getElementById(d), y.removeChild(e), t;
        });
                try {
                x.call(y.childNodes, 0)[0].nodeType;
                }
        catch (tt) {
        x = function (e) {
        var t, n = [];
                for (; t = this[e]; e++)
                n.push(t);
                return n;
        };
        }
        nt.matches = function (e, t) {
        return nt(e, null, null, t);
        }, nt.matchesSelector = function (e, t) {
        return nt(t, null, null, [e]).length > 0;
        }, s = nt.getText = function (e) {
        var t, n = "", r = 0, i = e.nodeType;
                if (i) {
        if (i === 1 || i === 9 || i === 11) {
        if (typeof e.textContent == "string")
                return e.textContent;
                for (e = e.firstChild; e; e = e.nextSibling)
                n += s(e);
        }
        else if (i === 3 || i === 4)
                return e.nodeValue;
        }
        else
                for (; t = e[r]; r++)
                n += s(t);
                return n;
        }, o = nt.isXML = function (e) {
        var t = e && (e.ownerDocument || e).documentElement;
                return t ? t.nodeName !== "HTML" : !1;
        }, u = nt.contains = y.contains ? function (e, t) {
        var n = e.nodeType === 9 ? e.documentElement : e, r = t && t.parentNode;
                return e === r || !!(r && r.nodeType === 1 && n.contains && n.contains(r));
        } : y.compareDocumentPosition ? function (e, t) {
        return t && !!(e.compareDocumentPosition(t) & 16);
        } : function (e, t) {
        while (t = t.parentNode)
                if (t === e)
                return !0;
                return !1;
        }, nt.attr = function (e, t) {
        var n, r = o(e);
                return r || (t = t.toLowerCase()), (n = i.attrHandle[t]) ? n(e) : r || Y ? e.getAttribute(t) : (n = e.getAttributeNode(t), n ? typeof e[t] == "boolean" ? e[t] ? t : null : n.specified ? n.value : null : null);
        }, i = nt.selectors = { cacheLength: 50, createPseudo: N, match: J, attrHandle: G ? {} : { href: function (e) {
        return e.getAttribute("href", 2);
        }, type: function (e) {
        return e.getAttribute("type");
        } }, find: { ID: r ? function (e, t, n) {
        if (typeof t.getElementById !== p && !n) {
        var r = t.getElementById(e);
                return r && r.parentNode ? [r] : [];
        }
        } : function (e, n, r) {
        if (typeof n.getElementById !== p && !r) {
        var i = n.getElementById(e);
                return i ? i.id === e || typeof i.getAttributeNode !== p && i.getAttributeNode("id").value === e ? [i] : t : [];
        }
        }, TAG: Q ? function (e, t) {
        if (typeof t.getElementsByTagName !== p)
                return t.getElementsByTagName(e);
        } : function (e, t) {
        var n = t.getElementsByTagName(e);
                if (e === "*") {
        var r, i = [], s = 0;
                for (; r = n[s]; s++)
                r.nodeType === 1 && i.push(r);
                return i;
        }
        return n;
        }, NAME: et && function (e, t) {
        if (typeof t.getElementsByName !== p)
                return t.getElementsByName(name);
        }, CLASS: Z && function (e, t, n) {
        if (typeof t.getElementsByClassName !== p && !n)
                return t.getElementsByClassName(e);
        } }, relative: { ">": { dir: "parentNode", first: !0 }, " ": { dir: "parentNode" }, "+": { dir: "previousSibling", first: !0 }, "~": { dir: "previousSibling" } }, preFilter: { ATTR: function (e) {
        return e[1] = e[1].replace($, ""), e[3] = (e[4] || e[5] || "").replace($, ""), e[2] === "~=" && (e[3] = " " + e[3] + " "), e.slice(0, 4);
        }, CHILD: function (e) {
        return e[1] = e[1].toLowerCase(), e[1] === "nth" ? (e[2] || nt.error(e[0]), e[3] = + (e[3] ? e[4] + (e[5] || 1) : 2 * (e[2] === "even" || e[2] === "odd")), e[4] = + (e[6] + e[7] || e[2] === "odd")) : e[2] && nt.error(e[0]), e;
        }, PSEUDO: function (e) {
        var t, n;
                if (J.CHILD.test(e[0]))
                return null;
                if (e[3])
                e[2] = e[3];
                else if (t = e[4])
                q.test(t) && (n = ut(t, !0)) && (n = t.indexOf(")", t.length - n) - t.length) && (t = t.slice(0, n), e[0] = e[0].slice(0, n)), e[2] = t;
                return e.slice(0, 3);
        } }, filter: { ID: r ? function (e) {
        return e = e.replace($, ""), function (t) {
        return t.getAttribute("id") === e;
        };
        } : function (e) {
        return e = e.replace($, ""), function (t) {
        var n = typeof t.getAttributeNode !== p && t.getAttributeNode("id");
                return n && n.value === e;
        };
        }, TAG: function (e) {
        return e === "*" ? function () {
        return !0;
        } : (e = e.replace($, "").toLowerCase(), function (t) {
        return t.nodeName && t.nodeName.toLowerCase() === e;
        });
        }, CLASS: function (e) {
        var t = k[d][e + " "];
                return t || (t = new RegExp("(^|" + O + ")" + e + "(" + O + "|$)")) && k(e, function (e) {
        return t.test(e.className || typeof e.getAttribute !== p && e.getAttribute("class") || "");
        });
        }, ATTR: function (e, t, n) {
        return function (r, i) {
        var s = nt.attr(r, e);
                return s == null ? t === "!=" : t ? (s += "", t === "=" ? s === n : t === "!=" ? s !== n : t === "^=" ? n && s.indexOf(n) === 0 : t === "*=" ? n && s.indexOf(n) > - 1 : t === "$=" ? n && s.substr(s.length - n.length) === n : t === "~=" ? (" " + s + " ").indexOf(n) > - 1 : t === "|=" ? s === n || s.substr(0, n.length + 1) === n + "-" : !1) : !0;
        };
        }, CHILD: function (e, t, n, r) {
        return e === "nth" ? function (e) {
        var t, i, s = e.parentNode;
                if (n === 1 && r === 0)
                return !0;
                if (s) {
        i = 0;
                for (t = s.firstChild; t; t = t.nextSibling)
                if (t.nodeType === 1) {
        i++;
                if (e === t)
                break;
        }
        }
        return i -= r, i === n || i % n === 0 && i / n >= 0;
        } : function (t) {
        var n = t;
                switch (e) {
        case "only":
                case "first":
                while (n = n.previousSibling)
                if (n.nodeType === 1)
                return !1;
                if (e === "first")
                return !0;
                n = t;
                case "last":
                while (n = n.nextSibling)
                if (n.nodeType === 1)
                return !1;
                return !0;
        }
        };
        }, PSEUDO: function (e, t) {
        var n, r = i.pseudos[e] || i.setFilters[e.toLowerCase()] || nt.error("unsupported pseudo: " + e);
                return r[d] ? r(t) : r.length > 1 ? (n = [e, e, "", t], i.setFilters.hasOwnProperty(e.toLowerCase()) ? N(function (e, n) {
        var i, s = r(e, t), o = s.length;
                while (o--)
                i = T.call(e, s[o]), e[i] = !(n[i] = s[o]);
        }) : function (e) {
        return r(e, 0, n);
        }) : r;
        } }, pseudos: { not: N(function (e) {
        var t = [], n = [], r = a(e.replace(j, "$1"));
                return r[d] ? N(function (e, t, n, i) {
        var s, o = r(e, null, i, []), u = e.length;
                while (u--)
                if (s = o[u])
                e[u] = !(t[u] = s);
        }) : function (e, i, s) {
        return t[0] = e, r(t, null, s, n), !n.pop();
        };
        }), has: N(function (e) {
        return function (t) {
        return nt(e, t).length > 0;
        };
        }), contains: N(function (e) {
        return function (t) {
        return (t.textContent || t.innerText || s(t)).indexOf(e) > - 1;
        };
        }), enabled: function (e) {
        return e.disabled === !1;
        }, disabled: function (e) {
        return e.disabled === !0;
        }, checked: function (e) {
        var t = e.nodeName.toLowerCase();
                return t === "input" && !!e.checked || t === "option" && !!e.selected;
        }, selected: function (e) {
        return e.parentNode && e.parentNode.selectedIndex, e.selected === !0;
        }, parent: function (e) {
        return !i.pseudos.empty(e);
        }, empty: function (e) {
        var t;
                e = e.firstChild;
                while (e) {
        if (e.nodeName > "@" || (t = e.nodeType) === 3 || t === 4)
                return !1;
                e = e.nextSibling;
        }
        return !0;
        }, header: function (e) {
        return X.test(e.nodeName);
        }, text: function (e) {
        var t, n;
                return e.nodeName.toLowerCase() === "input" && (t = e.type) === "text" && ((n = e.getAttribute("type")) == null || n.toLowerCase() === t);
        }, radio: rt("radio"), checkbox: rt("checkbox"), file: rt("file"), password: rt("password"), image: rt("image"), submit: it("submit"), reset: it("reset"), button: function (e) {
        var t = e.nodeName.toLowerCase();
                return t === "input" && e.type === "button" || t === "button";
        }, input: function (e) {
        return V.test(e.nodeName);
        }, focus: function (e) {
        var t = e.ownerDocument;
                return e === t.activeElement && (!t.hasFocus || t.hasFocus()) && !!(e.type || e.href || ~e.tabIndex);
        }, active: function (e) {
        return e === e.ownerDocument.activeElement;
        }, first: st(function () {
        return [0];
        }), last: st(function (e, t) {
        return [t - 1];
        }), eq: st(function (e, t, n) {
        return [n < 0 ? n + t : n];
        }), even: st(function (e, t) {
        for (var n = 0; n < t; n += 2)
                e.push(n);
                return e;
        }), odd: st(function (e, t) {
        for (var n = 1; n < t; n += 2)
                e.push(n);
                return e;
        }), lt: st(function (e, t, n) {
        for (var r = n < 0 ? n + t : n; --r >= 0; )
                e.push(r);
                return e;
        }), gt: st(function (e, t, n) {
        for (var r = n < 0 ? n + t : n; ++r < t; )
                e.push(r);
                return e;
        }) } }, f = y.compareDocumentPosition ? function (e, t) {
        return e === t ? (l = !0, 0) : (!e.compareDocumentPosition || !t.compareDocumentPosition ? e.compareDocumentPosition : e.compareDocumentPosition(t) & 4) ? - 1 : 1;
        } : function (e, t) {
        if (e === t)
                return l = !0, 0;
                if (e.sourceIndex && t.sourceIndex)
                return e.sourceIndex - t.sourceIndex;
                var n, r, i = [], s = [], o = e.parentNode, u = t.parentNode, a = o;
                if (o === u)
                return ot(e, t);
                if (!o)
                return - 1;
                if (!u)
                return 1;
                while (a)
                i.unshift(a), a = a.parentNode;
                a = u;
                while (a)
                s.unshift(a), a = a.parentNode;
                n = i.length, r = s.length;
                for (var f = 0; f < n && f < r; f++)
                if (i[f] !== s[f])
                return ot(i[f], s[f]);
                return f === n ? ot(e, s[f], - 1) : ot(i[f], t, 1);
        }, [0, 0].sort(f), h = !l, nt.uniqueSort = function (e) {
        var t, n = [], r = 1, i = 0;
                l = h, e.sort(f);
                if (l) {
        for (; t = e[r]; r++)
                t === e[r - 1] && (i = n.push(r));
                while (i--)
                e.splice(n[i], 1);
        }
        return e;
        }, nt.error = function (e) {
        throw new Error("Syntax error, unrecognized expression: " + e);
        }, a = nt.compile = function (e, t) {
        var n, r = [], i = [], s = A[d][e + " "];
                if (!s) {
        t || (t = ut(e)), n = t.length;
                while (n--)
                s = ht(t[n]), s[d] ? r.push(s) : i.push(s);
                s = A(e, pt(i, r));
        }
        return s;
        }, g.querySelectorAll && function () {
        var e, t = vt, n = /'|\\/g, r = /\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g, i = [":focus"], s = [":active"], u = y.matchesSelector || y.mozMatchesSelector || y.webkitMatchesSelector || y.oMatchesSelector || y.msMatchesSelector;
                K(function (e) {
                e.innerHTML = "<select><option selected=''></option></select>", e.querySelectorAll("[selected]").length || i.push("\\[" + O + "*(?:checked|disabled|ismap|multiple|readonly|selected|value)"), e.querySelectorAll(":checked").length || i.push(":checked");
                }), K(function (e) {
        e.innerHTML = "<p test=''></p>", e.querySelectorAll("[test^='']").length && i.push("[*^$]=" + O + "*(?:\"\"|'')"), e.innerHTML = "<input type='hidden'/>", e.querySelectorAll(":enabled").length || i.push(":enabled", ":disabled");
        }), i = new RegExp(i.join("|")), vt = function (e, r, s, o, u) {
        if (!o && !u && !i.test(e)) {
        var a, f, l = !0, c = d, h = r, p = r.nodeType === 9 && e;
                if (r.nodeType === 1 && r.nodeName.toLowerCase() !== "object") {
        a = ut(e), (l = r.getAttribute("id")) ? c = l.replace(n, "\\$&") : r.setAttribute("id", c), c = "[id='" + c + "'] ", f = a.length;
                while (f--)
                a[f] = c + a[f].join("");
                h = z.test(e) && r.parentNode || r, p = a.join(",");
        }
        if (p)
                try {
                return S.apply(s, x.call(h.querySelectorAll(p), 0)), s;
                }
        catch (v) {
        }
        finally {
        l || r.removeAttribute("id");
        }
        }
        return t(e, r, s, o, u);
        }, u && (K(function (t) {
        e = u.call(t, "div");
                try {
                u.call(t, "[test!='']:sizzle"), s.push("!=", H);
                }
        catch (n) {
        }
        }), s = new RegExp(s.join("|")), nt.matchesSelector = function (t, n) {
        n = n.replace(r, "='$1']");
                if (!o(t) && !s.test(n) && !i.test(n))
                try {
                var a = u.call(t, n);
                        if (a || e || t.document && t.document.nodeType !== 11)
                        return a;
                }
        catch (f) {
        }
        return nt(n, null, null, [t]).length > 0;
        });
        }(), i.pseudos.nth = i.pseudos.eq, i.filters = mt.prototype = i.pseudos, i.setFilters = new mt, nt.attr = v.attr, v.find = nt, v.expr = nt.selectors, v.expr[":"] = v.expr.pseudos, v.unique = nt.uniqueSort, v.text = nt.getText, v.isXMLDoc = nt.isXML, v.contains = nt.contains;
        }(e);
                var nt = /Until$/, rt = /^(?:parents|prev(?:Until|All))/, it = /^.[^:#\[\.,]*$/, st = v.expr.match.needsContext, ot = { children: !0, contents: !0, next: !0, prev: !0 };
                v.fn.extend({ find: function (e) {
                var t, n, r, i, s, o, u = this;
                        if (typeof e != "string")
                        return v(e).filter(function () {
                for (t = 0, n = u.length; t < n; t++)
                        if (v.contains(u[t], this))
                        return !0;
                });
                        o = this.pushStack("", "find", e);
                        for (t = 0, n = this.length; t < n; t++) {
                r = o.length, v.find(e, this[t], o);
                        if (t > 0)
                        for (i = r; i < o.length; i++)
                        for (s = 0; s < r; s++)
                        if (o[s] === o[i]) {
                o.splice(i--, 1);
                        break;
                }
                }
                return o;
                }, has: function (e) {
                var t, n = v(e, this), r = n.length;
                        return this.filter(function () {
                        for (t = 0; t < r; t++)
                                if (v.contains(this, n[t]))
                                return !0;
                        });
                }, not: function (e) {
                return this.pushStack(ft(this, e, !1), "not", e);
                }, filter: function (e) {
                return this.pushStack(ft(this, e, !0), "filter", e);
                }, is: function (e) {
                return !!e && (typeof e == "string" ? st.test(e) ? v(e, this.context).index(this[0]) >= 0 : v.filter(e, this).length > 0 : this.filter(e).length > 0);
                }, closest: function (e, t) {
                var n, r = 0, i = this.length, s = [], o = st.test(e) || typeof e != "string" ? v(e, t || this.context) : 0;
                        for (; r < i; r++) {
                n = this[r];
                        while (n && n.ownerDocument && n !== t && n.nodeType !== 11) {
                if (o ? o.index(n) > - 1 : v.find.matchesSelector(n, e)) {
                s.push(n);
                        break;
                }
                n = n.parentNode;
                }
                }
                return s = s.length > 1 ? v.unique(s) : s, this.pushStack(s, "closest", e);
                }, index: function (e) {
                return e ? typeof e == "string" ? v.inArray(this[0], v(e)) : v.inArray(e.jquery ? e[0] : e, this) : this[0] && this[0].parentNode ? this.prevAll().length : - 1;
                }, add: function (e, t) {
                var n = typeof e == "string" ? v(e, t) : v.makeArray(e && e.nodeType ? [e] : e), r = v.merge(this.get(), n);
                        return this.pushStack(ut(n[0]) || ut(r[0]) ? r : v.unique(r));
                }, addBack: function (e) {
                return this.add(e == null ? this.prevObject : this.prevObject.filter(e));
                } }), v.fn.andSelf = v.fn.addBack, v.each({ parent: function (e) {
        var t = e.parentNode;
                return t && t.nodeType !== 11 ? t : null;
        }, parents: function (e) {
        return v.dir(e, "parentNode");
        }, parentsUntil: function (e, t, n) {
        return v.dir(e, "parentNode", n);
        }, next: function (e) {
        return at(e, "nextSibling");
        }, prev: function (e) {
        return at(e, "previousSibling");
        }, nextAll: function (e) {
        return v.dir(e, "nextSibling");
        }, prevAll: function (e) {
        return v.dir(e, "previousSibling");
        }, nextUntil: function (e, t, n) {
        return v.dir(e, "nextSibling", n);
        }, prevUntil: function (e, t, n) {
        return v.dir(e, "previousSibling", n);
        }, siblings: function (e) {
        return v.sibling((e.parentNode || {}).firstChild, e);
        }, children: function (e) {
        return v.sibling(e.firstChild);
        }, contents: function (e) {
        return v.nodeName(e, "iframe") ? e.contentDocument || e.contentWindow.document : v.merge([], e.childNodes);
        } }, function (e, t) {
        v.fn[e] = function (n, r) {
        var i = v.map(this, t, n);
                return nt.test(e) || (r = n), r && typeof r == "string" && (i = v.filter(r, i)), i = this.length > 1 && !ot[e] ? v.unique(i) : i, this.length > 1 && rt.test(e) && (i = i.reverse()), this.pushStack(i, e, l.call(arguments).join(","));
        };
        }), v.extend({ filter: function (e, t, n) {
        return n && (e = ":not(" + e + ")"), t.length === 1 ? v.find.matchesSelector(t[0], e) ? [t[0]] : [] : v.find.matches(e, t);
        }, dir: function (e, n, r) {
        var i = [], s = e[n];
                while (s && s.nodeType !== 9 && (r === t || s.nodeType !== 1 || !v(s).is(r)))
                s.nodeType === 1 && i.push(s), s = s[n];
                return i;
        }, sibling: function (e, t) {
        var n = [];
                for (; e; e = e.nextSibling)
                e.nodeType === 1 && e !== t && n.push(e);
                return n;
        } });
                var ct = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video", ht = / jQuery\d+="(?:null|\d+)"/g, pt = /^\s+/, dt = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi, vt = /<([\w:]+)/, mt = /<tbody/i, gt = /<|&#?\w+;/, yt = /<(?:script|style|link)/i, bt = /<(?:script|object|embed|option|style)/i, wt = new RegExp("<(?:" + ct + ")[\\s/>]", "i"), Et = /^(?:checkbox|radio)$/, St = /checked\s*(?:[^=]|=\s*.checked.)/i, xt = /\/(java|ecma)script/i, Tt = /^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g, Nt = { option: [1, "<select multiple='multiple'>", "</select>"], legend: [1, "<fieldset>", "</fieldset>"], thead: [1, "<table>", "</table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], area: [1, "<map>", "</map>"], _default: [0, "", ""] }, Ct = lt(i), kt = Ct.appendChild(i.createElement("div"));
                Nt.optgroup = Nt.option, Nt.tbody = Nt.tfoot = Nt.colgroup = Nt.caption = Nt.thead, Nt.th = Nt.td, v.support.htmlSerialize || (Nt._default = [1, "X<div>", "</div>"]), v.fn.extend({ text: function (e) {
        return v.access(this, function (e) {
        return e === t ? v.text(this) : this.empty().append((this[0] && this[0].ownerDocument || i).createTextNode(e));
        }, null, e, arguments.length);
        }, wrapAll: function (e) {
        if (v.isFunction(e))
                return this.each(function (t) {
                v(this).wrapAll(e.call(this, t));
                });
                if (this[0]) {
        var t = v(e, this[0].ownerDocument).eq(0).clone(!0);
                this[0].parentNode && t.insertBefore(this[0]), t.map(function () {
        var e = this;
                while (e.firstChild && e.firstChild.nodeType === 1)
                e = e.firstChild;
                return e;
        }).append(this);
        }
        return this;
        }, wrapInner: function (e) {
        return v.isFunction(e) ? this.each(function (t) {
        v(this).wrapInner(e.call(this, t));
        }) : this.each(function () {
        var t = v(this), n = t.contents();
                n.length ? n.wrapAll(e) : t.append(e);
        });
        }, wrap: function (e) {
        var t = v.isFunction(e);
                return this.each(function (n) {
                v(this).wrapAll(t ? e.call(this, n) : e);
                });
        }, unwrap: function () {
        return this.parent().each(function () {
        v.nodeName(this, "body") || v(this).replaceWith(this.childNodes);
        }).end();
        }, append: function () {
        return this.domManip(arguments, !0, function (e) {
        (this.nodeType === 1 || this.nodeType === 11) && this.appendChild(e);
        });
        }, prepend: function () {
        return this.domManip(arguments, !0, function (e) {
        (this.nodeType === 1 || this.nodeType === 11) && this.insertBefore(e, this.firstChild);
        });
        }, before: function () {
        if (!ut(this[0]))
                return this.domManip(arguments, !1, function (e) {
                this.parentNode.insertBefore(e, this);
                });
                if (arguments.length) {
        var e = v.clean(arguments);
                return this.pushStack(v.merge(e, this), "before", this.selector);
        }
        }, after: function () {
        if (!ut(this[0]))
                return this.domManip(arguments, !1, function (e) {
                this.parentNode.insertBefore(e, this.nextSibling);
                });
                if (arguments.length) {
        var e = v.clean(arguments);
                return this.pushStack(v.merge(this, e), "after", this.selector);
        }
        }, remove: function (e, t) {
        var n, r = 0;
                for (; (n = this[r]) != null; r++)
                if (!e || v.filter(e, [n]).length)
                !t && n.nodeType === 1 && (v.cleanData(n.getElementsByTagName("*")), v.cleanData([n])), n.parentNode && n.parentNode.removeChild(n);
                return this;
        }, empty: function () {
        var e, t = 0;
                for (; (e = this[t]) != null; t++) {
        e.nodeType === 1 && v.cleanData(e.getElementsByTagName("*"));
                while (e.firstChild)
                e.removeChild(e.firstChild);
        }
        return this;
        }, clone: function (e, t) {
        return e = e == null ? !1 : e, t = t == null ? e : t, this.map(function () {
        return v.clone(this, e, t);
        });
        }, html: function (e) {
        return v.access(this, function (e) {
        var n = this[0] || {}, r = 0, i = this.length;
                if (e === t)
                return n.nodeType === 1 ? n.innerHTML.replace(ht, "") : t;
                if (typeof e == "string" && !yt.test(e) && (v.support.htmlSerialize || !wt.test(e)) && (v.support.leadingWhitespace || !pt.test(e)) && !Nt[(vt.exec(e) || ["", ""])[1].toLowerCase()]) {
        e = e.replace(dt, "<$1></$2>");
                try {
                for (; r < i; r++)
                        n = this[r] || {}, n.nodeType === 1 && (v.cleanData(n.getElementsByTagName("*")), n.innerHTML = e);
                        n = 0;
                }
        catch (s) {
        }
        }
        n && this.empty().append(e);
        }, null, e, arguments.length);
        }, replaceWith: function (e) {
        return ut(this[0]) ? this.length ? this.pushStack(v(v.isFunction(e) ? e() : e), "replaceWith", e) : this : v.isFunction(e) ? this.each(function (t) {
        var n = v(this), r = n.html();
                n.replaceWith(e.call(this, t, r));
        }) : (typeof e != "string" && (e = v(e).detach()), this.each(function () {
        var t = this.nextSibling, n = this.parentNode;
                v(this).remove(), t ? v(t).before(e) : v(n).append(e);
        }));
        }, detach: function (e) {
        return this.remove(e, !0);
        }, domManip: function (e, n, r) {
        e = [].concat.apply([], e);
                var i, s, o, u, a = 0, f = e[0], l = [], c = this.length;
                if (!v.support.checkClone && c > 1 && typeof f == "string" && St.test(f))
                return this.each(function () {
                v(this).domManip(e, n, r);
                });
                if (v.isFunction(f))
                return this.each(function (i) {
                var s = v(this);
                        e[0] = f.call(this, i, n ? s.html() : t), s.domManip(e, n, r);
                });
                if (this[0]) {
        i = v.buildFragment(e, this, l), o = i.fragment, s = o.firstChild, o.childNodes.length === 1 && (o = s);
                if (s) {
        n = n && v.nodeName(s, "tr");
                for (u = i.cacheable || c - 1; a < c; a++)
                r.call(n && v.nodeName(this[a], "table") ? Lt(this[a], "tbody") : this[a], a === u ? o : v.clone(o, !0, !0));
        }
        o = s = null, l.length && v.each(l, function (e, t) {
        t.src ? v.ajax ? v.ajax({ url: t.src, type: "GET", dataType: "script", async: !1, global: !1, "throws": !0 }) : v.error("no ajax") : v.globalEval((t.text || t.textContent || t.innerHTML || "").replace(Tt, "")), t.parentNode && t.parentNode.removeChild(t);
        });
        }
        return this;
        } }), v.buildFragment = function (e, n, r) {
        var s, o, u, a = e[0];
                return n = n || i, n = !n.nodeType && n[0] || n, n = n.ownerDocument || n, e.length === 1 && typeof a == "string" && a.length < 512 && n === i && a.charAt(0) === "<" && !bt.test(a) && (v.support.checkClone || !St.test(a)) && (v.support.html5Clone || !wt.test(a)) && (o = !0, s = v.fragments[a], u = s !== t), s || (s = n.createDocumentFragment(), v.clean(e, n, s, r), o && (v.fragments[a] = u && s)), { fragment: s, cacheable: o };
        }, v.fragments = {}, v.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function (e, t) {
        v.fn[e] = function (n) {
        var r, i = 0, s = [], o = v(n), u = o.length, a = this.length === 1 && this[0].parentNode;
                if ((a == null || a && a.nodeType === 11 && a.childNodes.length === 1) && u === 1)
                return o[t](this[0]), this;
                for (; i < u; i++)
                r = (i > 0 ? this.clone(!0) : this).get(), v(o[i])[t](r), s = s.concat(r);
                return this.pushStack(s, e, o.selector);
        };
        }), v.extend({ clone: function (e, t, n) {
        var r, i, s, o;
                v.support.html5Clone || v.isXMLDoc(e) || !wt.test("<" + e.nodeName + ">") ? o = e.cloneNode(!0) : (kt.innerHTML = e.outerHTML, kt.removeChild(o = kt.firstChild));
                if ((!v.support.noCloneEvent || !v.support.noCloneChecked) && (e.nodeType === 1 || e.nodeType === 11) && !v.isXMLDoc(e)) {
        Ot(e, o), r = Mt(e), i = Mt(o);
                for (s = 0; r[s]; ++s)
                i[s] && Ot(r[s], i[s]);
        }
        if (t) {
        At(e, o);
                if (n) {
        r = Mt(e), i = Mt(o);
                for (s = 0; r[s]; ++s)
                At(r[s], i[s]);
        }
        }
        return r = i = null, o;
        }, clean: function (e, t, n, r) {
        var s, o, u, a, f, l, c, h, p, d, m, g, y = t === i && Ct, b = [];
                if (!t || typeof t.createDocumentFragment == "undefined")
                t = i;
                for (s = 0; (u = e[s]) != null; s++) {
        typeof u == "number" && (u += "");
                if (!u)
                continue;
                if (typeof u == "string")
                if (!gt.test(u))
                u = t.createTextNode(u);
                else {
                y = y || lt(t), c = t.createElement("div"), y.appendChild(c), u = u.replace(dt, "<$1></$2>"), a = (vt.exec(u) || ["", ""])[1].toLowerCase(), f = Nt[a] || Nt._default, l = f[0], c.innerHTML = f[1] + u + f[2];
                        while (l--)
                        c = c.lastChild;
                        if (!v.support.tbody) {
                h = mt.test(u), p = a === "table" && !h ? c.firstChild && c.firstChild.childNodes : f[1] === "<table>" && !h ? c.childNodes : [];
                        for (o = p.length - 1; o >= 0; --o)
                        v.nodeName(p[o], "tbody") && !p[o].childNodes.length && p[o].parentNode.removeChild(p[o]);
                }
                !v.support.leadingWhitespace && pt.test(u) && c.insertBefore(t.createTextNode(pt.exec(u)[0]), c.firstChild), u = c.childNodes, c.parentNode.removeChild(c);
                }
        u.nodeType ? b.push(u) : v.merge(b, u);
        }
        c && (u = c = y = null);
                if (!v.support.appendChecked)
                for (s = 0; (u = b[s]) != null; s++)
                v.nodeName(u, "input") ? _t(u) : typeof u.getElementsByTagName != "undefined" && v.grep(u.getElementsByTagName("input"), _t);
                if (n) {
        m = function (e) {
        if (!e.type || xt.test(e.type))
                return r ? r.push(e.parentNode ? e.parentNode.removeChild(e) : e) : n.appendChild(e);
        };
                for (s = 0; (u = b[s]) != null; s++)
                if (!v.nodeName(u, "script") || !m(u))
                n.appendChild(u), typeof u.getElementsByTagName != "undefined" && (g = v.grep(v.merge([], u.getElementsByTagName("script")), m), b.splice.apply(b, [s + 1, 0].concat(g)), s += g.length);
        }
        return b;
        }, cleanData: function (e, t) {
        var n, r, i, s, o = 0, u = v.expando, a = v.cache, f = v.support.deleteExpando, l = v.event.special;
                for (; (i = e[o]) != null; o++)
                if (t || v.acceptData(i)) {
        r = i[u], n = r && a[r];
                if (n) {
        if (n.events)
                for (s in n.events)
                l[s] ? v.event.remove(i, s) : v.removeEvent(i, s, n.handle);
                a[r] && (delete a[r], f ? delete i[u] : i.removeAttribute ? i.removeAttribute(u) : i[u] = null, v.deletedIds.push(r));
        }
        }
        } }), function () {
        var e, t;
                v.uaMatch = function (e) {
                e = e.toLowerCase();
                        var t = /(chrome)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+)/.exec(e) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) || /(msie) ([\w.]+)/.exec(e) || e.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e) || [];
                        return { browser: t[1] || "", version: t[2] || "0" };
                }, e = v.uaMatch(o.userAgent), t = {}, e.browser && (t[e.browser] = !0, t.version = e.version), t.chrome ? t.webkit = !0 : t.webkit && (t.safari = !0), v.browser = t, v.sub = function () {
        function e(t, n) {
        return new e.fn.init(t, n);
        }
        v.extend(!0, e, this), e.superclass = this, e.fn = e.prototype = this(), e.fn.constructor = e, e.sub = this.sub, e.fn.init = function (r, i) {
        return i && i instanceof v && !(i instanceof e) && (i = e(i)), v.fn.init.call(this, r, i, t);
        }, e.fn.init.prototype = e.fn;
                var t = e(i);
                return e;
        };
        }();
                var Dt, Pt, Ht, Bt = /alpha\([^)]*\)/i, jt = /opacity=([^)]*)/, Ft = /^(top|right|bottom|left)$/, It = /^(none|table(?!-c[ea]).+)/, qt = /^margin/, Rt = new RegExp("^(" + m + ")(.*)$", "i"), Ut = new RegExp("^(" + m + ")(?!px)[a-z%]+$", "i"), zt = new RegExp("^([-+])=(" + m + ")", "i"), Wt = { BODY: "block" }, Xt = { position: "absolute", visibility: "hidden", display: "block" }, Vt = { letterSpacing: 0, fontWeight: 400 }, $t = ["Top", "Right", "Bottom", "Left"], Jt = ["Webkit", "O", "Moz", "ms"], Kt = v.fn.toggle;
                v.fn.extend({ css: function (e, n) {
                return v.access(this, function (e, n, r) {
                return r !== t ? v.style(e, n, r) : v.css(e, n);
                }, e, n, arguments.length > 1);
                }, show: function () {
                return Yt(this, !0);
                }, hide: function () {
                return Yt(this);
                }, toggle: function (e, t) {
                var n = typeof e == "boolean";
                        return v.isFunction(e) && v.isFunction(t) ? Kt.apply(this, arguments) : this.each(function () {
                (n ? e : Gt(this)) ? v(this).show() : v(this).hide();
                });
                } }), v.extend({ cssHooks: { opacity: { get: function (e, t) {
        if (t) {
        var n = Dt(e, "opacity");
                return n === "" ? "1" : n;
        }
        } } }, cssNumber: { fillOpacity: !0, fontWeight: !0, lineHeight: !0, opacity: !0, orphans: !0, widows: !0, zIndex: !0, zoom: !0 }, cssProps: { "float": v.support.cssFloat ? "cssFloat" : "styleFloat" }, style: function (e, n, r, i) {
        if (!e || e.nodeType === 3 || e.nodeType === 8 || !e.style)
                return;
                var s, o, u, a = v.camelCase(n), f = e.style;
                n = v.cssProps[a] || (v.cssProps[a] = Qt(f, a)), u = v.cssHooks[n] || v.cssHooks[a];
                if (r === t)
                return u && "get" in u && (s = u.get(e, !1, i)) !== t ? s : f[n];
                o = typeof r, o === "string" && (s = zt.exec(r)) && (r = (s[1] + 1) * s[2] + parseFloat(v.css(e, n)), o = "number");
                if (r == null || o === "number" && isNaN(r))
                return;
                o === "number" && !v.cssNumber[a] && (r += "px");
                if (!u || !("set" in u) || (r = u.set(e, r, i)) !== t)
                try {
                f[n] = r;
                }
        catch (l) {
        }
        }, css: function (e, n, r, i) {
        var s, o, u, a = v.camelCase(n);
                return n = v.cssProps[a] || (v.cssProps[a] = Qt(e.style, a)), u = v.cssHooks[n] || v.cssHooks[a], u && "get" in u && (s = u.get(e, !0, i)), s === t && (s = Dt(e, n)), s === "normal" && n in Vt && (s = Vt[n]), r || i !== t ? (o = parseFloat(s), r || v.isNumeric(o) ? o || 0 : s) : s;
        }, swap: function (e, t, n) {
        var r, i, s = {};
                for (i in t)
                s[i] = e.style[i], e.style[i] = t[i];
                r = n.call(e);
                for (i in t)
                e.style[i] = s[i];
                return r;
        } }), e.getComputedStyle ? Dt = function (t, n) {
        var r, i, s, o, u = e.getComputedStyle(t, null), a = t.style;
                return u && (r = u.getPropertyValue(n) || u[n], r === "" && !v.contains(t.ownerDocument, t) && (r = v.style(t, n)), Ut.test(r) && qt.test(n) && (i = a.width, s = a.minWidth, o = a.maxWidth, a.minWidth = a.maxWidth = a.width = r, r = u.width, a.width = i, a.minWidth = s, a.maxWidth = o)), r;
        } : i.documentElement.currentStyle && (Dt = function (e, t) {
        var n, r, i = e.currentStyle && e.currentStyle[t], s = e.style;
                return i == null && s && s[t] && (i = s[t]), Ut.test(i) && !Ft.test(t) && (n = s.left, r = e.runtimeStyle && e.runtimeStyle.left, r && (e.runtimeStyle.left = e.currentStyle.left), s.left = t === "fontSize" ? "1em" : i, i = s.pixelLeft + "px", s.left = n, r && (e.runtimeStyle.left = r)), i === "" ? "auto" : i;
        }), v.each(["height", "width"], function (e, t) {
        v.cssHooks[t] = { get: function (e, n, r) {
        if (n)
                return e.offsetWidth === 0 && It.test(Dt(e, "display")) ? v.swap(e, Xt, function () {
        return tn(e, t, r);
        }) : tn(e, t, r);
        }, set: function (e, n, r) {
        return Zt(e, n, r ? en(e, t, r, v.support.boxSizing && v.css(e, "boxSizing") === "border-box") : 0);
        } };
        }), v.support.opacity || (v.cssHooks.opacity = { get: function (e, t) {
        return jt.test((t && e.currentStyle ? e.currentStyle.filter : e.style.filter) || "") ? .01 * parseFloat(RegExp.$1) + "" : t ? "1" : "";
        }, set: function (e, t) {
        var n = e.style, r = e.currentStyle, i = v.isNumeric(t) ? "alpha(opacity=" + t * 100 + ")" : "", s = r && r.filter || n.filter || "";
                n.zoom = 1;
                if (t >= 1 && v.trim(s.replace(Bt, "")) === "" && n.removeAttribute) {
        n.removeAttribute("filter");
                if (r && !r.filter)
                return;
        }
        n.filter = Bt.test(s) ? s.replace(Bt, i) : s + " " + i;
        } }), v(function () {
        v.support.reliableMarginRight || (v.cssHooks.marginRight = { get: function (e, t) {
        return v.swap(e, { display: "inline-block" }, function () {
        if (t)
                return Dt(e, "marginRight");
        });
        } }), !v.support.pixelPosition && v.fn.position && v.each(["top", "left"], function (e, t) {
        v.cssHooks[t] = { get: function (e, n) {
        if (n) {
        var r = Dt(e, t);
                return Ut.test(r) ? v(e).position()[t] + "px" : r;
        }
        } };
        });
        }), v.expr && v.expr.filters && (v.expr.filters.hidden = function (e) {
        return e.offsetWidth === 0 && e.offsetHeight === 0 || !v.support.reliableHiddenOffsets && (e.style && e.style.display || Dt(e, "display")) === "none";
        }, v.expr.filters.visible = function (e) {
        return !v.expr.filters.hidden(e);
        }), v.each({ margin: "", padding: "", border: "Width" }, function (e, t) {
        v.cssHooks[e + t] = { expand: function (n) {
        var r, i = typeof n == "string" ? n.split(" ") : [n], s = {};
                for (r = 0; r < 4; r++)
                s[e + $t[r] + t] = i[r] || i[r - 2] || i[0];
                return s;
        } }, qt.test(e) || (v.cssHooks[e + t].set = Zt);
        });
                var rn = /%20/g, sn = /\[\]$/, on = /\r?\n/g, un = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i, an = /^(?:select|textarea)/i;
                v.fn.extend({ serialize: function () {
                return v.param(this.serializeArray());
                }, serializeArray: function () {
                return this.map(function () {
                return this.elements ? v.makeArray(this.elements) : this;
                }).filter(function () {
                return this.name && !this.disabled && (this.checked || an.test(this.nodeName) || un.test(this.type));
                }).map(function (e, t) {
                var n = v(this).val();
                        return n == null ? null : v.isArray(n) ? v.map(n, function (e, n) {
                return { name: t.name, value: e.replace(on, "\r\n") };
                }) : { name: t.name, value: n.replace(on, "\r\n") };
                }).get();
                } }), v.param = function (e, n) {
        var r, i = [], s = function (e, t) {
        t = v.isFunction(t) ? t() : t == null ? "" : t, i[i.length] = encodeURIComponent(e) + "=" + encodeURIComponent(t);
        };
                n === t && (n = v.ajaxSettings && v.ajaxSettings.traditional);
                if (v.isArray(e) || e.jquery && !v.isPlainObject(e))
                v.each(e, function () {
                s(this.name, this.value);
                });
                else
                for (r in e)
                fn(r, e[r], n, s);
                return i.join("&").replace(rn, "+");
        };
                var ln, cn, hn = /#.*$/, pn = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, dn = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/, vn = /^(?:GET|HEAD)$/, mn = /^\/\//, gn = /\?/, yn = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, bn = /([?&])_=[^&]*/, wn = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/, En = v.fn.load, Sn = {}, xn = {}, Tn = ["*/"] + ["*"];
                try {
                cn = s.href;
                }
        catch (Nn) {
        cn = i.createElement("a"), cn.href = "", cn = cn.href;
        }
        ln = wn.exec(cn.toLowerCase()) || [], v.fn.load = function (e, n, r) {
        if (typeof e != "string" && En)
                return En.apply(this, arguments);
                if (!this.length)
                return this;
                var i, s, o, u = this, a = e.indexOf(" ");
                return a >= 0 && (i = e.slice(a, e.length), e = e.slice(0, a)), v.isFunction(n) ? (r = n, n = t) : n && typeof n == "object" && (s = "POST"), v.ajax({ url: e, type: s, dataType: "html", data: n, complete: function (e, t) {
        r && u.each(r, o || [e.responseText, t, e]);
        } }).done(function (e) {
        o = arguments, u.html(i ? v("<div>").append(e.replace(yn, "")).find(i) : e);
        }), this;
        }, v.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function (e, t) {
        v.fn[t] = function (e) {
        return this.on(t, e);
        };
        }), v.each(["get", "post"], function (e, n) {
        v[n] = function (e, r, i, s) {
        return v.isFunction(r) && (s = s || i, i = r, r = t), v.ajax({ type: n, url: e, data: r, success: i, dataType: s });
        };
        }), v.extend({ getScript: function (e, n) {
        return v.get(e, t, n, "script");
        }, getJSON: function (e, t, n) {
        return v.get(e, t, n, "json");
        }, ajaxSetup: function (e, t) {
        return t ? Ln(e, v.ajaxSettings) : (t = e, e = v.ajaxSettings), Ln(e, t), e;
        }, ajaxSettings: { url: cn, isLocal: dn.test(ln[1]), global: !0, type: "GET", contentType: "application/x-www-form-urlencoded; charset=UTF-8", processData: !0, async: !0, accepts: { xml: "application/xml, text/xml", html: "text/html", text: "text/plain", json: "application/json, text/javascript", "*": Tn }, contents: { xml: /xml/, html: /html/, json: /json/ }, responseFields: { xml: "responseXML", text: "responseText" }, converters: { "* text": e.String, "text html": !0, "text json": v.parseJSON, "text xml": v.parseXML }, flatOptions: { context: !0, url: !0 } }, ajaxPrefilter: Cn(Sn), ajaxTransport: Cn(xn), ajax: function (e, n) {
        function T(e, n, s, a) {
        var l, y, b, w, S, T = n;
                if (E === 2)
                return;
                E = 2, u && clearTimeout(u), o = t, i = a || "", x.readyState = e > 0 ? 4 : 0, s && (w = An(c, x, s));
                if (e >= 200 && e < 300 || e === 304)
                c.ifModified && (S = x.getResponseHeader("Last-Modified"), S && (v.lastModified[r] = S), S = x.getResponseHeader("Etag"), S && (v.etag[r] = S)), e === 304 ? (T = "notmodified", l = !0) : (l = On(c, w), T = l.state, y = l.data, b = l.error, l = !b);
                else {
                b = T;
                        if (!T || e)
                        T = "error", e < 0 && (e = 0);
                }
        x.status = e, x.statusText = (n || T) + "", l ? d.resolveWith(h, [y, T, x]) : d.rejectWith(h, [x, T, b]), x.statusCode(g), g = t, f && p.trigger("ajax" + (l ? "Success" : "Error"), [x, c, l ? y : b]), m.fireWith(h, [x, T]), f && (p.trigger("ajaxComplete", [x, c]), --v.active || v.event.trigger("ajaxStop"));
        }
        typeof e == "object" && (n = e, e = t), n = n || {};
                var r, i, s, o, u, a, f, l, c = v.ajaxSetup({}, n), h = c.context || c, p = h !== c && (h.nodeType || h instanceof v) ? v(h) : v.event, d = v.Deferred(), m = v.Callbacks("once memory"), g = c.statusCode || {}, b = {}, w = {}, E = 0, S = "canceled", x = { readyState: 0, setRequestHeader: function (e, t) {
        if (!E) {
        var n = e.toLowerCase();
                e = w[n] = w[n] || e, b[e] = t;
        }
        return this;
        }, getAllResponseHeaders: function () {
        return E === 2 ? i : null;
        }, getResponseHeader: function (e) {
        var n;
                if (E === 2) {
        if (!s) {
        s = {};
                while (n = pn.exec(i))
                s[n[1].toLowerCase()] = n[2];
        }
        n = s[e.toLowerCase()];
        }
        return n === t ? null : n;
        }, overrideMimeType: function (e) {
        return E || (c.mimeType = e), this;
        }, abort: function (e) {
        return e = e || S, o && o.abort(e), T(0, e), this;
        } };
                d.promise(x), x.success = x.done, x.error = x.fail, x.complete = m.add, x.statusCode = function (e) {
        if (e) {
        var t;
                if (E < 2)
                for (t in e)
                g[t] = [g[t], e[t]];
                else
                t = e[x.status], x.always(t);
        }
        return this;
        }, c.url = ((e || c.url) + "").replace(hn, "").replace(mn, ln[1] + "//"), c.dataTypes = v.trim(c.dataType || "*").toLowerCase().split(y), c.crossDomain == null && (a = wn.exec(c.url.toLowerCase()), c.crossDomain = !(!a || a[1] === ln[1] && a[2] === ln[2] && (a[3] || (a[1] === "http:" ? 80 : 443)) == (ln[3] || (ln[1] === "http:" ? 80 : 443)))), c.data && c.processData && typeof c.data != "string" && (c.data = v.param(c.data, c.traditional)), kn(Sn, c, n, x);
                if (E === 2)
                return x;
                f = c.global, c.type = c.type.toUpperCase(), c.hasContent = !vn.test(c.type), f && v.active++ === 0 && v.event.trigger("ajaxStart");
                if (!c.hasContent) {
        c.data && (c.url += (gn.test(c.url) ? "&" : "?") + c.data, delete c.data), r = c.url;
                if (c.cache === !1) {
        var N = v.now(), C = c.url.replace(bn, "$1_=" + N);
                c.url = C + (C === c.url ? (gn.test(c.url) ? "&" : "?") + "_=" + N : "");
        }
        }
        (c.data && c.hasContent && c.contentType !== !1 || n.contentType) && x.setRequestHeader("Content-Type", c.contentType), c.ifModified && (r = r || c.url, v.lastModified[r] && x.setRequestHeader("If-Modified-Since", v.lastModified[r]), v.etag[r] && x.setRequestHeader("If-None-Match", v.etag[r])), x.setRequestHeader("Accept", c.dataTypes[0] && c.accepts[c.dataTypes[0]] ? c.accepts[c.dataTypes[0]] + (c.dataTypes[0] !== "*" ? ", " + Tn + "; q=0.01" : "") : c.accepts["*"]);
                for (l in c.headers)
                x.setRequestHeader(l, c.headers[l]);
                if (!c.beforeSend || c.beforeSend.call(h, x, c) !== !1 && E !== 2) {
        S = "abort";
                for (l in { success: 1, error: 1, complete: 1 })
                x[l](c[l]);
                o = kn(xn, c, n, x);
                if (!o)
                T( - 1, "No Transport");
                else {
                x.readyState = 1, f && p.trigger("ajaxSend", [x, c]), c.async && c.timeout > 0 && (u = setTimeout(function () {
                x.abort("timeout");
                }, c.timeout));
                        try {
                        E = 1, o.send(b, T);
                        }
                catch (k) {
                if (!(E < 2))
                        throw k;
                        T( - 1, k);
                }
                }
        return x;
        }
        return x.abort();
        }, active: 0, lastModified: {}, etag: {} });
                var Mn = [], _n = /\?/, Dn = /(=)\?(?=&|$)|\?\?/, Pn = v.now();
                v.ajaxSetup({ jsonp: "callback", jsonpCallback: function () {
                var e = Mn.pop() || v.expando + "_" + Pn++;
                        return this[e] = !0, e;
                } }), v.ajaxPrefilter("json jsonp", function (n, r, i) {
        var s, o, u, a = n.data, f = n.url, l = n.jsonp !== !1, c = l && Dn.test(f), h = l && !c && typeof a == "string" && !(n.contentType || "").indexOf("application/x-www-form-urlencoded") && Dn.test(a);
                if (n.dataTypes[0] === "jsonp" || c || h)
                return s = n.jsonpCallback = v.isFunction(n.jsonpCallback) ? n.jsonpCallback() : n.jsonpCallback, o = e[s], c ? n.url = f.replace(Dn, "$1" + s) : h ? n.data = a.replace(Dn, "$1" + s) : l && (n.url += (_n.test(f) ? "&" : "?") + n.jsonp + "=" + s), n.converters["script json"] = function () {
        return u || v.error(s + " was not called"), u[0];
        }, n.dataTypes[0] = "json", e[s] = function () {
        u = arguments;
        }, i.always(function () {
        e[s] = o, n[s] && (n.jsonpCallback = r.jsonpCallback, Mn.push(s)), u && v.isFunction(o) && o(u[0]), u = o = t;
        }), "script";
        }), v.ajaxSetup({ accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" }, contents: { script: /javascript|ecmascript/ }, converters: { "text script": function (e) {
        return v.globalEval(e), e;
        } } }), v.ajaxPrefilter("script", function (e) {
        e.cache === t && (e.cache = !1), e.crossDomain && (e.type = "GET", e.global = !1);
        }), v.ajaxTransport("script", function (e) {
        if (e.crossDomain) {
        var n, r = i.head || i.getElementsByTagName("head")[0] || i.documentElement;
                return { send: function (s, o) {
                n = i.createElement("script"), n.async = "async", e.scriptCharset && (n.charset = e.scriptCharset), n.src = e.url, n.onload = n.onreadystatechange = function (e, i) {
                if (i || !n.readyState || /loaded|complete/.test(n.readyState))
                        n.onload = n.onreadystatechange = null, r && n.parentNode && r.removeChild(n), n = t, i || o(200, "success");
                }, r.insertBefore(n, r.firstChild);
                }, abort: function () {
                n && n.onload(0, 1);
                } };
        }
        });
                var Hn, Bn = e.ActiveXObject ? function () {
                for (var e in Hn)
                        Hn[e](0, 1);
                } : !1, jn = 0;
                v.ajaxSettings.xhr = e.ActiveXObject ? function () {
                return !this.isLocal && Fn() || In();
                } : Fn, function (e) {
        v.extend(v.support, { ajax: !!e, cors: !!e && "withCredentials" in e });
        }(v.ajaxSettings.xhr()), v.support.ajax && v.ajaxTransport(function (n) {
        if (!n.crossDomain || v.support.cors) {
        var r;
                return { send: function (i, s) {
                var o, u, a = n.xhr();
                        n.username ? a.open(n.type, n.url, n.async, n.username, n.password) : a.open(n.type, n.url, n.async);
                        if (n.xhrFields)
                        for (u in n.xhrFields)
                        a[u] = n.xhrFields[u];
                        n.mimeType && a.overrideMimeType && a.overrideMimeType(n.mimeType), !n.crossDomain && !i["X-Requested-With"] && (i["X-Requested-With"] = "XMLHttpRequest");
                        try {
                        for (u in i)
                                a.setRequestHeader(u, i[u]);
                        }
                catch (f) {
                }
                a.send(n.hasContent && n.data || null), r = function (e, i) {
                var u, f, l, c, h;
                        try {
                        if (r && (i || a.readyState === 4)) {
                        r = t, o && (a.onreadystatechange = v.noop, Bn && delete Hn[o]);
                                if (i)
                                a.readyState !== 4 && a.abort();
                                else {
                                u = a.status, l = a.getAllResponseHeaders(), c = {}, h = a.responseXML, h && h.documentElement && (c.xml = h);
                                        try {
                                        c.text = a.responseText;
                                        }
                                catch (p) {
                                }
                                try {
                                f = a.statusText;
                                }
                                catch (p) {
                                f = "";
                                }
                                !u && n.isLocal && !n.crossDomain ? u = c.text ? 200 : 404 : u === 1223 && (u = 204);
                                }
                        }
                        }
                catch (d) {
                i || s( - 1, d);
                }
                c && s(u, f, c, l);
                }, n.async ? a.readyState === 4 ? setTimeout(r, 0) : (o = ++jn, Bn && (Hn || (Hn = {}, v(e).unload(Bn)), Hn[o] = r), a.onreadystatechange = r) : r();
                }, abort: function () {
                r && r(0, 1);
                } };
        }
        });
                var qn, Rn, Un = /^(?:toggle|show|hide)$/, zn = new RegExp("^(?:([-+])=|)(" + m + ")([a-z%]*)$", "i"), Wn = /queueHooks$/, Xn = [Gn], Vn = { "*": [function (e, t) {
        var n, r, i = this.createTween(e, t), s = zn.exec(t), o = i.cur(), u = + o || 0, a = 1, f = 20;
                if (s) {
        n = + s[2], r = s[3] || (v.cssNumber[e] ? "" : "px");
                if (r !== "px" && u) {
        u = v.css(i.elem, e, !0) || n || 1;
                do
                a = a || ".5", u /= a, v.style(i.elem, e, u + r);
                while (a !== (a = i.cur() / o) && a !== 1 && --f);
        }
        i.unit = r, i.start = u, i.end = s[1] ? u + (s[1] + 1) * n : n;
        }
        return i;
        }] };
                v.Animation = v.extend(Kn, { tweener: function (e, t) {
                v.isFunction(e) ? (t = e, e = ["*"]) : e = e.split(" ");
                        var n, r = 0, i = e.length;
                        for (; r < i; r++)
                        n = e[r], Vn[n] = Vn[n] || [], Vn[n].unshift(t);
                }, prefilter: function (e, t) {
                t ? Xn.unshift(e) : Xn.push(e);
                } }), v.Tween = Yn, Yn.prototype = { constructor: Yn, init: function (e, t, n, r, i, s) {
        this.elem = e, this.prop = n, this.easing = i || "swing", this.options = t, this.start = this.now = this.cur(), this.end = r, this.unit = s || (v.cssNumber[n] ? "" : "px");
        }, cur: function () {
        var e = Yn.propHooks[this.prop];
                return e && e.get ? e.get(this) : Yn.propHooks._default.get(this);
        }, run: function (e) {
        var t, n = Yn.propHooks[this.prop];
                return this.options.duration ? this.pos = t = v.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : this.pos = t = e, this.now = (this.end - this.start) * t + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), n && n.set ? n.set(this) : Yn.propHooks._default.set(this), this;
        } }, Yn.prototype.init.prototype = Yn.prototype, Yn.propHooks = { _default: { get: function (e) {
        var t;
                return e.elem[e.prop] == null || !!e.elem.style && e.elem.style[e.prop] != null ? (t = v.css(e.elem, e.prop, !1, ""), !t || t === "auto" ? 0 : t) : e.elem[e.prop];
        }, set: function (e) {
        v.fx.step[e.prop] ? v.fx.step[e.prop](e) : e.elem.style && (e.elem.style[v.cssProps[e.prop]] != null || v.cssHooks[e.prop]) ? v.style(e.elem, e.prop, e.now + e.unit) : e.elem[e.prop] = e.now;
        } } }, Yn.propHooks.scrollTop = Yn.propHooks.scrollLeft = { set: function (e) {
        e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now);
        } }, v.each(["toggle", "show", "hide"], function (e, t) {
        var n = v.fn[t];
                v.fn[t] = function (r, i, s) {
        return r == null || typeof r == "boolean" || !e && v.isFunction(r) && v.isFunction(i) ? n.apply(this, arguments) : this.animate(Zn(t, !0), r, i, s);
        };
        }), v.fn.extend({ fadeTo: function (e, t, n, r) {
        return this.filter(Gt).css("opacity", 0).show().end().animate({ opacity: t }, e, n, r);
        }, animate: function (e, t, n, r) {
        var i = v.isEmptyObject(e), s = v.speed(t, n, r), o = function () {
        var t = Kn(this, v.extend({}, e), s);
                i && t.stop(!0);
        };
                return i || s.queue === !1 ? this.each(o) : this.queue(s.queue, o);
        }, stop: function (e, n, r) {
        var i = function (e) {
        var t = e.stop;
                delete e.stop, t(r);
        };
                return typeof e != "string" && (r = n, n = e, e = t), n && e !== !1 && this.queue(e || "fx", []), this.each(function () {
        var t = !0, n = e != null && e + "queueHooks", s = v.timers, o = v._data(this);
                if (n)
                o[n] && o[n].stop && i(o[n]);
                else
                for (n in o)
                o[n] && o[n].stop && Wn.test(n) && i(o[n]);
                for (n = s.length; n--; )
                s[n].elem === this && (e == null || s[n].queue === e) && (s[n].anim.stop(r), t = !1, s.splice(n, 1));
                (t || !r) && v.dequeue(this, e);
        });
        } }), v.each({ slideDown: Zn("show"), slideUp: Zn("hide"), slideToggle: Zn("toggle"), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle" } }, function (e, t) {
        v.fn[e] = function (e, n, r) {
        return this.animate(t, e, n, r);
        };
        }), v.speed = function (e, t, n) {
        var r = e && typeof e == "object" ? v.extend({}, e) : { complete: n || !n && t || v.isFunction(e) && e, duration: e, easing: n && t || t && !v.isFunction(t) && t };
                r.duration = v.fx.off ? 0 : typeof r.duration == "number" ? r.duration : r.duration in v.fx.speeds ? v.fx.speeds[r.duration] : v.fx.speeds._default;
                if (r.queue == null || r.queue === !0)
                r.queue = "fx";
                return r.old = r.complete, r.complete = function () {
                v.isFunction(r.old) && r.old.call(this), r.queue && v.dequeue(this, r.queue);
                }, r;
        }, v.easing = { linear: function (e) {
        return e;
        }, swing: function (e) {
        return .5 - Math.cos(e * Math.PI) / 2;
        } }, v.timers = [], v.fx = Yn.prototype.init, v.fx.tick = function () {
        var e, n = v.timers, r = 0;
                qn = v.now();
                for (; r < n.length; r++)
                e = n[r], !e() && n[r] === e && n.splice(r--, 1);
                n.length || v.fx.stop(), qn = t;
        }, v.fx.timer = function (e) {
        e() && v.timers.push(e) && !Rn && (Rn = setInterval(v.fx.tick, v.fx.interval));
        }, v.fx.interval = 13, v.fx.stop = function () {
        clearInterval(Rn), Rn = null;
        }, v.fx.speeds = { slow: 600, fast: 200, _default: 400 }, v.fx.step = {}, v.expr && v.expr.filters && (v.expr.filters.animated = function (e) {
        return v.grep(v.timers, function (t) {
        return e === t.elem;
        }).length;
        });
                var er = /^(?:body|html)$/i;
                v.fn.offset = function (e) {
                if (arguments.length)
                        return e === t ? this : this.each(function (t) {
                        v.offset.setOffset(this, e, t);
                        });
                        var n, r, i, s, o, u, a, f = { top: 0, left: 0 }, l = this[0], c = l && l.ownerDocument;
                        if (!c)
                        return;
                        return (r = c.body) === l ? v.offset.bodyOffset(l) : (n = c.documentElement, v.contains(n, l) ? (typeof l.getBoundingClientRect != "undefined" && (f = l.getBoundingClientRect()), i = tr(c), s = n.clientTop || r.clientTop || 0, o = n.clientLeft || r.clientLeft || 0, u = i.pageYOffset || n.scrollTop, a = i.pageXOffset || n.scrollLeft, { top: f.top + u - s, left: f.left + a - o }) : f);
                }, v.offset = { bodyOffset: function (e) {
        var t = e.offsetTop, n = e.offsetLeft;
                return v.support.doesNotIncludeMarginInBodyOffset && (t += parseFloat(v.css(e, "marginTop")) || 0, n += parseFloat(v.css(e, "marginLeft")) || 0), { top: t, left: n };
        }, setOffset: function (e, t, n) {
        var r = v.css(e, "position");
                r === "static" && (e.style.position = "relative");
                var i = v(e), s = i.offset(), o = v.css(e, "top"), u = v.css(e, "left"), a = (r === "absolute" || r === "fixed") && v.inArray("auto", [o, u]) > - 1, f = {}, l = {}, c, h;
                a ? (l = i.position(), c = l.top, h = l.left) : (c = parseFloat(o) || 0, h = parseFloat(u) || 0), v.isFunction(t) && (t = t.call(e, n, s)), t.top != null && (f.top = t.top - s.top + c), t.left != null && (f.left = t.left - s.left + h), "using" in t ? t.using.call(e, f) : i.css(f);
        } }, v.fn.extend({ position: function () {
        if (!this[0])
                return;
                var e = this[0], t = this.offsetParent(), n = this.offset(), r = er.test(t[0].nodeName) ? { top: 0, left: 0 } : t.offset();
                return n.top -= parseFloat(v.css(e, "marginTop")) || 0, n.left -= parseFloat(v.css(e, "marginLeft")) || 0, r.top += parseFloat(v.css(t[0], "borderTopWidth")) || 0, r.left += parseFloat(v.css(t[0], "borderLeftWidth")) || 0, { top: n.top - r.top, left: n.left - r.left };
        }, offsetParent: function () {
        return this.map(function () {
        var e = this.offsetParent || i.body;
                while (e && !er.test(e.nodeName) && v.css(e, "position") === "static")
                e = e.offsetParent;
                return e || i.body;
        });
        } }), v.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function (e, n) {
        var r = /Y/.test(n);
                v.fn[e] = function (i) {
        return v.access(this, function (e, i, s) {
        var o = tr(e);
                if (s === t)
                return o ? n in o ? o[n] : o.document.documentElement[i] : e[i];
                o ? o.scrollTo(r ? v(o).scrollLeft() : s, r ? s : v(o).scrollTop()) : e[i] = s;
        }, e, i, arguments.length, null);
        };
        }), v.each({ Height: "height", Width: "width" }, function (e, n) {
        v.each({ padding: "inner" + e, content: n, "": "outer" + e }, function (r, i) {
        v.fn[i] = function (i, s) {
        var o = arguments.length && (r || typeof i != "boolean"), u = r || (i === !0 || s === !0 ? "margin" : "border");
                return v.access(this, function (n, r, i) {
                var s;
                        return v.isWindow(n) ? n.document.documentElement["client" + e] : n.nodeType === 9 ? (s = n.documentElement, Math.max(n.body["scroll" + e], s["scroll" + e], n.body["offset" + e], s["offset" + e], s["client" + e])) : i === t ? v.css(n, r, i, u) : v.style(n, r, i, u);
                }, n, o ? i : t, o, null);
        };
        });
        }), e.jQuery = e.$ = v, typeof define == "function" && define.amd && define.amd.jQuery && define("jquery", [], function () {
        return v;
        });
                })(window);
        ;
        jq183 = jQuery.noConflict(true);
        if (!jQuery)
        jQuery = jq183;
        (function (t) {
        "use strict";
                var e = t.GreenSockGlobals || t, i = function (t) {
                var i, s = t.split("."), r = e;
                        for (i = 0; s.length > i; i++)
                        r[s[i]] = r = r[s[i]] || {};
                        return r;
                }, s = i("com.greensock.utils"), r = function (t) {
        var e = t.nodeType, i = "";
                if (1 === e || 9 === e || 11 === e) {
        if ("string" == typeof t.textContent)
                return t.textContent;
                for (t = t.firstChild; t; t = t.nextSibling)
                i += r(t);
        }
        else if (3 === e || 4 === e)
                return t.nodeValue;
                return i;
        }, n = document, a = n.defaultView ? n.defaultView.getComputedStyle : function () {
        }, o = /([A-Z])/g, h = function (t, e, i, s) {
        var r;
                return (i = i || a(t, null)) ? (t = i.getPropertyValue(e.replace(o, "-$1").toLowerCase()), r = t || i.length ? t : i[e]) : t.currentStyle && (i = t.currentStyle, r = i[e]), s ? r : parseInt(r, 10) || 0;
        }, l = function (t) {
        return t.length && t[0] && (t[0].nodeType && t[0].style && !t.nodeType || t[0].length && t[0][0]) ? !0 : !1;
        }, _ = function (t) {
        var e, i, s, r = [], n = t.length;
                for (e = 0; n > e; e++)
                if (i = t[e], l(i))
                for (s = i.length, s = 0; i.length > s; s++)
                r.push(i[s]);
                else
                r.push(i);
                return r;
        }, u = ")eefec303079ad17405c", c = /(?:<br>|<br\/>|<br \/>)/gi, p = n.all && !n.addEventListener, f = "<div style='position:relative;display:inline-block;" + (p ? "*display:inline;*zoom:1;'" : "'"), m = function (t) {
        t = t || "";
                var e = - 1 !== t.indexOf("++"), i = 1;
                return e && (t = t.split("++").join("")), function () {
        return f + (t ? " class='" + t + (e ? i++ : "") + "'>" : ">");
        };
        }, d = s.SplitText = e.SplitText = function (t, e) {
        if ("string" == typeof t && (t = d.selector(t)), !t)
                throw "cannot split a null element.";
                this.elements = l(t) ? _(t) : [t], this.chars = [], this.words = [], this.lines = [], this._originals = [], this.vars = e || {}, this.split(e);
        }, g = function (t, e, i, s, o) {
        c.test(t.innerHTML) && (t.innerHTML = t.innerHTML.replace(c, u));
                var l, _, p, f, d, g, v, y, T, w, b, x, P, S = r(t), C = e.type || e.split || "chars,words,lines", k = - 1 !== C.indexOf("lines") ? [] : null, R = - 1 !== C.indexOf("words"), A = - 1 !== C.indexOf("chars"), D = "absolute" === e.position || e.absolute === !0, O = D ? "&#173; " : " ", M = - 999, L = a(t), I = h(t, "paddingLeft", L), E = h(t, "borderBottomWidth", L) + h(t, "borderTopWidth", L), N = h(t, "borderLeftWidth", L) + h(t, "borderRightWidth", L), F = h(t, "paddingTop", L) + h(t, "paddingBottom", L), U = h(t, "paddingLeft", L) + h(t, "paddingRight", L), X = h(t, "textAlign", L, !0), z = t.clientHeight, B = t.clientWidth, j = S.length, Y = "</div>", q = m(e.wordsClass), V = m(e.charsClass), Q = - 1 !== (e.linesClass || "").indexOf("++"), G = e.linesClass;
                for (Q && (G = G.split("++").join("")), p = q(), f = 0; j > f; f++)
                g = S.charAt(f), ")" === g && S.substr(f, 20) === u ? (p += Y + "<BR/>", f !== j - 1 && (p += " " + q()), f += 19) : " " === g && " " !== S.charAt(f - 1) && f !== j - 1 ? (p += Y, f !== j - 1 && (p += O + q())) : p += A && " " !== g ? V() + g + "</div>" : g;
                for (t.innerHTML = p + Y, d = t.getElementsByTagName("*"), j = d.length, v = [], f = 0; j > f; f++)
                v[f] = d[f];
                if (k || D)
                for (f = 0; j > f; f++)
                y = v[f], _ = y.parentNode === t, (_ || D || A && !R) && (T = y.offsetTop, k && _ && T !== M && "BR" !== y.nodeName && (l = [], k.push(l), M = T), D && (y._x = y.offsetLeft, y._y = T, y._w = y.offsetWidth, y._h = y.offsetHeight), k && (R !== _ && A || (l.push(y), y._x -= I), _ && f && (v[f - 1]._wordEnd = !0)));
                for (f = 0; j > f; f++)
                y = v[f], _ = y.parentNode === t, "BR" !== y.nodeName ? (D && (b = y.style, R || _ || (y._x += y.parentNode._x, y._y += y.parentNode._y), b.left = y._x + "px", b.top = y._y + "px", b.position = "absolute", b.display = "block", b.width = y._w + 1 + "px", b.height = y._h + "px"), R ? _ ? s.push(y) : A && i.push(y) : _ ? (t.removeChild(y), v.splice(f--, 1), j--) : !_ && A && (T = !k && !D && y.nextSibling, t.appendChild(y), T || t.appendChild(n.createTextNode(" ")), i.push(y))) : k || D ? (t.removeChild(y), v.splice(f--, 1), j--) : R || t.appendChild(y);
                if (k) {
        for (D && (w = n.createElement("div"), t.appendChild(w), x = w.offsetWidth + "px", T = w.offsetParent === t ? 0 : t.offsetLeft, t.removeChild(w)), b = t.style.cssText, t.style.cssText = "display:none;"; t.firstChild; )
                t.removeChild(t.firstChild);
                for (P = !D || !R && !A, f = 0; k.length > f; f++) {
        for (l = k[f], w = n.createElement("div"), w.style.cssText = "display:block;text-align:" + X + ";position:" + (D ? "absolute;" : "relative;"), G && (w.className = G + (Q ? f + 1 : "")), o.push(w), j = l.length, d = 0; j > d; d++)
                "BR" !== l[d].nodeName && (y = l[d], w.appendChild(y), P && (y._wordEnd || R) && w.appendChild(n.createTextNode(" ")), D && (0 === d && (w.style.top = y._y + "px", w.style.left = I + T + "px"), y.style.top = "0px", T && (y.style.left = y._x - T + "px")));
                R || A || (w.innerHTML = r(w).split(String.fromCharCode(160)).join(" ")), D && (w.style.width = x, w.style.height = y._h + "px"), t.appendChild(w);
        }
        t.style.cssText = b;
        }
        D && (z > t.clientHeight && (t.style.height = z - F + "px", z > t.clientHeight && (t.style.height = z + E + "px")), B > t.clientWidth && (t.style.width = B - U + "px", B > t.clientWidth && (t.style.width = B + N + "px")));
        }, v = d.prototype;
                v.split = function (t) {
                this.isSplit && this.revert(), this.vars = t || this.vars, this._originals.length = this.chars.length = this.words.length = this.lines.length = 0;
                        for (var e = 0; this.elements.length > e; e++)
                        this._originals[e] = this.elements[e].innerHTML, g(this.elements[e], this.vars, this.chars, this.words, this.lines);
                        return this.isSplit = !0, this;
                }, v.revert = function () {
        if (!this._originals)
                throw "revert() call wasn't scoped properly.";
                for (var t = this._originals.length; --t > - 1; )
                this.elements[t].innerHTML = this._originals[t];
                return this.chars = [], this.words = [], this.lines = [], this.isSplit = !1, this;
        }, d.selector = t.$ || t.jQuery || function (e) {
        return t.$ ? (d.selector = t.$, t.$(e)) : n ? n.getElementById("#" === e.charAt(0) ? e.substr(1) : e) : e;
        };
                })(window || {});
        (window._gsQueue || (window._gsQueue = [])).push(function () {
"use strict";
        window._gsDefine("TweenMax", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function (t, e, i) {
        var s = [].slice, r = function (t, e, s) {
        i.call(this, t, e, s), this._cycle = 0, this._yoyo = this.vars.yoyo === !0, this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._dirty = !0, this.render = r.prototype.render;
        }, n = 1e-10, a = i._internals.isSelector, o = i._internals.isArray, h = r.prototype = i.to({}, .1, {}), l = [];
                r.version = "1.11.2", h.constructor = r, h.kill()._gc = !1, r.killTweensOf = r.killDelayedCallsTo = i.killTweensOf, r.getTweensOf = i.getTweensOf, r.ticker = i.ticker, h.invalidate = function () {
        return this._yoyo = this.vars.yoyo === !0, this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._uncache(!0), i.prototype.invalidate.call(this);
        }, h.updateTo = function (t, e) {
        var s, r = this.ratio;
                e && this.timeline && this._startTime < this._timeline._time && (this._startTime = this._timeline._time, this._uncache(!1), this._gc ? this._enabled(!0, !1) : this._timeline.insert(this, this._startTime - this._delay));
                for (s in t)
                this.vars[s] = t[s];
                if (this._initted)
                if (e)
                this._initted = !1;
                else if (this._notifyPluginsOfEnabled && this._firstPT && i._onPluginEvent("_onDisable", this), this._time / this._duration > .998) {
        var n = this._time;
                this.render(0, !0, !1), this._initted = !1, this.render(n, !0, !1);
        }
        else if (this._time > 0) {
        this._initted = !1, this._init();
                for (var a, o = 1 / (1 - r), h = this._firstPT; h; )
                a = h.s + h.c, h.c *= o, h.s = a - h.c, h = h._next;
        }
        return this;
        }, h.render = function (t, e, i) {
        this._initted || 0 === this._duration && this.vars.repeat && this.invalidate();
                var s, r, a, o, h, _, u, p, f = this._dirty ? this.totalDuration() : this._totalDuration, c = this._time, m = this._totalTime, d = this._cycle, g = this._duration;
                if (t >= f ? (this._totalTime = f, this._cycle = this._repeat, this._yoyo && 0 !== (1 & this._cycle) ? (this._time = 0, this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0) : (this._time = g, this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1), this._reversed || (s = !0, r = "onComplete"), 0 === g && (p = this._rawPrevTime, (0 === t || 0 > p || p === n) && p !== t && (i = !0, p > n && (r = "onReverseComplete")), this._rawPrevTime = p = !e || t ? t : n)) : 1e-7 > t ? (this._totalTime = this._time = this._cycle = 0, this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0, (0 !== m || 0 === g && this._rawPrevTime > n) && (r = "onReverseComplete", s = this._reversed), 0 > t ? (this._active = !1, 0 === g && (this._rawPrevTime >= 0 && (i = !0), this._rawPrevTime = p = !e || t ? t : n)) : this._initted || (i = !0)) : (this._totalTime = this._time = t, 0 !== this._repeat && (o = g + this._repeatDelay, this._cycle = this._totalTime / o >> 0, 0 !== this._cycle && this._cycle === this._totalTime / o && this._cycle--, this._time = this._totalTime - this._cycle * o, this._yoyo && 0 !== (1 & this._cycle) && (this._time = g - this._time), this._time > g ? this._time = g : 0 > this._time && (this._time = 0)), this._easeType ? (h = this._time / g, _ = this._easeType, u = this._easePower, (1 === _ || 3 === _ && h >= .5) && (h = 1 - h), 3 === _ && (h *= 2), 1 === u ? h *= h : 2 === u ? h *= h * h : 3 === u ? h *= h * h * h : 4 === u && (h *= h * h * h * h), this.ratio = 1 === _ ? 1 - h : 2 === _ ? h : .5 > this._time / g ? h / 2 : 1 - h / 2) : this.ratio = this._ease.getRatio(this._time / g)), c === this._time && !i && d === this._cycle)
                return m !== this._totalTime && this._onUpdate && (e || this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || l)), void 0;
                if (!this._initted) {
        if (this._init(), !this._initted || this._gc)
                return;
                this._time && !s ? this.ratio = this._ease.getRatio(this._time / g) : s && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1));
        }
        for (this._active || !this._paused && this._time !== c && t >= 0 && (this._active = !0), 0 === m && (this._startAt && (t >= 0 ? this._startAt.render(t, e, i) : r || (r = "_dummyGS")), this.vars.onStart && (0 !== this._totalTime || 0 === g) && (e || this.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || l))), a = this._firstPT; a; )
                a.f ? a.t[a.p](a.c * this.ratio + a.s) : a.t[a.p] = a.c * this.ratio + a.s, a = a._next;
                this._onUpdate && (0 > t && this._startAt && this._startTime && this._startAt.render(t, e, i), e || this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || l)), this._cycle !== d && (e || this._gc || this.vars.onRepeat && this.vars.onRepeat.apply(this.vars.onRepeatScope || this, this.vars.onRepeatParams || l)), r && (this._gc || (0 > t && this._startAt && !this._onUpdate && this._startTime && this._startAt.render(t, e, i), s && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !e && this.vars[r] && this.vars[r].apply(this.vars[r + "Scope"] || this, this.vars[r + "Params"] || l), 0 === g && this._rawPrevTime === n && p !== n && (this._rawPrevTime = 0)));
        }, r.to = function (t, e, i) {
        return new r(t, e, i);
        }, r.from = function (t, e, i) {
        return i.runBackwards = !0, i.immediateRender = 0 != i.immediateRender, new r(t, e, i);
        }, r.fromTo = function (t, e, i, s) {
        return s.startAt = i, s.immediateRender = 0 != s.immediateRender && 0 != i.immediateRender, new r(t, e, s);
        }, r.staggerTo = r.allTo = function (t, e, n, h, _, u, p) {
        h = h || 0;
                var f, c, m, d, g = n.delay || 0, v = [], y = function () {
        n.onComplete && n.onComplete.apply(n.onCompleteScope || this, arguments), _.apply(p || this, u || l);
        };
                for (o(t) || ("string" == typeof t && (t = i.selector(t) || t), a(t) && (t = s.call(t, 0))), f = t.length, m = 0; f > m; m++) {
        c = {};
                for (d in n)
                c[d] = n[d];
                c.delay = g, m === f - 1 && _ && (c.onComplete = y), v[m] = new r(t[m], e, c), g += h;
        }
        return v;
        }, r.staggerFrom = r.allFrom = function (t, e, i, s, n, a, o) {
        return i.runBackwards = !0, i.immediateRender = 0 != i.immediateRender, r.staggerTo(t, e, i, s, n, a, o);
        }, r.staggerFromTo = r.allFromTo = function (t, e, i, s, n, a, o, h) {
        return s.startAt = i, s.immediateRender = 0 != s.immediateRender && 0 != i.immediateRender, r.staggerTo(t, e, s, n, a, o, h);
        }, r.delayedCall = function (t, e, i, s, n) {
        return new r(e, 0, { delay: t, onComplete: e, onCompleteParams: i, onCompleteScope: s, onReverseComplete: e, onReverseCompleteParams: i, onReverseCompleteScope: s, immediateRender: !1, useFrames: n, overwrite: 0 });
        }, r.set = function (t, e) {
        return new r(t, 0, e);
        }, r.isTweening = function (t) {
        return i.getTweensOf(t, !0).length > 0;
        };
                var _ = function (t, e) {
                for (var s = [], r = 0, n = t._first; n; )
                        n instanceof i ? s[r++] = n : (e && (s[r++] = n), s = s.concat(_(n, e)), r = s.length), n = n._next;
                        return s;
                }, u = r.getAllTweens = function (e) {
        return _(t._rootTimeline, e).concat(_(t._rootFramesTimeline, e));
        };
                r.killAll = function (t, i, s, r) {
                null == i && (i = !0), null == s && (s = !0);
                        var n, a, o, h = u(0 != r), l = h.length, _ = i && s && r;
                        for (o = 0; l > o; o++)
                        a = h[o], (_ || a instanceof e || (n = a.target === a.vars.onComplete) && s || i && !n) && (t ? a.totalTime(a.totalDuration()) : a._enabled(!1, !1));
                }, r.killChildTweensOf = function (t, e) {
        if (null != t) {
        var n, h, l, _, u, p = i._tweenLookup;
                if ("string" == typeof t && (t = i.selector(t) || t), a(t) && (t = s(t, 0)), o(t))
                for (_ = t.length; --_ > - 1; )
                r.killChildTweensOf(t[_], e);
                else {
                n = [];
                        for (l in p)
                        for (h = p[l].target.parentNode; h; )
                        h === t && (n = n.concat(p[l].tweens)), h = h.parentNode;
                        for (u = n.length, _ = 0; u > _; _++)
                        e && n[_].totalTime(n[_].totalDuration()), n[_]._enabled(!1, !1);
                }
        }
        };
                var p = function (t, i, s, r) {
                i = i !== !1, s = s !== !1, r = r !== !1;
                        for (var n, a, o = u(r), h = i && s && r, l = o.length; --l > - 1; )
                        a = o[l], (h || a instanceof e || (n = a.target === a.vars.onComplete) && s || i && !n) && a.paused(t);
                };
                return r.pauseAll = function (t, e, i) {
                p(!0, t, e, i);
                }, r.resumeAll = function (t, e, i) {
        p(!1, t, e, i);
        }, r.globalTimeScale = function (e) {
        var s = t._rootTimeline, r = i.ticker.time;
                return arguments.length ? (e = e || n, s._startTime = r - (r - s._startTime) * s._timeScale / e, s = t._rootFramesTimeline, r = i.ticker.frame, s._startTime = r - (r - s._startTime) * s._timeScale / e, s._timeScale = t._rootTimeline._timeScale = e, e) : s._timeScale;
        }, h.progress = function (t) {
        return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - t : t) + this._cycle * (this._duration + this._repeatDelay), !1) : this._time / this.duration();
        }, h.totalProgress = function (t) {
        return arguments.length ? this.totalTime(this.totalDuration() * t, !1) : this._totalTime / this.totalDuration();
        }, h.time = function (t, e) {
        return arguments.length ? (this._dirty && this.totalDuration(), t > this._duration && (t = this._duration), this._yoyo && 0 !== (1 & this._cycle) ? t = this._duration - t + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (t += this._cycle * (this._duration + this._repeatDelay)), this.totalTime(t, e)) : this._time;
        }, h.duration = function (e) {
        return arguments.length ? t.prototype.duration.call(this, e) : this._duration;
        }, h.totalDuration = function (t) {
        return arguments.length ? - 1 === this._repeat ? this : this.duration((t - this._repeat * this._repeatDelay) / (this._repeat + 1)) : (this._dirty && (this._totalDuration = - 1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat, this._dirty = !1), this._totalDuration);
        }, h.repeat = function (t) {
        return arguments.length ? (this._repeat = t, this._uncache(!0)) : this._repeat;
        }, h.repeatDelay = function (t) {
        return arguments.length ? (this._repeatDelay = t, this._uncache(!0)) : this._repeatDelay;
        }, h.yoyo = function (t) {
        return arguments.length ? (this._yoyo = t, this) : this._yoyo;
        }, r;
        }, !0), window._gsDefine("TimelineLite", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function (t, e, i) {
var s = function (t) {
e.call(this, t), this._labels = {}, this.autoRemoveChildren = this.vars.autoRemoveChildren === !0, this.smoothChildTiming = this.vars.smoothChildTiming === !0, this._sortChildren = !0, this._onUpdate = this.vars.onUpdate;
        var i, s, r = this.vars;
        for (s in r)
        i = r[s], a(i) && - 1 !== i.join("").indexOf("{self}") && (r[s] = this._swapSelfInParams(i));
        a(r.tweens) && this.add(r.tweens, 0, r.align, r.stagger);
}, r = 1e-10, n = i._internals.isSelector, a = i._internals.isArray, o = [], h = function (t) {
var e, i = {};
        for (e in t)
        i[e] = t[e];
        return i;
}, l = function (t, e, i, s) {
t._timeline.pause(t._startTime), e && e.apply(s || t._timeline, i || o);
}, _ = o.slice, u = s.prototype = new e;
        return s.version = "1.11.0", u.constructor = s, u.kill()._gc = !1, u.to = function (t, e, s, r) {
return e ? this.add(new i(t, e, s), r) : this.set(t, s, r);
}, u.from = function (t, e, s, r) {
return this.add(i.from(t, e, s), r);
}, u.fromTo = function (t, e, s, r, n) {
return e ? this.add(i.fromTo(t, e, s, r), n) : this.set(t, r, n);
}, u.staggerTo = function (t, e, r, a, o, l, u, p) {
var f, c = new s({ onComplete: l, onCompleteParams: u, onCompleteScope: p });
        for ("string" == typeof t && (t = i.selector(t) || t), n(t) && (t = _.call(t, 0)), a = a || 0, f = 0; t.length > f; f++)
        r.startAt && (r.startAt = h(r.startAt)), c.to(t[f], e, h(r), f * a);
        return this.add(c, o);
}, u.staggerFrom = function (t, e, i, s, r, n, a, o) {
return i.immediateRender = 0 != i.immediateRender, i.runBackwards = !0, this.staggerTo(t, e, i, s, r, n, a, o);
}, u.staggerFromTo = function (t, e, i, s, r, n, a, o, h) {
return s.startAt = i, s.immediateRender = 0 != s.immediateRender && 0 != i.immediateRender, this.staggerTo(t, e, s, r, n, a, o, h);
}, u.call = function (t, e, s, r) {
return this.add(i.delayedCall(0, t, e, s), r);
}, u.set = function (t, e, s) {
return s = this._parseTimeOrLabel(s, 0, !0), null == e.immediateRender && (e.immediateRender = s === this._time && !this._paused), this.add(new i(t, 0, e), s);
}, s.exportRoot = function (t, e) {
t = t || {}, null == t.smoothChildTiming && (t.smoothChildTiming = !0);
        var r, n, a = new s(t), o = a._timeline;
        for (null == e && (e = !0), o._remove(a, !0), a._startTime = 0, a._rawPrevTime = a._time = a._totalTime = o._time, r = o._first; r; )
        n = r._next, e && r instanceof i && r.target === r.vars.onComplete || a.add(r, r._startTime - r._delay), r = n;
        return o.add(a, 0), a;
}, u.add = function (r, n, o, h) {
var l, _, u, p, f, c;
        if ("number" != typeof n && (n = this._parseTimeOrLabel(n, 0, !0, r)), !(r instanceof t)) {
if (r instanceof Array || r && r.push && a(r)) {
for (o = o || "normal", h = h || 0, l = n, _ = r.length, u = 0; _ > u; u++)
        a(p = r[u]) && (p = new s({ tweens: p })), this.add(p, l), "string" != typeof p && "function" != typeof p && ("sequence" === o ? l = p._startTime + p.totalDuration() / p._timeScale : "start" === o && (p._startTime -= p.delay())), l += h;
        return this._uncache(!0);
}
if ("string" == typeof r)
        return this.addLabel(r, n);
        if ("function" != typeof r)
        throw "Cannot add " + r + " into the timeline; it is not a tween, timeline, function, or string.";
        r = i.delayedCall(0, r);
}
if (e.prototype.add.call(this, r, n), this._gc && !this._paused && this._duration < this.duration())
        for (f = this, c = f.rawTime() > r._startTime; f._gc && f._timeline; )
        f._timeline.smoothChildTiming && c ? f.totalTime(f._totalTime, !0) : f._enabled(!0, !1), f = f._timeline;
        return this;
}, u.remove = function (e) {
if (e instanceof t)
        return this._remove(e, !1);
        if (e instanceof Array || e && e.push && a(e)) {
for (var i = e.length; --i > - 1; )
        this.remove(e[i]);
        return this;
}
return "string" == typeof e ? this.removeLabel(e) : this.kill(null, e);
}, u._remove = function (t, i) {
e.prototype._remove.call(this, t, i);
        var s = this._last;
        return s ? this._time > s._startTime + s._totalDuration / s._timeScale && (this._time = this.duration(), this._totalTime = this._totalDuration) : this._time = this._totalTime = 0, this;
}, u.append = function (t, e) {
return this.add(t, this._parseTimeOrLabel(null, e, !0, t));
}, u.insert = u.insertMultiple = function (t, e, i, s) {
return this.add(t, e || 0, i, s);
}, u.appendMultiple = function (t, e, i, s) {
return this.add(t, this._parseTimeOrLabel(null, e, !0, t), i, s);
}, u.addLabel = function (t, e) {
return this._labels[t] = this._parseTimeOrLabel(e), this;
}, u.addPause = function (t, e, i, s) {
return this.call(l, ["{self}", e, i, s], this, t);
}, u.removeLabel = function (t) {
return delete this._labels[t], this;
}, u.getLabelTime = function (t) {
return null != this._labels[t] ? this._labels[t] : - 1;
}, u._parseTimeOrLabel = function (e, i, s, r) {
var n;
        if (r instanceof t && r.timeline === this)
        this.remove(r);
        else if (r && (r instanceof Array || r.push && a(r)))
        for (n = r.length; --n > - 1; )
        r[n] instanceof t && r[n].timeline === this && this.remove(r[n]);
        if ("string" == typeof i)
        return this._parseTimeOrLabel(i, s && "number" == typeof e && null == this._labels[i] ? e - this.duration() : 0, s);
        if (i = i || 0, "string" != typeof e || !isNaN(e) && null == this._labels[e])
        null == e && (e = this.duration());
        else {
        if (n = e.indexOf("="), - 1 === n)
                return null == this._labels[e] ? s ? this._labels[e] = this.duration() + i : i : this._labels[e] + i;
                i = parseInt(e.charAt(n - 1) + "1", 10) * Number(e.substr(n + 1)), e = n > 1 ? this._parseTimeOrLabel(e.substr(0, n - 1), 0, s) : this.duration();
        }
return Number(e) + i;
}, u.seek = function (t, e) {
return this.totalTime("number" == typeof t ? t : this._parseTimeOrLabel(t), e !== !1);
}, u.stop = function () {
return this.paused(!0);
}, u.gotoAndPlay = function (t, e) {
return this.play(t, e);
}, u.gotoAndStop = function (t, e) {
return this.pause(t, e);
}, u.render = function (t, e, i) {
this._gc && this._enabled(!0, !1);
        var s, n, a, h, l, _ = this._dirty ? this.totalDuration() : this._totalDuration, u = this._time, p = this._startTime, f = this._timeScale, c = this._paused;
        if (t >= _ ? (this._totalTime = this._time = _, this._reversed || this._hasPausedChild() || (n = !0, h = "onComplete", 0 === this._duration && (0 === t || 0 > this._rawPrevTime || this._rawPrevTime === r) && this._rawPrevTime !== t && this._first && (l = !0, this._rawPrevTime > r && (h = "onReverseComplete"))), this._rawPrevTime = this._duration || !e || t ? t : r, t = _ + 1e-6) : 1e-7 > t ? (this._totalTime = this._time = 0, (0 !== u || 0 === this._duration && (this._rawPrevTime > r || 0 > t && this._rawPrevTime >= 0)) && (h = "onReverseComplete", n = this._reversed), 0 > t ? (this._active = !1, 0 === this._duration && this._rawPrevTime >= 0 && this._first && (l = !0), this._rawPrevTime = t) : (this._rawPrevTime = this._duration || !e || t ? t : r, t = 0, this._initted || (l = !0))) : this._totalTime = this._time = this._rawPrevTime = t, this._time !== u && this._first || i || l) {
if (this._initted || (this._initted = !0), this._active || !this._paused && this._time !== u && t > 0 && (this._active = !0), 0 === u && this.vars.onStart && 0 !== this._time && (e || this.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || o)), this._time >= u)
        for (s = this._first; s && (a = s._next, !this._paused || c); )
        (s._active || s._startTime <= this._time && !s._paused && !s._gc) && (s._reversed ? s.render((s._dirty ? s.totalDuration() : s._totalDuration) - (t - s._startTime) * s._timeScale, e, i) : s.render((t - s._startTime) * s._timeScale, e, i)), s = a;
        else
        for (s = this._last; s && (a = s._prev, !this._paused || c); )
        (s._active || u >= s._startTime && !s._paused && !s._gc) && (s._reversed ? s.render((s._dirty ? s.totalDuration() : s._totalDuration) - (t - s._startTime) * s._timeScale, e, i) : s.render((t - s._startTime) * s._timeScale, e, i)), s = a;
        this._onUpdate && (e || this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || o)), h && (this._gc || (p === this._startTime || f !== this._timeScale) && (0 === this._time || _ >= this.totalDuration()) && (n && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !e && this.vars[h] && this.vars[h].apply(this.vars[h + "Scope"] || this, this.vars[h + "Params"] || o)));
}
}, u._hasPausedChild = function () {
for (var t = this._first; t; ) {
if (t._paused || t instanceof s && t._hasPausedChild())
        return !0;
        t = t._next;
}
return !1;
}, u.getChildren = function (t, e, s, r) {
r = r || - 9999999999;
        for (var n = [], a = this._first, o = 0; a; )
        r > a._startTime || (a instanceof i ? e !== !1 && (n[o++] = a) : (s !== !1 && (n[o++] = a), t !== !1 && (n = n.concat(a.getChildren(!0, e, s)), o = n.length))), a = a._next;
        return n;
}, u.getTweensOf = function (t, e) {
for (var s = i.getTweensOf(t), r = s.length, n = [], a = 0; --r > - 1; )
        (s[r].timeline === this || e && this._contains(s[r])) && (n[a++] = s[r]);
        return n;
}, u._contains = function (t) {
for (var e = t.timeline; e; ) {
if (e === this)
        return !0;
        e = e.timeline;
}
return !1;
}, u.shiftChildren = function (t, e, i) {
i = i || 0;
        for (var s, r = this._first, n = this._labels; r; )
        r._startTime >= i && (r._startTime += t), r = r._next;
        if (e)
        for (s in n)
        n[s] >= i && (n[s] += t);
        return this._uncache(!0);
}, u._kill = function (t, e) {
if (!t && !e)
        return this._enabled(!1, !1);
        for (var i = e ? this.getTweensOf(e) : this.getChildren(!0, !0, !1), s = i.length, r = !1; --s > - 1; )
        i[s]._kill(t, e) && (r = !0);
        return r;
}, u.clear = function (t) {
var e = this.getChildren(!1, !0, !0), i = e.length;
        for (this._time = this._totalTime = 0; --i > - 1; )
        e[i]._enabled(!1, !1);
        return t !== !1 && (this._labels = {}), this._uncache(!0);
}, u.invalidate = function () {
for (var t = this._first; t; )
        t.invalidate(), t = t._next;
        return this;
}, u._enabled = function (t, i) {
if (t === this._gc)
        for (var s = this._first; s; )
        s._enabled(t, !0), s = s._next;
        return e.prototype._enabled.call(this, t, i);
}, u.duration = function (t) {
return arguments.length ? (0 !== this.duration() && 0 !== t && this.timeScale(this._duration / t), this) : (this._dirty && this.totalDuration(), this._duration);
}, u.totalDuration = function (t) {
if (!arguments.length) {
if (this._dirty) {
for (var e, i, s = 0, r = this._last, n = 999999999999; r; )
        e = r._prev, r._dirty && r.totalDuration(), r._startTime > n && this._sortChildren && !r._paused ? this.add(r, r._startTime - r._delay) : n = r._startTime, 0 > r._startTime && !r._paused && (s -= r._startTime, this._timeline.smoothChildTiming && (this._startTime += r._startTime / this._timeScale), this.shiftChildren( - r._startTime, !1, - 9999999999), n = 0), i = r._startTime + r._totalDuration / r._timeScale, i > s && (s = i), r = e;
        this._duration = this._totalDuration = s, this._dirty = !1;
}
return this._totalDuration;
}
return 0 !== this.totalDuration() && 0 !== t && this.timeScale(this._totalDuration / t), this;
}, u.usesFrames = function () {
for (var e = this._timeline; e._timeline; )
        e = e._timeline;
        return e === t._rootFramesTimeline;
}, u.rawTime = function () {
return this._paused ? this._totalTime : (this._timeline.rawTime() - this._startTime) * this._timeScale;
}, s;
}, !0), window._gsDefine("TimelineMax", ["TimelineLite", "TweenLite", "easing.Ease"], function (t, e, i) {
var s = function (e) {
t.call(this, e), this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._cycle = 0, this._yoyo = this.vars.yoyo === !0, this._dirty = !0;
}, r = 1e-10, n = [], a = new i(null, null, 1, 0), o = s.prototype = new t;
        return o.constructor = s, o.kill()._gc = !1, s.version = "1.11.0", o.invalidate = function () {
return this._yoyo = this.vars.yoyo === !0, this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._uncache(!0), t.prototype.invalidate.call(this);
}, o.addCallback = function (t, i, s, r) {
return this.add(e.delayedCall(0, t, s, r), i);
}, o.removeCallback = function (t, e) {
if (t)
        if (null == e)
        this._kill(null, t);
        else
        for (var i = this.getTweensOf(t, !1), s = i.length, r = this._parseTimeOrLabel(e); --s > - 1; )
        i[s]._startTime === r && i[s]._enabled(!1, !1);
        return this;
}, o.tweenTo = function (t, i) {
i = i || {};
        var s, r, o = { ease: a, overwrite: 2, useFrames: this.usesFrames(), immediateRender: !1 };
        for (s in i)
        o[s] = i[s];
        return o.time = this._parseTimeOrLabel(t), r = new e(this, Math.abs(Number(o.time) - this._time) / this._timeScale || .001, o), o.onStart = function () {
r.target.paused(!0), r.vars.time !== r.target.time() && r.duration(Math.abs(r.vars.time - r.target.time()) / r.target._timeScale), i.onStart && i.onStart.apply(i.onStartScope || r, i.onStartParams || n);
}, r;
}, o.tweenFromTo = function (t, e, i) {
i = i || {}, t = this._parseTimeOrLabel(t), i.startAt = { onComplete: this.seek, onCompleteParams: [t], onCompleteScope: this }, i.immediateRender = i.immediateRender !== !1;
        var s = this.tweenTo(e, i);
        return s.duration(Math.abs(s.vars.time - t) / this._timeScale || .001);
}, o.render = function (t, e, i) {
this._gc && this._enabled(!0, !1);
        var s, a, o, h, l, _, u = this._dirty ? this.totalDuration() : this._totalDuration, p = this._duration, f = this._time, c = this._totalTime, m = this._startTime, d = this._timeScale, g = this._rawPrevTime, v = this._paused, y = this._cycle;
        if (t >= u ? (this._locked || (this._totalTime = u, this._cycle = this._repeat), this._reversed || this._hasPausedChild() || (a = !0, h = "onComplete", 0 === this._duration && (0 === t || 0 > g || g === r) && g !== t && this._first && (l = !0, g > r && (h = "onReverseComplete"))), this._rawPrevTime = this._duration || !e || t ? t : r, this._yoyo && 0 !== (1 & this._cycle) ? this._time = t = 0 : (this._time = p, t = p + 1e-6)) : 1e-7 > t ? (this._locked || (this._totalTime = this._cycle = 0), this._time = 0, (0 !== f || 0 === p && (g > r || 0 > t && g >= 0) && !this._locked) && (h = "onReverseComplete", a = this._reversed), 0 > t ? (this._active = !1, 0 === p && g >= 0 && this._first && (l = !0), this._rawPrevTime = t) : (this._rawPrevTime = p || !e || t ? t : r, t = 0, this._initted || (l = !0))) : (0 === p && 0 > g && (l = !0), this._time = this._rawPrevTime = t, this._locked || (this._totalTime = t, 0 !== this._repeat && (_ = p + this._repeatDelay, this._cycle = this._totalTime / _ >> 0, 0 !== this._cycle && this._cycle === this._totalTime / _ && this._cycle--, this._time = this._totalTime - this._cycle * _, this._yoyo && 0 !== (1 & this._cycle) && (this._time = p - this._time), this._time > p ? (this._time = p, t = p + 1e-6) : 0 > this._time ? this._time = t = 0 : t = this._time))), this._cycle !== y && !this._locked) {
var T = this._yoyo && 0 !== (1 & y), w = T === (this._yoyo && 0 !== (1 & this._cycle)), x = this._totalTime, b = this._cycle, P = this._rawPrevTime, S = this._time;
        if (this._totalTime = y * p, y > this._cycle ? T = !T : this._totalTime += p, this._time = f, this._rawPrevTime = 0 === p ? g - 1e-5 : g, this._cycle = y, this._locked = !0, f = T ? 0 : p, this.render(f, e, 0 === p), e || this._gc || this.vars.onRepeat && this.vars.onRepeat.apply(this.vars.onRepeatScope || this, this.vars.onRepeatParams || n), w && (f = T ? p + 1e-6 : - 1e-6, this.render(f, !0, !1)), this._locked = !1, this._paused && !v)
        return;
        this._time = S, this._totalTime = x, this._cycle = b, this._rawPrevTime = P;
}
if (!(this._time !== f && this._first || i || l))
        return c !== this._totalTime && this._onUpdate && (e || this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || n)), void 0;
        if (this._initted || (this._initted = !0), this._active || !this._paused && this._totalTime !== c && t > 0 && (this._active = !0), 0 === c && this.vars.onStart && 0 !== this._totalTime && (e || this.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || n)), this._time >= f)
        for (s = this._first; s && (o = s._next, !this._paused || v); )
        (s._active || s._startTime <= this._time && !s._paused && !s._gc) && (s._reversed ? s.render((s._dirty ? s.totalDuration() : s._totalDuration) - (t - s._startTime) * s._timeScale, e, i) : s.render((t - s._startTime) * s._timeScale, e, i)), s = o;
        else
        for (s = this._last; s && (o = s._prev, !this._paused || v); )
        (s._active || f >= s._startTime && !s._paused && !s._gc) && (s._reversed ? s.render((s._dirty ? s.totalDuration() : s._totalDuration) - (t - s._startTime) * s._timeScale, e, i) : s.render((t - s._startTime) * s._timeScale, e, i)), s = o;
        this._onUpdate && (e || this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || n)), h && (this._locked || this._gc || (m === this._startTime || d !== this._timeScale) && (0 === this._time || u >= this.totalDuration()) && (a && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !e && this.vars[h] && this.vars[h].apply(this.vars[h + "Scope"] || this, this.vars[h + "Params"] || n)));
}, o.getActive = function (t, e, i) {
null == t && (t = !0), null == e && (e = !0), null == i && (i = !1);
        var s, r, n = [], a = this.getChildren(t, e, i), o = 0, h = a.length;
        for (s = 0; h > s; s++)
        r = a[s], r.isActive() && (n[o++] = r);
        return n;
}, o.getLabelAfter = function (t) {
t || 0 !== t && (t = this._time);
        var e, i = this.getLabelsArray(), s = i.length;
        for (e = 0; s > e; e++)
        if (i[e].time > t)
        return i[e].name;
        return null;
}, o.getLabelBefore = function (t) {
null == t && (t = this._time);
        for (var e = this.getLabelsArray(), i = e.length; --i > - 1; )
        if (t > e[i].time)
        return e[i].name;
        return null;
}, o.getLabelsArray = function () {
var t, e = [], i = 0;
        for (t in this._labels)
        e[i++] = { time: this._labels[t], name: t };
        return e.sort(function (t, e) {
        return t.time - e.time;
        }), e;
}, o.progress = function (t) {
return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - t : t) + this._cycle * (this._duration + this._repeatDelay), !1) : this._time / this.duration();
}, o.totalProgress = function (t) {
return arguments.length ? this.totalTime(this.totalDuration() * t, !1) : this._totalTime / this.totalDuration();
}, o.totalDuration = function (e) {
return arguments.length ? - 1 === this._repeat ? this : this.duration((e - this._repeat * this._repeatDelay) / (this._repeat + 1)) : (this._dirty && (t.prototype.totalDuration.call(this), this._totalDuration = - 1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat), this._totalDuration);
}, o.time = function (t, e) {
return arguments.length ? (this._dirty && this.totalDuration(), t > this._duration && (t = this._duration), this._yoyo && 0 !== (1 & this._cycle) ? t = this._duration - t + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (t += this._cycle * (this._duration + this._repeatDelay)), this.totalTime(t, e)) : this._time;
}, o.repeat = function (t) {
return arguments.length ? (this._repeat = t, this._uncache(!0)) : this._repeat;
}, o.repeatDelay = function (t) {
return arguments.length ? (this._repeatDelay = t, this._uncache(!0)) : this._repeatDelay;
}, o.yoyo = function (t) {
return arguments.length ? (this._yoyo = t, this) : this._yoyo;
}, o.currentLabel = function (t) {
return arguments.length ? this.seek(t, !0) : this.getLabelBefore(this._time + 1e-8);
}, s;
}, !0), function () {
var t = 180 / Math.PI, e = [], i = [], s = [], r = {}, n = function (t, e, i, s) {
this.a = t, this.b = e, this.c = i, this.d = s, this.da = s - t, this.ca = i - t, this.ba = e - t;
}, a = ",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,", o = function (t, e, i, s) {
var r = { a: t }, n = {}, a = {}, o = { c: s }, h = (t + e) / 2, l = (e + i) / 2, _ = (i + s) / 2, u = (h + l) / 2, p = (l + _) / 2, f = (p - u) / 8;
        return r.b = h + (t - h) / 4, n.b = u + f, r.c = n.a = (r.b + n.b) / 2, n.c = a.a = (u + p) / 2, a.b = p - f, o.b = _ + (s - _) / 4, a.c = o.a = (a.b + o.b) / 2, [r, n, a, o];
}, h = function (t, r, n, a, h) {
var l, _, u, p, f, c, m, d, g, v, y, T, w, x = t.length - 1, b = 0, P = t[0].a;
        for (l = 0; x > l; l++)
        f = t[b], _ = f.a, u = f.d, p = t[b + 1].d, h ? (y = e[l], T = i[l], w = .25 * (T + y) * r / (a ? .5 : s[l] || .5), c = u - (u - _) * (a ? .5 * r : 0 !== y ? w / y : 0), m = u + (p - u) * (a ? .5 * r : 0 !== T ? w / T : 0), d = u - (c + ((m - c) * (3 * y / (y + T) + .5) / 4 || 0))) : (c = u - .5 * (u - _) * r, m = u + .5 * (p - u) * r, d = u - (c + m) / 2), c += d, m += d, f.c = g = c, f.b = 0 !== l ? P : P = f.a + .6 * (f.c - f.a), f.da = u - _, f.ca = g - _, f.ba = P - _, n ? (v = o(_, P, g, u), t.splice(b, 1, v[0], v[1], v[2], v[3]), b += 4) : b++, P = m;
        f = t[b], f.b = P, f.c = P + .4 * (f.d - P), f.da = f.d - f.a, f.ca = f.c - f.a, f.ba = P - f.a, n && (v = o(f.a, P, f.c, f.d), t.splice(b, 1, v[0], v[1], v[2], v[3]));
}, l = function (t, s, r, a) {
var o, h, l, _, u, p, f = [];
        if (a)
        for (t = [a].concat(t), h = t.length; --h > - 1; )
        "string" == typeof (p = t[h][s]) && "=" === p.charAt(1) && (t[h][s] = a[s] + Number(p.charAt(0) + p.substr(2)));
        if (o = t.length - 2, 0 > o)
        return f[0] = new n(t[0][s], 0, 0, t[ - 1 > o ? 0 : 1][s]), f;
        for (h = 0; o > h; h++)
        l = t[h][s], _ = t[h + 1][s], f[h] = new n(l, 0, 0, _), r && (u = t[h + 2][s], e[h] = (e[h] || 0) + (_ - l) * (_ - l), i[h] = (i[h] || 0) + (u - _) * (u - _));
        return f[h] = new n(t[h][s], 0, 0, t[h + 1][s]), f;
}, _ = function (t, n, o, _, u, p) {
var f, c, m, d, g, v, y, T, w = {}, x = [], b = p || t[0];
        u = "string" == typeof u ? "," + u + "," : a, null == n && (n = 1);
        for (c in t[0])
        x.push(c);
        if (t.length > 1) {
for (T = t[t.length - 1], y = !0, f = x.length; --f > - 1; )
        if (c = x[f], Math.abs(b[c] - T[c]) > .05) {
y = !1;
        break;
}
y && (t = t.concat(), p && t.unshift(p), t.push(t[1]), p = t[t.length - 3]);
}
for (e.length = i.length = s.length = 0, f = x.length; --f > - 1; )
        c = x[f], r[c] = - 1 !== u.indexOf("," + c + ","), w[c] = l(t, c, r[c], p);
        for (f = e.length; --f > - 1; )
        e[f] = Math.sqrt(e[f]), i[f] = Math.sqrt(i[f]);
        if (!_) {
for (f = x.length; --f > - 1; )
        if (r[c])
        for (m = w[x[f]], v = m.length - 1, d = 0; v > d; d++)
        g = m[d + 1].da / i[d] + m[d].da / e[d], s[d] = (s[d] || 0) + g * g;
        for (f = s.length; --f > - 1; )
        s[f] = Math.sqrt(s[f]);
}
for (f = x.length, d = o ? 4 : 1; --f > - 1; )
        c = x[f], m = w[c], h(m, n, o, _, r[c]), y && (m.splice(0, d), m.splice(m.length - d, d));
        return w;
}, u = function (t, e, i) {
e = e || "soft";
        var s, r, a, o, h, l, _, u, p, f, c, m = {}, d = "cubic" === e ? 3 : 2, g = "soft" === e, v = [];
        if (g && i && (t = [i].concat(t)), null == t || d + 1 > t.length)
        throw "invalid Bezier data";
        for (p in t[0])
        v.push(p);
        for (l = v.length; --l > - 1; ) {
for (p = v[l], m[p] = h = [], f = 0, u = t.length, _ = 0; u > _; _++)
        s = null == i ? t[_][p] : "string" == typeof (c = t[_][p]) && "=" === c.charAt(1) ? i[p] + Number(c.charAt(0) + c.substr(2)) : Number(c), g && _ > 1 && u - 1 > _ && (h[f++] = (s + h[f - 2]) / 2), h[f++] = s;
        for (u = f - d + 1, f = 0, _ = 0; u > _; _ += d)
        s = h[_], r = h[_ + 1], a = h[_ + 2], o = 2 === d ? 0 : h[_ + 3], h[f++] = c = 3 === d ? new n(s, r, a, o) : new n(s, (2 * r + s) / 3, (2 * r + a) / 3, a);
        h.length = f;
}
return m;
}, p = function (t, e, i) {
for (var s, r, n, a, o, h, l, _, u, p, f, c = 1 / i, m = t.length; --m > - 1; )
        for (p = t[m], n = p.a, a = p.d - n, o = p.c - n, h = p.b - n, s = r = 0, _ = 1; i >= _; _++)
        l = c * _, u = 1 - l, s = r - (r = (l * l * a + 3 * u * (l * o + u * h)) * l), f = m * i + _ - 1, e[f] = (e[f] || 0) + s * s;
}, f = function (t, e) {
e = e >> 0 || 6;
        var i, s, r, n, a = [], o = [], h = 0, l = 0, _ = e - 1, u = [], f = [];
        for (i in t)
        p(t[i], a, e);
        for (r = a.length, s = 0; r > s; s++)
        h += Math.sqrt(a[s]), n = s % e, f[n] = h, n === _ && (l += h, n = s / e >> 0, u[n] = f, o[n] = l, h = 0, f = []);
        return { length: l, lengths: o, segments: u };
}, c = window._gsDefine.plugin({ propName: "bezier", priority: - 1, API: 2, global: !0, init: function (t, e, i) {
this._target = t, e instanceof Array && (e = { values: e }), this._func = {}, this._round = {}, this._props = [], this._timeRes = null == e.timeResolution ? 6 : parseInt(e.timeResolution, 10);
        var s, r, n, a, o, h = e.values || [], l = {}, p = h[0], c = e.autoRotate || i.vars.orientToBezier;
        this._autoRotate = c ? c instanceof Array ? c : [["x", "y", "rotation", c === !0 ? 0 : Number(c) || 0]] : null;
        for (s in p)
        this._props.push(s);
        for (n = this._props.length; --n > - 1; )
        s = this._props[n], this._overwriteProps.push(s), r = this._func[s] = "function" == typeof t[s], l[s] = r ? t[s.indexOf("set") || "function" != typeof t["get" + s.substr(3)] ? s : "get" + s.substr(3)]() : parseFloat(t[s]), o || l[s] !== h[0][s] && (o = l);
        if (this._beziers = "cubic" !== e.type && "quadratic" !== e.type && "soft" !== e.type ? _(h, isNaN(e.curviness) ? 1 : e.curviness, !1, "thruBasic" === e.type, e.correlate, o) : u(h, e.type, l), this._segCount = this._beziers[s].length, this._timeRes) {
var m = f(this._beziers, this._timeRes);
        this._length = m.length, this._lengths = m.lengths, this._segments = m.segments, this._l1 = this._li = this._s1 = this._si = 0, this._l2 = this._lengths[0], this._curSeg = this._segments[0], this._s2 = this._curSeg[0], this._prec = 1 / this._curSeg.length;
}
if (c = this._autoRotate)
        for (c[0] instanceof Array || (this._autoRotate = c = [c]), n = c.length; --n > - 1; )
        for (a = 0; 3 > a; a++)
        s = c[n][a], this._func[s] = "function" == typeof t[s] ? t[s.indexOf("set") || "function" != typeof t["get" + s.substr(3)] ? s : "get" + s.substr(3)] : !1;
        return !0;
}, set: function (e) {
var i, s, r, n, a, o, h, l, _, u, p = this._segCount, f = this._func, c = this._target;
        if (this._timeRes) {
if (_ = this._lengths, u = this._curSeg, e *= this._length, r = this._li, e > this._l2 && p - 1 > r) {
for (l = p - 1; l > r && e >= (this._l2 = _[++r]); )
        ;
        this._l1 = _[r - 1], this._li = r, this._curSeg = u = this._segments[r], this._s2 = u[this._s1 = this._si = 0];
}
else if (this._l1 > e && r > 0) {
for (; r > 0 && (this._l1 = _[--r]) >= e; )
        ;
        0 === r && this._l1 > e ? this._l1 = 0 : r++, this._l2 = _[r], this._li = r, this._curSeg = u = this._segments[r], this._s1 = u[(this._si = u.length - 1) - 1] || 0, this._s2 = u[this._si];
}
if (i = r, e -= this._l1, r = this._si, e > this._s2 && u.length - 1 > r) {
for (l = u.length - 1; l > r && e >= (this._s2 = u[++r]); )
        ;
        this._s1 = u[r - 1], this._si = r;
}
else if (this._s1 > e && r > 0) {
for (; r > 0 && (this._s1 = u[--r]) >= e; )
        ;
        0 === r && this._s1 > e ? this._s1 = 0 : r++, this._s2 = u[r], this._si = r;
}
o = (r + (e - this._s1) / (this._s2 - this._s1)) * this._prec;
}
else
        i = 0 > e ? 0 : e >= 1 ? p - 1 : p * e >> 0, o = (e - i * (1 / p)) * p;
        for (s = 1 - o, r = this._props.length; --r > - 1; )
        n = this._props[r], a = this._beziers[n][i], h = (o * o * a.da + 3 * s * (o * a.ca + s * a.ba)) * o + a.a, this._round[n] && (h = h + (h > 0 ? .5 : - .5) >> 0), f[n] ? c[n](h) : c[n] = h;
        if (this._autoRotate) {
var m, d, g, v, y, T, w, x = this._autoRotate;
        for (r = x.length; --r > - 1; )
        n = x[r][2], T = x[r][3] || 0, w = x[r][4] === !0 ? 1 : t, a = this._beziers[x[r][0]], m = this._beziers[x[r][1]], a && m && (a = a[i], m = m[i], d = a.a + (a.b - a.a) * o, v = a.b + (a.c - a.b) * o, d += (v - d) * o, v += (a.c + (a.d - a.c) * o - v) * o, g = m.a + (m.b - m.a) * o, y = m.b + (m.c - m.b) * o, g += (y - g) * o, y += (m.c + (m.d - m.c) * o - y) * o, h = Math.atan2(y - g, v - d) * w + T, f[n] ? c[n](h) : c[n] = h);
}
} }), m = c.prototype;
        c.bezierThrough = _, c.cubicToQuadratic = o, c._autoCSS = !0, c.quadraticToCubic = function (t, e, i) {
        return new n(t, (2 * e + t) / 3, (2 * e + i) / 3, i);
        }, c._cssRegister = function () {
var t = window._gsDefine.globals.CSSPlugin;
        if (t) {
var e = t._internals, i = e._parseToProxy, s = e._setPluginRatio, r = e.CSSPropTween;
        e._registerComplexSpecialProp("bezier", { parser: function (t, e, n, a, o, h) {
        e instanceof Array && (e = { values: e }), h = new c;
                var l, _, u, p = e.values, f = p.length - 1, m = [], d = {};
                if (0 > f)
                return o;
                for (l = 0; f >= l; l++)
                u = i(t, p[l], a, o, h, f !== l), m[l] = u.end;
                for (_ in e)
                d[_] = e[_];
                return d.values = m, o = new r(t, "bezier", 0, 0, u.pt, 2), o.data = u, o.plugin = h, o.setRatio = s, 0 === d.autoRotate && (d.autoRotate = !0), !d.autoRotate || d.autoRotate instanceof Array || (l = d.autoRotate === !0 ? 0 : Number(d.autoRotate), d.autoRotate = null != u.end.left ? [["left", "top", "rotation", l, !1]] : null != u.end.x ? [["x", "y", "rotation", l, !1]] : !1), d.autoRotate && (a._transform || a._enableTransforms(!1), u.autoRotate = a._target._gsTransform), h._onInitTween(u.proxy, d, a._tween), o;
        } });
}
}, m._roundProps = function (t, e) {
for (var i = this._overwriteProps, s = i.length; --s > - 1; )
        (t[i[s]] || t.bezier || t.bezierThrough) && (this._round[i[s]] = e);
}, m._kill = function (t) {
var e, i, s = this._props;
        for (e in this._beziers)
        if (e in t)
        for (delete this._beziers[e], delete this._func[e], i = s.length; --i > - 1; )
        s[i] === e && s.splice(i, 1);
        return this._super._kill.call(this, t);
};
}(), window._gsDefine("plugins.CSSPlugin", ["plugins.TweenPlugin", "TweenLite"], function (t, e) {
var i, s, r, n, a = function () {
t.call(this, "css"), this._overwriteProps.length = 0, this.setRatio = a.prototype.setRatio;
}, o = {}, h = a.prototype = new t("css");
        h.constructor = a, a.version = "1.11.2", a.API = 2, a.defaultTransformPerspective = 0, h = "px", a.suffixMap = { top: h, right: h, bottom: h, left: h, width: h, height: h, fontSize: h, padding: h, margin: h, perspective: h };
        var l, _, u, p, f, c, m = /(?:\d|\-\d|\.\d|\-\.\d)+/g, d = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g, g = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi, v = /[^\d\-\.]/g, y = /(?:\d|\-|\+|=|#|\.)*/g, T = /opacity *= *([^)]*)/, w = /opacity:([^;]*)/, x = /alpha\(opacity *=.+?\)/i, b = /^(rgb|hsl)/, P = /([A-Z])/g, S = /-([a-z])/gi, k = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi, R = function (t, e) {
        return e.toUpperCase();
        }, A = /(?:Left|Right|Width)/i, C = /(M11|M12|M21|M22)=[\d\-\.e]+/gi, O = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i, D = /,(?=[^\)]*(?:\(|$))/gi, M = Math.PI / 180, I = 180 / Math.PI, E = {}, F = document, N = F.createElement("div"), L = F.createElement("img"), X = a._internals = { _specialProps: o }, z = navigator.userAgent, U = function () {
var t, e = z.indexOf("Android"), i = F.createElement("div");
        return u = - 1 !== z.indexOf("Safari") && - 1 === z.indexOf("Chrome") && ( - 1 === e || Number(z.substr(e + 8, 1)) > 3), f = u && 6 > Number(z.substr(z.indexOf("Version/") + 8, 1)), p = - 1 !== z.indexOf("Firefox"), /MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(z) && (c = parseFloat(RegExp.$1)), i.innerHTML = "<a style='top:1px;opacity:.55;'>a</a>", t = i.getElementsByTagName("a")[0], t ? /^0.55/.test(t.style.opacity) : !1;
}(), Y = function (t) {
return T.test("string" == typeof t ? t : (t.currentStyle ? t.currentStyle.filter : t.style.filter) || "") ? parseFloat(RegExp.$1) / 100 : 1;
}, j = function (t) {
window.console && console.log(t);
}, B = "", q = "", V = function (t, e) {
e = e || N;
        var i, s, r = e.style;
        if (void 0 !== r[t])
        return t;
        for (t = t.charAt(0).toUpperCase() + t.substr(1), i = ["O", "Moz", "ms", "Ms", "Webkit"], s = 5; --s > - 1 && void 0 === r[i[s] + t]; )
        ;
        return s >= 0 ? (q = 3 === s ? "ms" : i[s], B = "-" + q.toLowerCase() + "-", q + t) : null;
}, Z = F.defaultView ? F.defaultView.getComputedStyle : function () {
}, G = a.getStyle = function (t, e, i, s, r) {
var n;
        return U || "opacity" !== e ? (!s && t.style[e] ? n = t.style[e] : (i = i || Z(t, null)) ? (t = i.getPropertyValue(e.replace(P, "-$1").toLowerCase()), n = t || i.length ? t : i[e]) : t.currentStyle && (n = t.currentStyle[e]), null == r || n && "none" !== n && "auto" !== n && "auto auto" !== n ? n : r) : Y(t);
}, $ = function (t, e, i, s, r) {
if ("px" === s || !s)
        return i;
        if ("auto" === s || !i)
        return 0;
        var n, a = A.test(e), o = t, h = N.style, l = 0 > i;
        return l && (i = - i), "%" === s && - 1 !== e.indexOf("border") ? n = i / 100 * (a ? t.clientWidth : t.clientHeight) : (h.cssText = "border:0 solid red;position:" + G(t, "position") + ";line-height:0;", "%" !== s && o.appendChild ? h[a ? "borderLeftWidth" : "borderTopWidth"] = i + s : (o = t.parentNode || F.body, h[a ? "width" : "height"] = i + s), o.appendChild(N), n = parseFloat(N[a ? "offsetWidth" : "offsetHeight"]), o.removeChild(N), 0 !== n || r || (n = $(t, e, i, s, !0))), l ? - n : n;
}, Q = function (t, e, i) {
if ("absolute" !== G(t, "position", i))
        return 0;
        var s = "left" === e ? "Left" : "Top", r = G(t, "margin" + s, i);
        return t["offset" + s] - ($(t, e, parseFloat(r), r.replace(y, "")) || 0);
}, W = function (t, e) {
var i, s, r = {};
        if (e = e || Z(t, null))
        if (i = e.length)
        for (; --i > - 1; )
        r[e[i].replace(S, R)] = e.getPropertyValue(e[i]);
        else
        for (i in e)
        r[i] = e[i];
        else if (e = t.currentStyle || t.style)
        for (i in e)
        "string" == typeof i && void 0 !== r[i] && (r[i.replace(S, R)] = e[i]);
        return U || (r.opacity = Y(t)), s = be(t, e, !1), r.rotation = s.rotation, r.skewX = s.skewX, r.scaleX = s.scaleX, r.scaleY = s.scaleY, r.x = s.x, r.y = s.y, xe && (r.z = s.z, r.rotationX = s.rotationX, r.rotationY = s.rotationY, r.scaleZ = s.scaleZ), r.filters && delete r.filters, r;
}, H = function (t, e, i, s, r) {
var n, a, o, h = {}, l = t.style;
        for (a in i)
        "cssText" !== a && "length" !== a && isNaN(a) && (e[a] !== (n = i[a]) || r && r[a]) && - 1 === a.indexOf("Origin") && ("number" == typeof n || "string" == typeof n) && (h[a] = "auto" !== n || "left" !== a && "top" !== a ? "" !== n && "auto" !== n && "none" !== n || "string" != typeof e[a] || "" === e[a].replace(v, "") ? n : 0 : Q(t, a), void 0 !== l[a] && (o = new ue(l, a, l[a], o)));
        if (s)
        for (a in s)
        "className" !== a && (h[a] = s[a]);
        return { difs: h, firstMPT: o };
}, K = { width: ["Left", "Right"], height: ["Top", "Bottom"] }, J = ["marginLeft", "marginRight", "marginTop", "marginBottom"], te = function (t, e, i) {
var s = parseFloat("width" === e ? t.offsetWidth : t.offsetHeight), r = K[e], n = r.length;
        for (i = i || Z(t, null); --n > - 1; )
        s -= parseFloat(G(t, "padding" + r[n], i, !0)) || 0, s -= parseFloat(G(t, "border" + r[n] + "Width", i, !0)) || 0;
        return s;
}, ee = function (t, e) {
(null == t || "" === t || "auto" === t || "auto auto" === t) && (t = "0 0");
        var i = t.split(" "), s = - 1 !== t.indexOf("left") ? "0%" : - 1 !== t.indexOf("right") ? "100%" : i[0], r = - 1 !== t.indexOf("top") ? "0%" : - 1 !== t.indexOf("bottom") ? "100%" : i[1];
        return null == r ? r = "0" : "center" === r && (r = "50%"), ("center" === s || isNaN(parseFloat(s)) && - 1 === (s + "").indexOf("=")) && (s = "50%"), e && (e.oxp = - 1 !== s.indexOf("%"), e.oyp = - 1 !== r.indexOf("%"), e.oxr = "=" === s.charAt(1), e.oyr = "=" === r.charAt(1), e.ox = parseFloat(s.replace(v, "")), e.oy = parseFloat(r.replace(v, ""))), s + " " + r + (i.length > 2 ? " " + i[2] : "");
}, ie = function (t, e) {
return "string" == typeof t && "=" === t.charAt(1) ? parseInt(t.charAt(0) + "1", 10) * parseFloat(t.substr(2)) : parseFloat(t) - parseFloat(e);
}, se = function (t, e) {
return null == t ? e : "string" == typeof t && "=" === t.charAt(1) ? parseInt(t.charAt(0) + "1", 10) * Number(t.substr(2)) + e : parseFloat(t);
}, re = function (t, e, i, s) {
var r, n, a, o, h = 1e-6;
        return null == t ? o = e : "number" == typeof t ? o = t : (r = 360, n = t.split("_"), a = Number(n[0].replace(v, "")) * ( - 1 === t.indexOf("rad") ? 1 : I) - ("=" === t.charAt(1) ? 0 : e), n.length && (s && (s[i] = e + a), - 1 !== t.indexOf("short") && (a %= r, a !== a % (r / 2) && (a = 0 > a ? a + r : a - r)), - 1 !== t.indexOf("_cw") && 0 > a ? a = (a + 9999999999 * r) % r - (0 | a / r) * r : - 1 !== t.indexOf("ccw") && a > 0 && (a = (a - 9999999999 * r) % r - (0 | a / r) * r)), o = e + a), h > o && o > - h && (o = 0), o;
}, ne = { aqua: [0, 255, 255], lime: [0, 255, 0], silver: [192, 192, 192], black: [0, 0, 0], maroon: [128, 0, 0], teal: [0, 128, 128], blue: [0, 0, 255], navy: [0, 0, 128], white: [255, 255, 255], fuchsia: [255, 0, 255], olive: [128, 128, 0], yellow: [255, 255, 0], orange: [255, 165, 0], gray: [128, 128, 128], purple: [128, 0, 128], green: [0, 128, 0], red: [255, 0, 0], pink: [255, 192, 203], cyan: [0, 255, 255], transparent: [255, 255, 255, 0] }, ae = function (t, e, i) {
return t = 0 > t ? t + 1 : t > 1 ? t - 1 : t, 0 | 255 * (1 > 6 * t ? e + 6 * (i - e) * t : .5 > t ? i : 2 > 3 * t ? e + 6 * (i - e) * (2 / 3 - t) : e) + .5;
}, oe = function (t) {
var e, i, s, r, n, a;
        return t && "" !== t ? "number" == typeof t ? [t >> 16, 255 & t >> 8, 255 & t] : ("," === t.charAt(t.length - 1) && (t = t.substr(0, t.length - 1)), ne[t] ? ne[t] : "#" === t.charAt(0) ? (4 === t.length && (e = t.charAt(1), i = t.charAt(2), s = t.charAt(3), t = "#" + e + e + i + i + s + s), t = parseInt(t.substr(1), 16), [t >> 16, 255 & t >> 8, 255 & t]) : "hsl" === t.substr(0, 3) ? (t = t.match(m), r = Number(t[0]) % 360 / 360, n = Number(t[1]) / 100, a = Number(t[2]) / 100, i = .5 >= a ? a * (n + 1) : a + n - a * n, e = 2 * a - i, t.length > 3 && (t[3] = Number(t[3])), t[0] = ae(r + 1 / 3, e, i), t[1] = ae(r, e, i), t[2] = ae(r - 1 / 3, e, i), t) : (t = t.match(m) || ne.transparent, t[0] = Number(t[0]), t[1] = Number(t[1]), t[2] = Number(t[2]), t.length > 3 && (t[3] = Number(t[3])), t)) : ne.black;
}, he = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#.+?\\b";
        for (h in ne)
        he += "|" + h + "\\b";
        he = RegExp(he + ")", "gi");
        var le = function (t, e, i, s) {
        if (null == t)
                return function (t) {
                return t;
                };
                var r, n = e ? (t.match(he) || [""])[0] : "", a = t.split(n).join("").match(g) || [], o = t.substr(0, t.indexOf(a[0])), h = ")" === t.charAt(t.length - 1) ? ")" : "", l = - 1 !== t.indexOf(" ") ? " " : ",", _ = a.length, u = _ > 0 ? a[0].replace(m, "") : "";
                return _ ? r = e ? function (t) {
                var e, p, f, c;
                        if ("number" == typeof t)
                        t += u;
                        else if (s && D.test(t)) {
                for (c = t.replace(D, "|").split("|"), f = 0; c.length > f; f++)
                        c[f] = r(c[f]);
                        return c.join(",");
                }
                if (e = (t.match(he) || [n])[0], p = t.split(e).join("").match(g) || [], f = p.length, _ > f--)
                        for (; _ > ++f; )
                        p[f] = i ? p[0 | (f - 1) / 2] : a[f];
                        return o + p.join(l) + l + e + h + ( - 1 !== t.indexOf("inset") ? " inset" : "");
                } : function (t) {
        var e, n, p;
                if ("number" == typeof t)
                t += u;
                else if (s && D.test(t)) {
        for (n = t.replace(D, "|").split("|"), p = 0; n.length > p; p++)
                n[p] = r(n[p]);
                return n.join(",");
        }
        if (e = t.match(g) || [], p = e.length, _ > p--)
                for (; _ > ++p; )
                e[p] = i ? e[0 | (p - 1) / 2] : a[p];
                return o + e.join(l) + h;
        } : function (t) {
        return t;
        };
        }, _e = function (t) {
return t = t.split(","), function (e, i, s, r, n, a, o) {
var h, l = (i + "").split(" ");
        for (o = {}, h = 0; 4 > h; h++)
        o[t[h]] = l[h] = l[h] || l[(h - 1) / 2 >> 0];
        return r.parse(e, o, n, a);
};
}, ue = (X._setPluginRatio = function (t) {
this.plugin.setRatio(t);
        for (var e, i, s, r, n = this.data, a = n.proxy, o = n.firstMPT, h = 1e-6; o; )
        e = a[o.v], o.r ? e = e > 0 ? 0 | e + .5 : 0 | e - .5 : h > e && e > - h && (e = 0), o.t[o.p] = e, o = o._next;
        if (n.autoRotate && (n.autoRotate.rotation = a.rotation), 1 === t)
        for (o = n.firstMPT; o; ) {
if (i = o.t, i.type) {
if (1 === i.type) {
for (r = i.xs0 + i.s + i.xs1, s = 1; i.l > s; s++)
        r += i["xn" + s] + i["xs" + (s + 1)];
        i.e = r;
}
}
else
        i.e = i.s + i.xs0;
        o = o._next;
}
}, function (t, e, i, s, r) {
this.t = t, this.p = e, this.v = i, this.r = r, s && (s._prev = this, this._next = s);
}), pe = (X._parseToProxy = function (t, e, i, s, r, n) {
var a, o, h, l, _, u = s, p = {}, f = {}, c = i._transform, m = E;
        for (i._transform = null, E = e, s = _ = i.parse(t, e, s, r), E = m, n && (i._transform = c, u && (u._prev = null, u._prev && (u._prev._next = null))); s && s !== u; ) {
if (1 >= s.type && (o = s.p, f[o] = s.s + s.c, p[o] = s.s, n || (l = new ue(s, "s", o, l, s.r), s.c = 0), 1 === s.type))
        for (a = s.l; --a > 0; )
        h = "xn" + a, o = s.p + "_" + h, f[o] = s.data[h], p[o] = s[h], n || (l = new ue(s, h, o, l, s.rxp[h]));
        s = s._next;
}
return { proxy: p, end: f, firstMPT: l, pt: _ };
}, X.CSSPropTween = function (t, e, s, r, a, o, h, l, _, u, p) {
this.t = t, this.p = e, this.s = s, this.c = r, this.n = h || e, t instanceof pe || n.push(this.n), this.r = l, this.type = o || 0, _ && (this.pr = _, i = !0), this.b = void 0 === u ? s : u, this.e = void 0 === p ? s + r : p, a && (this._next = a, a._prev = this);
}), fe = a.parseComplex = function (t, e, i, s, r, n, a, o, h, _) {
i = i || n || "", a = new pe(t, e, 0, 0, a, _ ? 2 : 1, null, !1, o, i, s), s += "";
        var u, p, f, c, g, v, y, T, w, x, P, S, k = i.split(", ").join(",").split(" "), R = s.split(", ").join(",").split(" "), A = k.length, C = l !== !1;
        for (( - 1 !== s.indexOf(",") || - 1 !== i.indexOf(",")) && (k = k.join(" ").replace(D, ", ").split(" "), R = R.join(" ").replace(D, ", ").split(" "), A = k.length), A !== R.length && (k = (n || "").split(" "), A = k.length), a.plugin = h, a.setRatio = _, u = 0; A > u; u++)
        if (c = k[u], g = R[u], T = parseFloat(c), T || 0 === T)
        a.appendXtra("", T, ie(g, T), g.replace(d, ""), C && - 1 !== g.indexOf("px"), !0);
        else if (r && ("#" === c.charAt(0) || ne[c] || b.test(c)))
        S = "," === g.charAt(g.length - 1) ? ")," : ")", c = oe(c), g = oe(g), w = c.length + g.length > 6, w && !U && 0 === g[3] ? (a["xs" + a.l] += a.l ? " transparent" : "transparent", a.e = a.e.split(R[u]).join("transparent")) : (U || (w = !1), a.appendXtra(w ? "rgba(" : "rgb(", c[0], g[0] - c[0], ",", !0, !0).appendXtra("", c[1], g[1] - c[1], ",", !0).appendXtra("", c[2], g[2] - c[2], w ? "," : S, !0), w && (c = 4 > c.length ? 1 : c[3], a.appendXtra("", c, (4 > g.length ? 1 : g[3]) - c, S, !1)));
        else if (v = c.match(m)) {
if (y = g.match(d), !y || y.length !== v.length)
        return a;
        for (f = 0, p = 0; v.length > p; p++)
        P = v[p], x = c.indexOf(P, f), a.appendXtra(c.substr(f, x - f), Number(P), ie(y[p], P), "", C && "px" === c.substr(x + P.length, 2), 0 === p), f = x + P.length;
        a["xs" + a.l] += c.substr(f);
}
else
        a["xs" + a.l] += a.l ? " " + c : c;
        if ( - 1 !== s.indexOf("=") && a.data) {
for (S = a.xs0 + a.data.s, u = 1; a.l > u; u++)
        S += a["xs" + u] + a.data["xn" + u];
        a.e = S + a["xs" + u];
}
return a.l || (a.type = - 1, a.xs0 = a.e), a.xfirst || a;
}, ce = 9;
        for (h = pe.prototype, h.l = h.pr = 0; --ce > 0; )
        h["xn" + ce] = 0, h["xs" + ce] = "";
        h.xs0 = "", h._next = h._prev = h.xfirst = h.data = h.plugin = h.setRatio = h.rxp = null, h.appendXtra = function (t, e, i, s, r, n) {
        var a = this, o = a.l;
                return a["xs" + o] += n && o ? " " + t : t || "", i || 0 === o || a.plugin ? (a.l++, a.type = a.setRatio ? 2 : 1, a["xs" + a.l] = s || "", o > 0 ? (a.data["xn" + o] = e + i, a.rxp["xn" + o] = r, a["xn" + o] = e, a.plugin || (a.xfirst = new pe(a, "xn" + o, e, i, a.xfirst || a, 0, a.n, r, a.pr), a.xfirst.xs0 = 0), a) : (a.data = { s: e + i }, a.rxp = {}, a.s = e, a.c = i, a.r = r, a)) : (a["xs" + o] += e + (s || ""), a);
        };
        var me = function (t, e) {
        e = e || {}, this.p = e.prefix ? V(t) || t : t, o[t] = o[this.p] = this, this.format = e.formatter || le(e.defaultValue, e.color, e.collapsible, e.multi), e.parser && (this.parse = e.parser), this.clrs = e.color, this.multi = e.multi, this.keyword = e.keyword, this.dflt = e.defaultValue, this.pr = e.priority || 0;
        }, de = X._registerComplexSpecialProp = function (t, e, i) {
"object" != typeof e && (e = { parser: i });
        var s, r, n = t.split(","), a = e.defaultValue;
        for (i = i || [a], s = 0; n.length > s; s++)
        e.prefix = 0 === s && e.prefix, e.defaultValue = i[s] || a, r = new me(n[s], e);
}, ge = function (t) {
if (!o[t]) {
var e = t.charAt(0).toUpperCase() + t.substr(1) + "Plugin";
        de(t, { parser: function (t, i, s, r, n, a, h) {
        var l = (window.GreenSockGlobals || window).com.greensock.plugins[e];
                return l ? (l._cssRegister(), o[s].parse(t, i, s, r, n, a, h)) : (j("Error: " + e + " js file not loaded."), n);
        } });
}
};
        h = me.prototype, h.parseComplex = function (t, e, i, s, r, n) {
        var a, o, h, l, _, u, p = this.keyword;
                if (this.multi && (D.test(i) || D.test(e) ? (o = e.replace(D, "|").split("|"), h = i.replace(D, "|").split("|")) : p && (o = [e], h = [i])), h) {
        for (l = h.length > o.length ? h.length : o.length, a = 0; l > a; a++)
                e = o[a] = o[a] || this.dflt, i = h[a] = h[a] || this.dflt, p && (_ = e.indexOf(p), u = i.indexOf(p), _ !== u && (i = - 1 === u ? h : o, i[a] += " " + p));
                e = o.join(", "), i = h.join(", ");
        }
        return fe(t, this.p, e, i, this.clrs, this.dflt, s, this.pr, r, n);
        }, h.parse = function (t, e, i, s, n, a) {
return this.parseComplex(t.style, this.format(G(t, this.p, r, !1, this.dflt)), this.format(e), n, a);
}, a.registerSpecialProp = function (t, e, i) {
de(t, { parser: function (t, s, r, n, a, o) {
var h = new pe(t, r, 0, 0, a, 2, r, !1, i);
        return h.plugin = o, h.setRatio = e(t, s, n._tween, r), h;
}, priority: i });
};
        var ve = "scaleX,scaleY,scaleZ,x,y,z,skewX,rotation,rotationX,rotationY,perspective".split(","), ye = V("transform"), Te = B + "transform", we = V("transformOrigin"), xe = null !== V("perspective"), be = function (t, e, i, s) {
if (t._gsTransform && i && !s)
        return t._gsTransform;
        var r, n, o, h, l, _, u, p, f, c, m, d, g, v = i ? t._gsTransform || { skewY: 0 } : { skewY: 0 }, y = 0 > v.scaleX, T = 2e-5, w = 1e5, x = 179.99, b = x * M, P = xe ? parseFloat(G(t, we, e, !1, "0 0 0").split(" ")[2]) || v.zOrigin || 0 : 0;
        for (ye ? r = G(t, Te, e, !0) : t.currentStyle && (r = t.currentStyle.filter.match(C), r = r && 4 === r.length ? [r[0].substr(4), Number(r[2].substr(4)), Number(r[1].substr(4)), r[3].substr(4), v.x || 0, v.y || 0].join(",") : ""), n = (r || "").match(/(?:\-|\b)[\d\-\.e]+\b/gi) || [], o = n.length; --o > - 1; )
        h = Number(n[o]), n[o] = (l = h - (h |= 0)) ? (0 | l * w + (0 > l ? - .5 : .5)) / w + h : h;
        if (16 === n.length) {
var S = n[8], k = n[9], R = n[10], A = n[12], O = n[13], D = n[14];
        if (v.zOrigin && (D = - v.zOrigin, A = S * D - n[12], O = k * D - n[13], D = R * D + v.zOrigin - n[14]), !i || s || null == v.rotationX) {
var E, F, N, L, X, z, U, Y = n[0], j = n[1], B = n[2], q = n[3], V = n[4], Z = n[5], $ = n[6], Q = n[7], W = n[11], H = Math.atan2($, R), K = - b > H || H > b;
        v.rotationX = H * I, H && (L = Math.cos( - H), X = Math.sin( - H), E = V * L + S * X, F = Z * L + k * X, N = $ * L + R * X, S = V * - X + S * L, k = Z * - X + k * L, R = $ * - X + R * L, W = Q * - X + W * L, V = E, Z = F, $ = N), H = Math.atan2(S, Y), v.rotationY = H * I, H && (z = - b > H || H > b, L = Math.cos( - H), X = Math.sin( - H), E = Y * L - S * X, F = j * L - k * X, N = B * L - R * X, k = j * X + k * L, R = B * X + R * L, W = q * X + W * L, Y = E, j = F, B = N), H = Math.atan2(j, Z), v.rotation = H * I, H && (U = - b > H || H > b, L = Math.cos( - H), X = Math.sin( - H), Y = Y * L + V * X, F = j * L + Z * X, Z = j * - X + Z * L, $ = B * - X + $ * L, j = F), U && K ? v.rotation = v.rotationX = 0 : U && z ? v.rotation = v.rotationY = 0 : z && K && (v.rotationY = v.rotationX = 0), v.scaleX = (0 | Math.sqrt(Y * Y + j * j) * w + .5) / w, v.scaleY = (0 | Math.sqrt(Z * Z + k * k) * w + .5) / w, v.scaleZ = (0 | Math.sqrt($ * $ + R * R) * w + .5) / w, v.skewX = 0, v.perspective = W ? 1 / (0 > W ? - W : W) : 0, v.x = A, v.y = O, v.z = D;
}
}
else if (!(xe && !s && n.length && v.x === n[4] && v.y === n[5] && (v.rotationX || v.rotationY) || void 0 !== v.x && "none" === G(t, "display", e))) {
var J = n.length >= 6, te = J ? n[0] : 1, ee = n[1] || 0, ie = n[2] || 0, se = J ? n[3] : 1;
        v.x = n[4] || 0, v.y = n[5] || 0, _ = Math.sqrt(te * te + ee * ee), u = Math.sqrt(se * se + ie * ie), p = te || ee ? Math.atan2(ee, te) * I : v.rotation || 0, f = ie || se ? Math.atan2(ie, se) * I + p : v.skewX || 0, c = _ - Math.abs(v.scaleX || 0), m = u - Math.abs(v.scaleY || 0), Math.abs(f) > 90 && 270 > Math.abs(f) && (y ? (_ *= - 1, f += 0 >= p ? 180 : - 180, p += 0 >= p ? 180 : - 180) : (u *= - 1, f += 0 >= f ? 180 : - 180)), d = (p - v.rotation) % 180, g = (f - v.skewX) % 180, (void 0 === v.skewX || c > T || - T > c || m > T || - T > m || d > - x && x > d && false | d * w || g > - x && x > g && false | g * w) && (v.scaleX = _, v.scaleY = u, v.rotation = p, v.skewX = f), xe && (v.rotationX = v.rotationY = v.z = 0, v.perspective = parseFloat(a.defaultTransformPerspective) || 0, v.scaleZ = 1);
}
v.zOrigin = P;
        for (o in v)
        T > v[o] && v[o] > - T && (v[o] = 0);
        return i && (t._gsTransform = v), v;
}, Pe = function (t) {
var e, i, s = this.data, r = - s.rotation * M, n = r + s.skewX * M, a = 1e5, o = (0 | Math.cos(r) * s.scaleX * a) / a, h = (0 | Math.sin(r) * s.scaleX * a) / a, l = (0 | Math.sin(n) * - s.scaleY * a) / a, _ = (0 | Math.cos(n) * s.scaleY * a) / a, u = this.t.style, p = this.t.currentStyle;
        if (p) {
i = h, h = - l, l = - i, e = p.filter, u.filter = "";
        var f, m, d = this.t.offsetWidth, g = this.t.offsetHeight, v = "absolute" !== p.position, w = "progid:DXImageTransform.Microsoft.Matrix(M11=" + o + ", M12=" + h + ", M21=" + l + ", M22=" + _, x = s.x, b = s.y;
        if (null != s.ox && (f = (s.oxp ? .01 * d * s.ox : s.ox) - d / 2, m = (s.oyp ? .01 * g * s.oy : s.oy) - g / 2, x += f - (f * o + m * h), b += m - (f * l + m * _)), v ? (f = d / 2, m = g / 2, w += ", Dx=" + (f - (f * o + m * h) + x) + ", Dy=" + (m - (f * l + m * _) + b) + ")") : w += ", sizingMethod='auto expand')", u.filter = - 1 !== e.indexOf("DXImageTransform.Microsoft.Matrix(") ? e.replace(O, w) : w + " " + e, (0 === t || 1 === t) && 1 === o && 0 === h && 0 === l && 1 === _ && (v && - 1 === w.indexOf("Dx=0, Dy=0") || T.test(e) && 100 !== parseFloat(RegExp.$1) || - 1 === e.indexOf("gradient(" && e.indexOf("Alpha")) && u.removeAttribute("filter")), !v) {
var P, S, k, R = 8 > c ? 1 : - 1;
        for (f = s.ieOffsetX || 0, m = s.ieOffsetY || 0, s.ieOffsetX = Math.round((d - ((0 > o ? - o : o) * d + (0 > h ? - h : h) * g)) / 2 + x), s.ieOffsetY = Math.round((g - ((0 > _ ? - _ : _) * g + (0 > l ? - l : l) * d)) / 2 + b), ce = 0; 4 > ce; ce++)
        S = J[ce], P = p[S], i = - 1 !== P.indexOf("px") ? parseFloat(P) : $(this.t, S, parseFloat(P), P.replace(y, "")) || 0, k = i !== s[S] ? 2 > ce ? - s.ieOffsetX : - s.ieOffsetY : 2 > ce ? f - s.ieOffsetX : m - s.ieOffsetY, u[S] = (s[S] = Math.round(i - k * (0 === ce || 2 === ce ? 1 : R))) + "px";
}
}
}, Se = function () {
var t, e, i, s, r, n, a, o, h, l, _, u, f, c, m, d, g, v, y, T, w, x, b, P = this.data, S = this.t.style, k = P.rotation * M, R = P.scaleX, A = P.scaleY, C = P.scaleZ, O = P.perspective;
        if (p) {
var D = 1e-4;
        D > R && R > - D && (R = C = 2e-5), D > A && A > - D && (A = C = 2e-5), !O || P.z || P.rotationX || P.rotationY || (O = 0);
}
if (k || P.skewX)
        v = Math.cos(k), y = Math.sin(k), t = v, r = y, P.skewX && (k -= P.skewX * M, v = Math.cos(k), y = Math.sin(k)), e = - y, n = v;
        else {
        if (!(P.rotationY || P.rotationX || 1 !== C || O))
                return S[ye] = "translate3d(" + P.x + "px," + P.y + "px," + P.z + "px)" + (1 !== R || 1 !== A ? " scale(" + R + "," + A + ")" : ""), void 0;
                t = n = 1, e = r = 0;
        }
_ = 1, i = s = a = o = h = l = u = f = c = 0, m = O ? - 1 / O : 0, d = P.zOrigin, g = 1e5, k = P.rotationY * M, k && (v = Math.cos(k), y = Math.sin(k), h = _ * - y, f = m * - y, i = t * y, a = r * y, _ *= v, m *= v, t *= v, r *= v), k = P.rotationX * M, k && (v = Math.cos(k), y = Math.sin(k), T = e * v + i * y, w = n * v + a * y, x = l * v + _ * y, b = c * v + m * y, i = e * - y + i * v, a = n * - y + a * v, _ = l * - y + _ * v, m = c * - y + m * v, e = T, n = w, l = x, c = b), 1 !== C && (i *= C, a *= C, _ *= C, m *= C), 1 !== A && (e *= A, n *= A, l *= A, c *= A), 1 !== R && (t *= R, r *= R, h *= R, f *= R), d && (u -= d, s = i * u, o = a * u, u = _ * u + d), s = (T = (s += P.x) - (s |= 0)) ? (0 | T * g + (0 > T ? - .5 : .5)) / g + s : s, o = (T = (o += P.y) - (o |= 0)) ? (0 | T * g + (0 > T ? - .5 : .5)) / g + o : o, u = (T = (u += P.z) - (u |= 0)) ? (0 | T * g + (0 > T ? - .5 : .5)) / g + u : u, S[ye] = "matrix3d(" + [(0 | t * g) / g, (0 | r * g) / g, (0 | h * g) / g, (0 | f * g) / g, (0 | e * g) / g, (0 | n * g) / g, (0 | l * g) / g, (0 | c * g) / g, (0 | i * g) / g, (0 | a * g) / g, (0 | _ * g) / g, (0 | m * g) / g, s, o, u, O ? 1 + - u / O : 1].join(",") + ")";
}, ke = function () {
var t, e, i, s, r, n, a, o, h, l = this.data, _ = this.t, u = _.style;
        p && (t = u.top ? "top" : u.bottom ? "bottom" : parseFloat(G(_, "top", null, !1)) ? "bottom" : "top", e = G(_, t, null, !1), i = parseFloat(e) || 0, s = e.substr((i + "").length) || "px", l._ffFix = !l._ffFix, u[t] = (l._ffFix ? i + .05 : i - .05) + s), l.rotation || l.skewX ? (r = l.rotation * M, n = r - l.skewX * M, a = 1e5, o = l.scaleX * a, h = l.scaleY * a, u[ye] = "matrix(" + (0 | Math.cos(r) * o) / a + "," + (0 | Math.sin(r) * o) / a + "," + (0 | Math.sin(n) * - h) / a + "," + (0 | Math.cos(n) * h) / a + "," + l.x + "," + l.y + ")") : u[ye] = "matrix(" + l.scaleX + ",0,0," + l.scaleY + "," + l.x + "," + l.y + ")";
};
        de("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,transformPerspective,directionalRotation,parseTransform,force3D", { parser: function (t, e, i, s, n, a, o) {
        if (s._transform)
                return n;
                var h, l, _, u, p, f, c, m = s._transform = be(t, r, !0, o.parseTransform), d = t.style, g = 1e-6, v = ve.length, y = o, T = {};
                if ("string" == typeof y.transform && ye)
                _ = d.cssText, d[ye] = y.transform, d.display = "block", h = be(t, null, !1), d.cssText = _;
                else if ("object" == typeof y) {
        if (h = { scaleX: se(null != y.scaleX ? y.scaleX : y.scale, m.scaleX), scaleY: se(null != y.scaleY ? y.scaleY : y.scale, m.scaleY), scaleZ: se(null != y.scaleZ ? y.scaleZ : y.scale, m.scaleZ), x: se(y.x, m.x), y: se(y.y, m.y), z: se(y.z, m.z), perspective: se(y.transformPerspective, m.perspective) }, c = y.directionalRotation, null != c)
                if ("object" == typeof c)
                for (_ in c)
                y[_] = c[_];
                else
                y.rotation = c;
                h.rotation = re("rotation" in y ? y.rotation : "shortRotation" in y ? y.shortRotation + "_short" : "rotationZ" in y ? y.rotationZ : m.rotation, m.rotation, "rotation", T), xe && (h.rotationX = re("rotationX" in y ? y.rotationX : "shortRotationX" in y ? y.shortRotationX + "_short" : m.rotationX || 0, m.rotationX, "rotationX", T), h.rotationY = re("rotationY" in y ? y.rotationY : "shortRotationY" in y ? y.shortRotationY + "_short" : m.rotationY || 0, m.rotationY, "rotationY", T)), h.skewX = null == y.skewX ? m.skewX : re(y.skewX, m.skewX), h.skewY = null == y.skewY ? m.skewY : re(y.skewY, m.skewY), (l = h.skewY - m.skewY) && (h.skewX += l, h.rotation += l);
        }
        for (null != y.force3D && (m.force3D = y.force3D, f = !0), p = m.force3D || m.z || m.rotationX || m.rotationY || h.z || h.rotationX || h.rotationY || h.perspective, p || null == y.scale || (h.scaleZ = 1); --v > - 1; )
                i = ve[v], u = h[i] - m[i], (u > g || - g > u || null != E[i]) && (f = !0, n = new pe(m, i, m[i], u, n), i in T && (n.e = T[i]), n.xs0 = 0, n.plugin = a, s._overwriteProps.push(n.n));
                return u = y.transformOrigin, (u || xe && p && m.zOrigin) && (ye ? (f = !0, i = we, u = (u || G(t, i, r, !1, "50% 50%")) + "", n = new pe(d, i, 0, 0, n, - 1, "transformOrigin"), n.b = d[i], n.plugin = a, xe ? (_ = m.zOrigin, u = u.split(" "), m.zOrigin = (u.length > 2 && (0 === _ || "0px" !== u[2]) ? parseFloat(u[2]) : _) || 0, n.xs0 = n.e = d[i] = u[0] + " " + (u[1] || "50%") + " 0px", n = new pe(m, "zOrigin", 0, 0, n, - 1, n.n), n.b = _, n.xs0 = n.e = m.zOrigin) : n.xs0 = n.e = d[i] = u) : ee(u + "", m)), f && (s._transformType = p || 3 === this._transformType ? 3 : 2), n;
        }, prefix: !0 }), de("boxShadow", { defaultValue: "0px 0px 0px 0px #999", prefix: !0, color: !0, multi: !0, keyword: "inset" }), de("borderRadius", { defaultValue: "0px", parser: function (t, e, i, n, a) {
e = this.format(e);
        var o, h, l, _, u, p, f, c, m, d, g, v, y, T, w, x, b = ["borderTopLeftRadius", "borderTopRightRadius", "borderBottomRightRadius", "borderBottomLeftRadius"], P = t.style;
        for (m = parseFloat(t.offsetWidth), d = parseFloat(t.offsetHeight), o = e.split(" "), h = 0; b.length > h; h++)
        this.p.indexOf("border") && (b[h] = V(b[h])), u = _ = G(t, b[h], r, !1, "0px"), - 1 !== u.indexOf(" ") && (_ = u.split(" "), u = _[0], _ = _[1]), p = l = o[h], f = parseFloat(u), v = u.substr((f + "").length), y = "=" === p.charAt(1), y ? (c = parseInt(p.charAt(0) + "1", 10), p = p.substr(2), c *= parseFloat(p), g = p.substr((c + "").length - (0 > c ? 1 : 0)) || "") : (c = parseFloat(p), g = p.substr((c + "").length)), "" === g && (g = s[i] || v), g !== v && (T = $(t, "borderLeft", f, v), w = $(t, "borderTop", f, v), "%" === g ? (u = 100 * (T / m) + "%", _ = 100 * (w / d) + "%") : "em" === g ? (x = $(t, "borderLeft", 1, "em"), u = T / x + "em", _ = w / x + "em") : (u = T + "px", _ = w + "px"), y && (p = parseFloat(u) + c + g, l = parseFloat(_) + c + g)), a = fe(P, b[h], u + " " + _, p + " " + l, !1, "0px", a);
        return a;
}, prefix: !0, formatter: le("0px 0px 0px 0px", !1, !0) }), de("backgroundPosition", { defaultValue: "0 0", parser: function (t, e, i, s, n, a) {
var o, h, l, _, u, p, f = "background-position", m = r || Z(t, null), d = this.format((m ? c ? m.getPropertyValue(f + "-x") + " " + m.getPropertyValue(f + "-y") : m.getPropertyValue(f) : t.currentStyle.backgroundPositionX + " " + t.currentStyle.backgroundPositionY) || "0 0"), g = this.format(e);
        if ( - 1 !== d.indexOf("%") != ( - 1 !== g.indexOf("%")) && (p = G(t, "backgroundImage").replace(k, ""), p && "none" !== p)) {
for (o = d.split(" "), h = g.split(" "), L.setAttribute("src", p), l = 2; --l > - 1; )
        d = o[l], _ = - 1 !== d.indexOf("%"), _ !== ( - 1 !== h[l].indexOf("%")) && (u = 0 === l ? t.offsetWidth - L.width : t.offsetHeight - L.height, o[l] = _ ? parseFloat(d) / 100 * u + "px" : 100 * (parseFloat(d) / u) + "%");
        d = o.join(" ");
}
return this.parseComplex(t.style, d, g, n, a);
}, formatter: ee }), de("backgroundSize", { defaultValue: "0 0", formatter: ee }), de("perspective", { defaultValue: "0px", prefix: !0 }), de("perspectiveOrigin", { defaultValue: "50% 50%", prefix: !0 }), de("transformStyle", { prefix: !0 }), de("backfaceVisibility", { prefix: !0 }), de("userSelect", { prefix: !0 }), de("margin", { parser: _e("marginTop,marginRight,marginBottom,marginLeft") }), de("padding", { parser: _e("paddingTop,paddingRight,paddingBottom,paddingLeft") }), de("clip", { defaultValue: "rect(0px,0px,0px,0px)", parser: function (t, e, i, s, n, a) {
var o, h, l;
        return 9 > c ? (h = t.currentStyle, l = 8 > c ? " " : ",", o = "rect(" + h.clipTop + l + h.clipRight + l + h.clipBottom + l + h.clipLeft + ")", e = this.format(e).split(",").join(l)) : (o = this.format(G(t, this.p, r, !1, this.dflt)), e = this.format(e)), this.parseComplex(t.style, o, e, n, a);
} }), de("textShadow", { defaultValue: "0px 0px 0px #999", color: !0, multi: !0 }), de("autoRound,strictUnits", { parser: function (t, e, i, s, r) {
return r;
} }), de("border", { defaultValue: "0px solid #000", parser: function (t, e, i, s, n, a) {
return this.parseComplex(t.style, this.format(G(t, "borderTopWidth", r, !1, "0px") + " " + G(t, "borderTopStyle", r, !1, "solid") + " " + G(t, "borderTopColor", r, !1, "#000")), this.format(e), n, a);
}, color: !0, formatter: function (t) {
var e = t.split(" ");
        return e[0] + " " + (e[1] || "solid") + " " + (t.match(he) || ["#000"])[0];
} }), de("float,cssFloat,styleFloat", { parser: function (t, e, i, s, r) {
var n = t.style, a = "cssFloat" in n ? "cssFloat" : "styleFloat";
        return new pe(n, a, 0, 0, r, - 1, i, !1, 0, n[a], e);
} });
        var Re = function (t) {
        var e, i = this.t, s = i.filter || G(this.data, "filter"), r = 0 | this.s + this.c * t;
                100 === r && ( - 1 === s.indexOf("atrix(") && - 1 === s.indexOf("radient(") && - 1 === s.indexOf("oader(") ? (i.removeAttribute("filter"), e = !G(this.data, "filter")) : (i.filter = s.replace(x, ""), e = !0)), e || (this.xn1 && (i.filter = s = s || "alpha(opacity=" + r + ")"), - 1 === s.indexOf("opacity") ? 0 === r && this.xn1 || (i.filter = s + " alpha(opacity=" + r + ")") : i.filter = s.replace(T, "opacity=" + r));
        };
        de("opacity,alpha,autoAlpha", { defaultValue: "1", parser: function (t, e, i, s, n, a) {
        var o = parseFloat(G(t, "opacity", r, !1, "1")), h = t.style, l = "autoAlpha" === i;
                return "string" == typeof e && "=" === e.charAt(1) && (e = ("-" === e.charAt(0) ? - 1 : 1) * parseFloat(e.substr(2)) + o), l && 1 === o && "hidden" === G(t, "visibility", r) && 0 !== e && (o = 0), U ? n = new pe(h, "opacity", o, e - o, n) : (n = new pe(h, "opacity", 100 * o, 100 * (e - o), n), n.xn1 = l ? 1 : 0, h.zoom = 1, n.type = 2, n.b = "alpha(opacity=" + n.s + ")", n.e = "alpha(opacity=" + (n.s + n.c) + ")", n.data = t, n.plugin = a, n.setRatio = Re), l && (n = new pe(h, "visibility", 0, 0, n, - 1, null, !1, 0, 0 !== o ? "inherit" : "hidden", 0 === e ? "hidden" : "inherit"), n.xs0 = "inherit", s._overwriteProps.push(n.n), s._overwriteProps.push(i)), n;
        } });
        var Ae = function (t, e) {
        e && (t.removeProperty ? t.removeProperty(e.replace(P, "-$1").toLowerCase()) : t.removeAttribute(e));
        }, Ce = function (t) {
if (this.t._gsClassPT = this, 1 === t || 0 === t) {
this.t.className = 0 === t ? this.b : this.e;
        for (var e = this.data, i = this.t.style; e; )
        e.v ? i[e.p] = e.v : Ae(i, e.p), e = e._next;
        1 === t && this.t._gsClassPT === this && (this.t._gsClassPT = null);
}
else
        this.t.className !== this.e && (this.t.className = this.e);
};
        de("className", { parser: function (t, e, s, n, a, o, h) {
        var l, _, u, p, f, c = t.className, m = t.style.cssText;
                if (a = n._classNamePT = new pe(t, s, 0, 0, a, 2), a.setRatio = Ce, a.pr = - 11, i = !0, a.b = c, _ = W(t, r), u = t._gsClassPT) {
        for (p = {}, f = u.data; f; )
                p[f.p] = 1, f = f._next;
                u.setRatio(1);
        }
        return t._gsClassPT = a, a.e = "=" !== e.charAt(1) ? e : c.replace(RegExp("\\s*\\b" + e.substr(2) + "\\b"), "") + ("+" === e.charAt(0) ? " " + e.substr(2) : ""), n._tween._duration && (t.className = a.e, l = H(t, _, W(t), h, p), t.className = c, a.data = l.firstMPT, t.style.cssText = m, a = a.xfirst = n.parse(t, l.difs, a, o)), a;
        } });
        var Oe = function (t) {
        if ((1 === t || 0 === t) && this.data._totalTime === this.data._totalDuration && "isFromStart" !== this.data.data) {
        var e, i, s, r, n = this.t.style, a = o.transform.parse;
                if ("all" === this.e)
                n.cssText = "", r = !0;
                else
                for (e = this.e.split(","), s = e.length; --s > - 1; )
                i = e[s], o[i] && (o[i].parse === a ? r = !0 : i = "transformOrigin" === i ? we : o[i].p), Ae(n, i);
                r && (Ae(n, ye), this.t._gsTransform && delete this.t._gsTransform);
        }
        };
        for (de("clearProps", { parser: function (t, e, s, r, n) {
        return n = new pe(t, s, 0, 0, n, 2), n.setRatio = Oe, n.e = e, n.pr = - 10, n.data = r._tween, i = !0, n;
        } }), h = "bezier,throwProps,physicsProps,physics2D".split(","), ce = h.length; ce--; )
        ge(h[ce]);
        h = a.prototype, h._firstPT = null, h._onInitTween = function (t, e, o) {
        if (!t.nodeType)
                return !1;
                this._target = t, this._tween = o, this._vars = e, l = e.autoRound, i = !1, s = e.suffixMap || a.suffixMap, r = Z(t, ""), n = this._overwriteProps;
                var h, p, c, m, d, g, v, y, T, x = t.style;
                if (_ && "" === x.zIndex && (h = G(t, "zIndex", r), ("auto" === h || "" === h) && (x.zIndex = 0)), "string" == typeof e && (m = x.cssText, h = W(t, r), x.cssText = m + ";" + e, h = H(t, h, W(t)).difs, !U && w.test(e) && (h.opacity = parseFloat(RegExp.$1)), e = h, x.cssText = m), this._firstPT = p = this.parse(t, e, null), this._transformType) {
        for (T = 3 === this._transformType, ye ? u && (_ = !0, "" === x.zIndex && (v = G(t, "zIndex", r), ("auto" === v || "" === v) && (x.zIndex = 0)), f && (x.WebkitBackfaceVisibility = this._vars.WebkitBackfaceVisibility || (T ? "visible" : "hidden"))) : x.zoom = 1, c = p; c && c._next; )
                c = c._next;
                y = new pe(t, "transform", 0, 0, null, 2), this._linkCSSP(y, null, c), y.setRatio = T && xe ? Se : ye ? ke : Pe, y.data = this._transform || be(t, r, !0), n.pop();
        }
        if (i) {
        for (; p; ) {
        for (g = p._next, c = m; c && c.pr > p.pr; )
                c = c._next;
                (p._prev = c ? c._prev : d) ? p._prev._next = p : m = p, (p._next = c) ? c._prev = p : d = p, p = g;
        }
        this._firstPT = m;
        }
        return !0;
        }, h.parse = function (t, e, i, n) {
var a, h, _, u, p, f, c, m, d, g, v = t.style;
        for (a in e)
        f = e[a], h = o[a], h ? i = h.parse(t, f, a, this, i, n, e) : (p = G(t, a, r) + "", d = "string" == typeof f, "color" === a || "fill" === a || "stroke" === a || - 1 !== a.indexOf("Color") || d && b.test(f) ? (d || (f = oe(f), f = (f.length > 3 ? "rgba(" : "rgb(") + f.join(",") + ")"), i = fe(v, a, p, f, !0, "transparent", i, 0, n)) : !d || - 1 === f.indexOf(" ") && - 1 === f.indexOf(",") ? (_ = parseFloat(p), c = _ || 0 === _ ? p.substr((_ + "").length) : "", ("" === p || "auto" === p) && ("width" === a || "height" === a ? (_ = te(t, a, r), c = "px") : "left" === a || "top" === a ? (_ = Q(t, a, r), c = "px") : (_ = "opacity" !== a ? 0 : 1, c = "")), g = d && "=" === f.charAt(1), g ? (u = parseInt(f.charAt(0) + "1", 10), f = f.substr(2), u *= parseFloat(f), m = f.replace(y, "")) : (u = parseFloat(f), m = d ? f.substr((u + "").length) || "" : ""), "" === m && (m = s[a] || c), f = u || 0 === u ? (g ? u + _ : u) + m : e[a], c !== m && "" !== m && (u || 0 === u) && (_ || 0 === _) && (_ = $(t, a, _, c), "%" === m ? (_ /= $(t, a, 100, "%") / 100, _ > 100 && (_ = 100), e.strictUnits !== !0 && (p = _ + "%")) : "em" === m ? _ /= $(t, a, 1, "em") : (u = $(t, a, u, m), m = "px"), g && (u || 0 === u) && (f = u + _ + m)), g && (u += _), !_ && 0 !== _ || !u && 0 !== u ? void 0 !== v[a] && (f || "NaN" != f + "" && null != f) ? (i = new pe(v, a, u || _ || 0, 0, i, - 1, a, !1, 0, p, f), i.xs0 = "none" !== f || "display" !== a && - 1 === a.indexOf("Style") ? f : p) : j("invalid " + a + " tween value: " + e[a]) : (i = new pe(v, a, _, u - _, i, 0, a, l !== !1 && ("px" === m || "zIndex" === a), 0, p, f), i.xs0 = m)) : i = fe(v, a, p, f, !0, null, i, 0, n)), n && i && !i.plugin && (i.plugin = n);
        return i;
}, h.setRatio = function (t) {
var e, i, s, r = this._firstPT, n = 1e-6;
        if (1 !== t || this._tween._time !== this._tween._duration && 0 !== this._tween._time)
        if (t || this._tween._time !== this._tween._duration && 0 !== this._tween._time || this._tween._rawPrevTime === - 1e-6)
        for (; r; ) {
if (e = r.c * t + r.s, r.r ? e = e > 0 ? 0 | e + .5 : 0 | e - .5 : n > e && e > - n && (e = 0), r.type)
        if (1 === r.type)
        if (s = r.l, 2 === s)
        r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2;
        else if (3 === s)
        r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3;
        else if (4 === s)
        r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3 + r.xn3 + r.xs4;
        else if (5 === s)
        r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3 + r.xn3 + r.xs4 + r.xn4 + r.xs5;
        else {
        for (i = r.xs0 + e + r.xs1, s = 1; r.l > s; s++)
                i += r["xn" + s] + r["xs" + (s + 1)];
                r.t[r.p] = i;
        }
else
        - 1 === r.type ? r.t[r.p] = r.xs0 : r.setRatio && r.setRatio(t);
        else
        r.t[r.p] = e + r.xs0;
        r = r._next;
}
else
        for (; r; )
        2 !== r.type ? r.t[r.p] = r.b : r.setRatio(t), r = r._next;
        else
        for (; r; )
        2 !== r.type ? r.t[r.p] = r.e : r.setRatio(t), r = r._next;
}, h._enableTransforms = function (t) {
this._transformType = t || 3 === this._transformType ? 3 : 2, this._transform = this._transform || be(this._target, r, !0);
}, h._linkCSSP = function (t, e, i, s) {
return t && (e && (e._prev = t), t._next && (t._next._prev = t._prev), t._prev ? t._prev._next = t._next : this._firstPT === t && (this._firstPT = t._next, s = !0), i ? i._next = t : s || null !== this._firstPT || (this._firstPT = t), t._next = e, t._prev = i), t;
}, h._kill = function (e) {
var i, s, r, n = e;
        if (e.autoAlpha || e.alpha) {
n = {};
        for (s in e)
        n[s] = e[s];
        n.opacity = 1, n.autoAlpha && (n.visibility = 1);
}
return e.className && (i = this._classNamePT) && (r = i.xfirst, r && r._prev ? this._linkCSSP(r._prev, i._next, r._prev._prev) : r === this._firstPT && (this._firstPT = i._next), i._next && this._linkCSSP(i._next, i._next._next, r._prev), this._classNamePT = null), t.prototype._kill.call(this, n);
};
        var De = function (t, e, i) {
        var s, r, n, a;
                if (t.slice)
                for (r = t.length; --r > - 1; )
                De(t[r], e, i);
                else
                for (s = t.childNodes, r = s.length; --r > - 1; )
                n = s[r], a = n.type, n.style && (e.push(W(n)), i && i.push(n)), 1 !== a && 9 !== a && 11 !== a || !n.childNodes.length || De(n, e, i);
        };
        return a.cascadeTo = function (t, i, s) {
        var r, n, a, o = e.to(t, i, s), h = [o], l = [], _ = [], u = [], p = e._internals.reservedProps;
                for (t = o._targets || o.target, De(t, l, u), o.render(i, !0), De(t, _), o.render(0, !0), o._enabled(!0), r = u.length; --r > - 1; )
                if (n = H(u[r], l[r], _[r]), n.firstMPT) {
        n = n.difs;
                for (a in s)
                p[a] && (n[a] = s[a]);
                h.push(e.to(u[r], i, n));
        }
        return h;
        }, t.activate([a]), a;
}, !0), function () {
var t = window._gsDefine.plugin({ propName: "roundProps", priority: - 1, API: 2, init: function (t, e, i) {
return this._tween = i, !0;
} }), e = t.prototype;
        e._onInitAllProps = function () {
        for (var t, e, i, s = this._tween, r = s.vars.roundProps instanceof Array ? s.vars.roundProps : s.vars.roundProps.split(","), n = r.length, a = {}, o = s._propLookup.roundProps; --n > - 1; )
                a[r[n]] = 1;
                for (n = r.length; --n > - 1; )
                for (t = r[n], e = s._firstPT; e; )
                i = e._next, e.pg ? e.t._roundProps(a, !0) : e.n === t && (this._add(e.t, t, e.s, e.c), i && (i._prev = e._prev), e._prev ? e._prev._next = i : s._firstPT === e && (s._firstPT = i), e._next = e._prev = null, s._propLookup[t] = o), e = i;
                return !1;
        }, e._add = function (t, e, i, s) {
this._addTween(t, e, i, i + s, e, !0), this._overwriteProps.push(e);
};
}(), window._gsDefine.plugin({ propName: "attr", API: 2, init: function (t, e) {
var i;
        if ("function" != typeof t.setAttribute)
        return !1;
        this._target = t, this._proxy = {};
        for (i in e)
        this._addTween(this._proxy, i, parseFloat(t.getAttribute(i)), e[i], i) && this._overwriteProps.push(i);
        return !0;
}, set: function (t) {
this._super.setRatio.call(this, t);
        for (var e, i = this._overwriteProps, s = i.length; --s > - 1; )
        e = i[s], this._target.setAttribute(e, this._proxy[e] + "");
} }), window._gsDefine.plugin({ propName: "directionalRotation", API: 2, init: function (t, e) {
"object" != typeof e && (e = { rotation: e }), this.finals = {};
        var i, s, r, n, a, o, h = e.useRadians === !0 ? 2 * Math.PI : 360, l = 1e-6;
        for (i in e)
        "useRadians" !== i && (o = (e[i] + "").split("_"), s = o[0], r = parseFloat("function" != typeof t[i] ? t[i] : t[i.indexOf("set") || "function" != typeof t["get" + i.substr(3)] ? i : "get" + i.substr(3)]()), n = this.finals[i] = "string" == typeof s && "=" === s.charAt(1) ? r + parseInt(s.charAt(0) + "1", 10) * Number(s.substr(2)) : Number(s) || 0, a = n - r, o.length && (s = o.join("_"), - 1 !== s.indexOf("short") && (a %= h, a !== a % (h / 2) && (a = 0 > a ? a + h : a - h)), - 1 !== s.indexOf("_cw") && 0 > a ? a = (a + 9999999999 * h) % h - (0 | a / h) * h : - 1 !== s.indexOf("ccw") && a > 0 && (a = (a - 9999999999 * h) % h - (0 | a / h) * h)), (a > l || - l > a) && (this._addTween(t, i, r, r + a, i), this._overwriteProps.push(i)));
        return !0;
}, set: function (t) {
var e;
        if (1 !== t)
        this._super.setRatio.call(this, t);
        else
        for (e = this._firstPT; e; )
        e.f ? e.t[e.p](this.finals[e.p]) : e.t[e.p] = this.finals[e.p], e = e._next;
} })._autoCSS = !0, window._gsDefine("easing.Back", ["easing.Ease"], function (t) {
var e, i, s, r = window.GreenSockGlobals || window, n = r.com.greensock, a = 2 * Math.PI, o = Math.PI / 2, h = n._class, l = function (e, i) {
var s = h("easing." + e, function () {
}, !0), r = s.prototype = new t;
        return r.constructor = s, r.getRatio = i, s;
}, _ = t.register || function () {
}, u = function (t, e, i, s) {
var r = h("easing." + t, { easeOut: new e, easeIn: new i, easeInOut: new s }, !0);
        return _(r, t), r;
}, p = function (t, e, i) {
this.t = t, this.v = e, i && (this.next = i, i.prev = this, this.c = i.v - e, this.gap = i.t - t);
}, f = function (e, i) {
var s = h("easing." + e, function (t) {
this._p1 = t || 0 === t ? t : 1.70158, this._p2 = 1.525 * this._p1;
}, !0), r = s.prototype = new t;
        return r.constructor = s, r.getRatio = i, r.config = function (t) {
        return new s(t);
        }, s;
}, c = u("Back", f("BackOut", function (t) {
return (t -= 1) * t * ((this._p1 + 1) * t + this._p1) + 1;
}), f("BackIn", function (t) {
return t * t * ((this._p1 + 1) * t - this._p1);
}), f("BackInOut", function (t) {
return 1 > (t *= 2) ? .5 * t * t * ((this._p2 + 1) * t - this._p2) : .5 * ((t -= 2) * t * ((this._p2 + 1) * t + this._p2) + 2);
})), m = h("easing.SlowMo", function (t, e, i) {
e = e || 0 === e ? e : .7, null == t ? t = .7 : t > 1 && (t = 1), this._p = 1 !== t ? e : 0, this._p1 = (1 - t) / 2, this._p2 = t, this._p3 = this._p1 + this._p2, this._calcEnd = i === !0;
}, !0), d = m.prototype = new t;
        return d.constructor = m, d.getRatio = function (t) {
        var e = t + (.5 - t) * this._p;
                return this._p1 > t ? this._calcEnd ? 1 - (t = 1 - t / this._p1) * t : e - (t = 1 - t / this._p1) * t * t * t * e : t > this._p3 ? this._calcEnd ? 1 - (t = (t - this._p3) / this._p1) * t : e + (t - e) * (t = (t - this._p3) / this._p1) * t * t * t : this._calcEnd ? 1 : e;
        }, m.ease = new m(.7, .7), d.config = m.config = function (t, e, i) {
return new m(t, e, i);
}, e = h("easing.SteppedEase", function (t) {
t = t || 1, this._p1 = 1 / t, this._p2 = t + 1;
}, !0), d = e.prototype = new t, d.constructor = e, d.getRatio = function (t) {
return 0 > t ? t = 0 : t >= 1 && (t = .999999999), (this._p2 * t >> 0) * this._p1;
}, d.config = e.config = function (t) {
return new e(t);
}, i = h("easing.RoughEase", function (e) {
e = e || {};
        for (var i, s, r, n, a, o, h = e.taper || "none", l = [], _ = 0, u = 0 | (e.points || 20), f = u, c = e.randomize !== !1, m = e.clamp === !0, d = e.template instanceof t ? e.template : null, g = "number" == typeof e.strength ? .4 * e.strength : .4; --f > - 1; )
        i = c ? Math.random() : 1 / u * f, s = d ? d.getRatio(i) : i, "none" === h ? r = g : "out" === h ? (n = 1 - i, r = n * n * g) : "in" === h ? r = i * i * g : .5 > i ? (n = 2 * i, r = .5 * n * n * g) : (n = 2 * (1 - i), r = .5 * n * n * g), c ? s += Math.random() * r - .5 * r : f % 2 ? s += .5 * r : s -= .5 * r, m && (s > 1 ? s = 1 : 0 > s && (s = 0)), l[_++] = { x: i, y: s };
        for (l.sort(function (t, e) {
        return t.x - e.x;
        }), o = new p(1, 1, null), f = u; --f > - 1; )
        a = l[f], o = new p(a.x, a.y, o);
        this._prev = new p(0, 0, 0 !== o.t ? o : o.next);
}, !0), d = i.prototype = new t, d.constructor = i, d.getRatio = function (t) {
var e = this._prev;
        if (t > e.t) {
for (; e.next && t >= e.t; )
        e = e.next;
        e = e.prev;
}
else
        for (; e.prev && e.t >= t; )
        e = e.prev;
        return this._prev = e, e.v + (t - e.t) / e.gap * e.c;
}, d.config = function (t) {
return new i(t);
}, i.ease = new i, u("Bounce", l("BounceOut", function (t) {
return 1 / 2.75 > t ? 7.5625 * t * t : 2 / 2.75 > t ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : 2.5 / 2.75 > t ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
}), l("BounceIn", function (t) {
return 1 / 2.75 > (t = 1 - t) ? 1 - 7.5625 * t * t : 2 / 2.75 > t ? 1 - (7.5625 * (t -= 1.5 / 2.75) * t + .75) : 2.5 / 2.75 > t ? 1 - (7.5625 * (t -= 2.25 / 2.75) * t + .9375) : 1 - (7.5625 * (t -= 2.625 / 2.75) * t + .984375);
}), l("BounceInOut", function (t) {
var e = .5 > t;
        return t = e ? 1 - 2 * t : 2 * t - 1, t = 1 / 2.75 > t ? 7.5625 * t * t : 2 / 2.75 > t ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : 2.5 / 2.75 > t ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375, e ? .5 * (1 - t) : .5 * t + .5;
})), u("Circ", l("CircOut", function (t) {
return Math.sqrt(1 - (t -= 1) * t);
}), l("CircIn", function (t) {
return - (Math.sqrt(1 - t * t) - 1);
}), l("CircInOut", function (t) {
return 1 > (t *= 2) ? - .5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
})), s = function (e, i, s) {
var r = h("easing." + e, function (t, e) {
this._p1 = t || 1, this._p2 = e || s, this._p3 = this._p2 / a * (Math.asin(1 / this._p1) || 0);
}, !0), n = r.prototype = new t;
        return n.constructor = r, n.getRatio = i, n.config = function (t, e) {
        return new r(t, e);
        }, r;
}, u("Elastic", s("ElasticOut", function (t) {
return this._p1 * Math.pow(2, - 10 * t) * Math.sin((t - this._p3) * a / this._p2) + 1;
}, .3), s("ElasticIn", function (t) {
return - (this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * a / this._p2));
}, .3), s("ElasticInOut", function (t) {
return 1 > (t *= 2) ? - .5 * this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * a / this._p2) : .5 * this._p1 * Math.pow(2, - 10 * (t -= 1)) * Math.sin((t - this._p3) * a / this._p2) + 1;
}, .45)), u("Expo", l("ExpoOut", function (t) {
return 1 - Math.pow(2, - 10 * t);
}), l("ExpoIn", function (t) {
return Math.pow(2, 10 * (t - 1)) - .001;
}), l("ExpoInOut", function (t) {
return 1 > (t *= 2) ? .5 * Math.pow(2, 10 * (t - 1)) : .5 * (2 - Math.pow(2, - 10 * (t - 1)));
})), u("Sine", l("SineOut", function (t) {
return Math.sin(t * o);
}), l("SineIn", function (t) {
return - Math.cos(t * o) + 1;
}), l("SineInOut", function (t) {
return - .5 * (Math.cos(Math.PI * t) - 1);
})), h("easing.EaseLookup", { find: function (e) {
return t.map[e];
} }, !0), _(r.SlowMo, "SlowMo", "ease,"), _(i, "RoughEase", "ease,"), _(e, "SteppedEase", "ease,"), c;
}, !0);
        }), function (t) {
"use strict";
        var e = t.GreenSockGlobals || t;
        if (!e.TweenLite) {
var i, s, r, n, a, o = function (t) {
var i, s = t.split("."), r = e;
        for (i = 0; s.length > i; i++)
        r[s[i]] = r = r[s[i]] || {};
        return r;
}, h = o("com.greensock"), l = 1e-10, _ = [].slice, u = function () {
}, p = function () {
var t = Object.prototype.toString, e = t.call([]);
        return function (i) {
        return i instanceof Array || "object" == typeof i && !!i.push && t.call(i) === e;
        };
}(), f = {}, c = function (i, s, r, n) {
this.sc = f[i] ? f[i].sc : [], f[i] = this, this.gsClass = null, this.func = r;
        var a = [];
        this.check = function (h) {
        for (var l, _, u, p, m = s.length, d = m; --m > - 1; )
                (l = f[s[m]] || new c(s[m], [])).gsClass ? (a[m] = l.gsClass, d--) : h && l.sc.push(this);
                if (0 === d && r)
                for (_ = ("com.greensock." + i).split("."), u = _.pop(), p = o(_.join("."))[u] = this.gsClass = r.apply(r, a), n && (e[u] = p, "function" == typeof define && define.amd ? define((t.GreenSockAMDPath ? t.GreenSockAMDPath + "/" : "") + i.split(".").join("/"), [], function () {
                return p;
                }) : "undefined" != typeof module && module.exports && (module.exports = p)), m = 0; this.sc.length > m; m++)
                this.sc[m].check();
        }, this.check(!0);
}, m = t._gsDefine = function (t, e, i, s) {
return new c(t, e, i, s);
}, d = h._class = function (t, e, i) {
return e = e || function () {
}, m(t, [], function () {
return e;
}, i), e;
};
        m.globals = e;
        var g = [0, 0, 1, 1], v = [], y = d("easing.Ease", function (t, e, i, s) {
this._func = t, this._type = i || 0, this._power = s || 0, this._params = e ? g.concat(e) : g;
}, !0), T = y.map = {}, w = y.register = function (t, e, i, s) {
for (var r, n, a, o, l = e.split(","), _ = l.length, u = (i || "easeIn,easeOut,easeInOut").split(","); --_ > - 1; )
        for (n = l[_], r = s ? d("easing." + n, null, !0) : h.easing[n] || {}, a = u.length; --a > - 1; )
        o = u[a], T[n + "." + o] = T[o + n] = r[o] = t.getRatio ? t : t[o] || new t;
};
        for (r = y.prototype, r._calcEnd = !1, r.getRatio = function (t) {
        if (this._func)
                return this._params[0] = t, this._func.apply(null, this._params);
                var e = this._type, i = this._power, s = 1 === e ? 1 - t : 2 === e ? t : .5 > t ? 2 * t : 2 * (1 - t);
                return 1 === i ? s *= s : 2 === i ? s *= s * s : 3 === i ? s *= s * s * s : 4 === i && (s *= s * s * s * s), 1 === e ? 1 - s : 2 === e ? s : .5 > t ? s / 2 : 1 - s / 2;
        }, i = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"], s = i.length; --s > - 1; )
        r = i[s] + ",Power" + s, w(new y(null, null, 1, s), r, "easeOut", !0), w(new y(null, null, 2, s), r, "easeIn" + (0 === s ? ",easeNone" : "")), w(new y(null, null, 3, s), r, "easeInOut");
        T.linear = h.easing.Linear.easeIn, T.swing = h.easing.Quad.easeInOut;
        var x = d("events.EventDispatcher", function (t) {
        this._listeners = {}, this._eventTarget = t || this;
        });
        r = x.prototype, r.addEventListener = function (t, e, i, s, r) {
        r = r || 0;
                var o, h, l = this._listeners[t], _ = 0;
                for (null == l && (this._listeners[t] = l = []), h = l.length; --h > - 1; )
                o = l[h], o.c === e && o.s === i ? l.splice(h, 1) : 0 === _ && r > o.pr && (_ = h + 1);
                l.splice(_, 0, { c: e, s: i, up: s, pr: r }), this !== n || a || n.wake();
        }, r.removeEventListener = function (t, e) {
var i, s = this._listeners[t];
        if (s)
        for (i = s.length; --i > - 1; )
        if (s[i].c === e)
        return s.splice(i, 1), void 0;
}, r.dispatchEvent = function (t) {
var e, i, s, r = this._listeners[t];
        if (r)
        for (e = r.length, i = this._eventTarget; --e > - 1; )
        s = r[e], s.up ? s.c.call(s.s || i, { type: t, target: i }) : s.c.call(s.s || i);
};
        var b = t.requestAnimationFrame, P = t.cancelAnimationFrame, S = Date.now || function () {
        return (new Date).getTime();
        }, k = S();
        for (i = ["ms", "moz", "webkit", "o"], s = i.length; --s > - 1 && !b; )
        b = t[i[s] + "RequestAnimationFrame"], P = t[i[s] + "CancelAnimationFrame"] || t[i[s] + "CancelRequestAnimationFrame"];
        d("Ticker", function (t, e) {
        var i, s, r, o, h, l = this, _ = S(), p = e !== !1 && b, f = function (t) {
        k = S(), l.time = (k - _) / 1e3;
                var e, n = l.time - h;
                (!i || n > 0 || t === !0) && (l.frame++, h += n + (n >= o ? .004 : o - n), e = !0), t !== !0 && (r = s(f)), e && l.dispatchEvent("tick");
        };
                x.call(l), l.time = l.frame = 0, l.tick = function () {
        f(!0);
        }, l.sleep = function () {
        null != r && (p && P ? P(r) : clearTimeout(r), s = u, r = null, l === n && (a = !1));
        }, l.wake = function () {
        null !== r && l.sleep(), s = 0 === i ? u : p && b ? b : function (t) {
        return setTimeout(t, 0 | 1e3 * (h - l.time) + 1);
        }, l === n && (a = !0), f(2);
        }, l.fps = function (t) {
        return arguments.length ? (i = t, o = 1 / (i || 60), h = this.time + o, l.wake(), void 0) : i;
        }, l.useRAF = function (t) {
        return arguments.length ? (l.sleep(), p = t, l.fps(i), void 0) : p;
        }, l.fps(t), setTimeout(function () {
        p && (!r || 5 > l.frame) && l.useRAF(!1);
        }, 1500);
        }), r = h.Ticker.prototype = new h.events.EventDispatcher, r.constructor = h.Ticker;
        var R = d("core.Animation", function (t, e) {
        if (this.vars = e = e || {}, this._duration = this._totalDuration = t || 0, this._delay = Number(e.delay) || 0, this._timeScale = 1, this._active = e.immediateRender === !0, this.data = e.data, this._reversed = e.reversed === !0, U) {
        a || n.wake();
                var i = this.vars.useFrames ? z : U;
                i.add(this, i._time), this.vars.paused && this.paused(!0);
        }
        });
        n = R.ticker = new h.Ticker, r = R.prototype, r._dirty = r._gc = r._initted = r._paused = !1, r._totalTime = r._time = 0, r._rawPrevTime = - 1, r._next = r._last = r._onUpdate = r._timeline = r.timeline = null, r._paused = !1;
        var A = function () {
        a && S() - k > 2e3 && n.wake(), setTimeout(A, 2e3);
        };
        A(), r.play = function (t, e) {
return arguments.length && this.seek(t, e), this.reversed(!1).paused(!1);
}, r.pause = function (t, e) {
return arguments.length && this.seek(t, e), this.paused(!0);
}, r.resume = function (t, e) {
return arguments.length && this.seek(t, e), this.paused(!1);
}, r.seek = function (t, e) {
return this.totalTime(Number(t), e !== !1);
}, r.restart = function (t, e) {
return this.reversed(!1).paused(!1).totalTime(t ? - this._delay : 0, e !== !1, !0);
}, r.reverse = function (t, e) {
return arguments.length && this.seek(t || this.totalDuration(), e), this.reversed(!0).paused(!1);
}, r.render = function () {
}, r.invalidate = function () {
return this;
}, r.isActive = function () {
var t, e = this._timeline, i = this._startTime;
        return !e || !this._gc && !this._paused && e.isActive() && (t = e.rawTime()) >= i && i + this.totalDuration() / this._timeScale > t;
}, r._enabled = function (t, e) {
return a || n.wake(), this._gc = !t, this._active = this.isActive(), e !== !0 && (t && !this.timeline ? this._timeline.add(this, this._startTime - this._delay) : !t && this.timeline && this._timeline._remove(this, !0)), !1;
}, r._kill = function () {
return this._enabled(!1, !1);
}, r.kill = function (t, e) {
return this._kill(t, e), this;
}, r._uncache = function (t) {
for (var e = t ? this : this.timeline; e; )
        e._dirty = !0, e = e.timeline;
        return this;
}, r._swapSelfInParams = function (t) {
for (var e = t.length, i = t.concat(); --e > - 1; )
        "{self}" === t[e] && (i[e] = this);
        return i;
}, r.eventCallback = function (t, e, i, s) {
if ("on" === (t || "").substr(0, 2)) {
var r = this.vars;
        if (1 === arguments.length)
        return r[t];
        null == e ? delete r[t] : (r[t] = e, r[t + "Params"] = p(i) && - 1 !== i.join("").indexOf("{self}") ? this._swapSelfInParams(i) : i, r[t + "Scope"] = s), "onUpdate" === t && (this._onUpdate = e);
}
return this;
}, r.delay = function (t) {
return arguments.length ? (this._timeline.smoothChildTiming && this.startTime(this._startTime + t - this._delay), this._delay = t, this) : this._delay;
}, r.duration = function (t) {
return arguments.length ? (this._duration = this._totalDuration = t, this._uncache(!0), this._timeline.smoothChildTiming && this._time > 0 && this._time < this._duration && 0 !== t && this.totalTime(this._totalTime * (t / this._duration), !0), this) : (this._dirty = !1, this._duration);
}, r.totalDuration = function (t) {
return this._dirty = !1, arguments.length ? this.duration(t) : this._totalDuration;
}, r.time = function (t, e) {
return arguments.length ? (this._dirty && this.totalDuration(), this.totalTime(t > this._duration ? this._duration : t, e)) : this._time;
}, r.totalTime = function (t, e, i) {
if (a || n.wake(), !arguments.length)
        return this._totalTime;
        if (this._timeline) {
if (0 > t && !i && (t += this.totalDuration()), this._timeline.smoothChildTiming) {
this._dirty && this.totalDuration();
        var s = this._totalDuration, r = this._timeline;
        if (t > s && !i && (t = s), this._startTime = (this._paused ? this._pauseTime : r._time) - (this._reversed ? s - t : t) / this._timeScale, r._dirty || this._uncache(!1), r._timeline)
        for (; r._timeline; )
        r._timeline._time !== (r._startTime + r._totalTime) / r._timeScale && r.totalTime(r._totalTime, !0), r = r._timeline;
}
this._gc && this._enabled(!0, !1), (this._totalTime !== t || 0 === this._duration) && this.render(t, e, !1);
}
return this;
}, r.progress = r.totalProgress = function (t, e) {
return arguments.length ? this.totalTime(this.duration() * t, e) : this._time / this.duration();
}, r.startTime = function (t) {
return arguments.length ? (t !== this._startTime && (this._startTime = t, this.timeline && this.timeline._sortChildren && this.timeline.add(this, t - this._delay)), this) : this._startTime;
}, r.timeScale = function (t) {
if (!arguments.length)
        return this._timeScale;
        if (t = t || l, this._timeline && this._timeline.smoothChildTiming) {
var e = this._pauseTime, i = e || 0 === e ? e : this._timeline.totalTime();
        this._startTime = i - (i - this._startTime) * this._timeScale / t;
}
return this._timeScale = t, this._uncache(!1);
}, r.reversed = function (t) {
return arguments.length ? (t != this._reversed && (this._reversed = t, this.totalTime(this._totalTime, !0)), this) : this._reversed;
}, r.paused = function (t) {
if (!arguments.length)
        return this._paused;
        if (t != this._paused && this._timeline) {
a || t || n.wake();
        var e = this._timeline, i = e.rawTime(), s = i - this._pauseTime;
        !t && e.smoothChildTiming && (this._startTime += s, this._uncache(!1)), this._pauseTime = t ? i : null, this._paused = t, this._active = this.isActive(), !t && 0 !== s && this._initted && this.duration() && this.render(e.smoothChildTiming ? this._totalTime : (i - this._startTime) / this._timeScale, !0, !0);
}
return this._gc && !t && this._enabled(!0, !1), this;
};
        var C = d("core.SimpleTimeline", function (t) {
        R.call(this, 0, t), this.autoRemoveChildren = this.smoothChildTiming = !0;
        });
        r = C.prototype = new R, r.constructor = C, r.kill()._gc = !1, r._first = r._last = null, r._sortChildren = !1, r.add = r.insert = function (t, e) {
var i, s;
        if (t._startTime = Number(e || 0) + t._delay, t._paused && this !== t._timeline && (t._pauseTime = t._startTime + (this.rawTime() - t._startTime) / t._timeScale), t.timeline && t.timeline._remove(t, !0), t.timeline = t._timeline = this, t._gc && t._enabled(!0, !0), i = this._last, this._sortChildren)
        for (s = t._startTime; i && i._startTime > s; )
        i = i._prev;
        return i ? (t._next = i._next, i._next = t) : (t._next = this._first, this._first = t), t._next ? t._next._prev = t : this._last = t, t._prev = i, this._timeline && this._uncache(!0), this;
}, r._remove = function (t, e) {
return t.timeline === this && (e || t._enabled(!1, !0), t.timeline = null, t._prev ? t._prev._next = t._next : this._first === t && (this._first = t._next), t._next ? t._next._prev = t._prev : this._last === t && (this._last = t._prev), this._timeline && this._uncache(!0)), this;
}, r.render = function (t, e, i) {
var s, r = this._first;
        for (this._totalTime = this._time = this._rawPrevTime = t; r; )
        s = r._next, (r._active || t >= r._startTime && !r._paused) && (r._reversed ? r.render((r._dirty ? r.totalDuration() : r._totalDuration) - (t - r._startTime) * r._timeScale, e, i) : r.render((t - r._startTime) * r._timeScale, e, i)), r = s;
}, r.rawTime = function () {
return a || n.wake(), this._totalTime;
};
        var O = d("TweenLite", function (e, i, s) {
        if (R.call(this, i, s), this.render = O.prototype.render, null == e)
                throw "Cannot tween a null target.";
                this.target = e = "string" != typeof e ? e : O.selector(e) || e;
                var r, n, a, o = e.jquery || e.length && e !== t && e[0] && (e[0] === t || e[0].nodeType && e[0].style && !e.nodeType), h = this.vars.overwrite;
                if (this._overwrite = h = null == h ? X[O.defaultOverwrite] : "number" == typeof h ? h >> 0 : X[h], (o || e instanceof Array || e.push && p(e)) && "number" != typeof e[0])
                for (this._targets = a = _.call(e, 0), this._propLookup = [], this._siblings = [], r = 0; a.length > r; r++)
                n = a[r], n ? "string" != typeof n ? n.length && n !== t && n[0] && (n[0] === t || n[0].nodeType && n[0].style && !n.nodeType) ? (a.splice(r--, 1), this._targets = a = a.concat(_.call(n, 0))) : (this._siblings[r] = Y(n, this, !1), 1 === h && this._siblings[r].length > 1 && j(n, this, null, 1, this._siblings[r])) : (n = a[r--] = O.selector(n), "string" == typeof n && a.splice(r + 1, 1)) : a.splice(r--, 1);
                else
                this._propLookup = {}, this._siblings = Y(e, this, !1), 1 === h && this._siblings.length > 1 && j(e, this, null, 1, this._siblings);
                (this.vars.immediateRender || 0 === i && 0 === this._delay && this.vars.immediateRender !== !1) && this.render( - this._delay, !1, !0);
        }, !0), D = function (e) {
return e.length && e !== t && e[0] && (e[0] === t || e[0].nodeType && e[0].style && !e.nodeType);
}, M = function (t, e) {
var i, s = {};
        for (i in t)
        L[i] || i in e && "x" !== i && "y" !== i && "width" !== i && "height" !== i && "className" !== i && "border" !== i || !(!E[i] || E[i] && E[i]._autoCSS) || (s[i] = t[i], delete t[i]);
        t.css = s;
};
        r = O.prototype = new R, r.constructor = O, r.kill()._gc = !1, r.ratio = 0, r._firstPT = r._targets = r._overwrittenProps = r._startAt = null, r._notifyPluginsOfEnabled = !1, O.version = "1.11.2", O.defaultEase = r._ease = new y(null, null, 1, 1), O.defaultOverwrite = "auto", O.ticker = n, O.autoSleep = !0, O.selector = t.$ || t.jQuery || function (e) {
return t.$ ? (O.selector = t.$, t.$(e)) : t.document ? t.document.getElementById("#" === e.charAt(0) ? e.substr(1) : e) : e;
};
        var I = O._internals = { isArray: p, isSelector: D }, E = O._plugins = {}, F = O._tweenLookup = {}, N = 0, L = I.reservedProps = { ease: 1, delay: 1, overwrite: 1, onComplete: 1, onCompleteParams: 1, onCompleteScope: 1, useFrames: 1, runBackwards: 1, startAt: 1, onUpdate: 1, onUpdateParams: 1, onUpdateScope: 1, onStart: 1, onStartParams: 1, onStartScope: 1, onReverseComplete: 1, onReverseCompleteParams: 1, onReverseCompleteScope: 1, onRepeat: 1, onRepeatParams: 1, onRepeatScope: 1, easeParams: 1, yoyo: 1, immediateRender: 1, repeat: 1, repeatDelay: 1, data: 1, paused: 1, reversed: 1, autoCSS: 1 }, X = { none: 0, all: 1, auto: 2, concurrent: 3, allOnStart: 4, preexisting: 5, "true": 1, "false": 0 }, z = R._rootFramesTimeline = new C, U = R._rootTimeline = new C;
        U._startTime = n.time, z._startTime = n.frame, U._active = z._active = !0, R._updateRoot = function () {
        if (U.render((n.time - U._startTime) * U._timeScale, !1, !1), z.render((n.frame - z._startTime) * z._timeScale, !1, !1), !(n.frame % 120)) {
        var t, e, i;
                for (i in F) {
        for (e = F[i].tweens, t = e.length; --t > - 1; )
                e[t]._gc && e.splice(t, 1);
                0 === e.length && delete F[i];
        }
        if (i = U._first, (!i || i._paused) && O.autoSleep && !z._first && 1 === n._listeners.tick.length) {
        for (; i && i._paused; )
                i = i._next;
                i || n.sleep();
        }
        }
        }, n.addEventListener("tick", R._updateRoot);
        var Y = function (t, e, i) {
        var s, r, n = t._gsTweenID;
                if (F[n || (t._gsTweenID = n = "t" + N++)] || (F[n] = { target: t, tweens: [] }), e && (s = F[n].tweens, s[r = s.length] = e, i))
                for (; --r > - 1; )
                s[r] === e && s.splice(r, 1);
                return F[n].tweens;
        }, j = function (t, e, i, s, r) {
var n, a, o, h;
        if (1 === s || s >= 4) {
for (h = r.length, n = 0; h > n; n++)
        if ((o = r[n]) !== e)
        o._gc || o._enabled(!1, !1) && (a = !0);
        else if (5 === s)
        break;
        return a;
}
var _, u = e._startTime + l, p = [], f = 0, c = 0 === e._duration;
        for (n = r.length; --n > - 1; )
        (o = r[n]) === e || o._gc || o._paused || (o._timeline !== e._timeline ? (_ = _ || B(e, 0, c), 0 === B(o, _, c) && (p[f++] = o)) : u >= o._startTime && o._startTime + o.totalDuration() / o._timeScale + l > u && ((c || !o._initted) && 2e-10 >= u - o._startTime || (p[f++] = o)));
        for (n = f; --n > - 1; )
        o = p[n], 2 === s && o._kill(i, t) && (a = !0), (2 !== s || !o._firstPT && o._initted) && o._enabled(!1, !1) && (a = !0);
        return a;
}, B = function (t, e, i) {
for (var s = t._timeline, r = s._timeScale, n = t._startTime; s._timeline; ) {
if (n += s._startTime, r *= s._timeScale, s._paused)
        return - 100;
        s = s._timeline;
}
return n /= r, n > e ? n - e : i && n === e || !t._initted && 2 * l > n - e ? l : (n += t.totalDuration() / t._timeScale / r) > e + l ? 0 : n - e - l;
};
        r._init = function () {
        var t, e, i, s, r = this.vars, n = this._overwrittenProps, a = this._duration, o = r.immediateRender, h = r.ease;
                if (r.startAt) {
        if (this._startAt && this._startAt.render( - 1, !0), r.startAt.overwrite = 0, r.startAt.immediateRender = !0, this._startAt = O.to(this.target, 0, r.startAt), o)
                if (this._time > 0)
                this._startAt = null;
                else if (0 !== a)
                return;
        }
        else if (r.runBackwards && 0 !== a)
                if (this._startAt)
                this._startAt.render( - 1, !0), this._startAt = null;
                else {
                i = {};
                        for (s in r)
                        L[s] && "autoCSS" !== s || (i[s] = r[s]);
                        if (i.overwrite = 0, i.data = "isFromStart", this._startAt = O.to(this.target, 0, i), r.immediateRender) {
                if (0 === this._time)
                        return;
                }
                else
                        this._startAt.render( - 1, !0);
                }
        if (this._ease = h ? h instanceof y ? r.easeParams instanceof Array ? h.config.apply(h, r.easeParams) : h : "function" == typeof h ? new y(h, r.easeParams) : T[h] || O.defaultEase : O.defaultEase, this._easeType = this._ease._type, this._easePower = this._ease._power, this._firstPT = null, this._targets)
                for (t = this._targets.length; --t > - 1; )
                this._initProps(this._targets[t], this._propLookup[t] = {}, this._siblings[t], n ? n[t] : null) && (e = !0);
                else
                e = this._initProps(this.target, this._propLookup, this._siblings, n);
                if (e && O._onPluginEvent("_onInitAllProps", this), n && (this._firstPT || "function" != typeof this.target && this._enabled(!1, !1)), r.runBackwards)
                for (i = this._firstPT; i; )
                i.s += i.c, i.c = - i.c, i = i._next;
                this._onUpdate = r.onUpdate, this._initted = !0;
        }, r._initProps = function (e, i, s, r) {
var n, a, o, h, l, _;
        if (null == e)
        return !1;
        this.vars.css || e.style && e !== t && e.nodeType && E.css && this.vars.autoCSS !== !1 && M(this.vars, e);
        for (n in this.vars) {
if (_ = this.vars[n], L[n])
        _ && (_ instanceof Array || _.push && p(_)) && - 1 !== _.join("").indexOf("{self}") && (this.vars[n] = _ = this._swapSelfInParams(_, this));
        else if (E[n] && (h = new E[n])._onInitTween(e, this.vars[n], this)) {
for (this._firstPT = l = { _next: this._firstPT, t: h, p: "setRatio", s: 0, c: 1, f: !0, n: n, pg: !0, pr: h._priority }, a = h._overwriteProps.length; --a > - 1; )
        i[h._overwriteProps[a]] = this._firstPT;
        (h._priority || h._onInitAllProps) && (o = !0), (h._onDisable || h._onEnable) && (this._notifyPluginsOfEnabled = !0);
}
else
        this._firstPT = i[n] = l = { _next: this._firstPT, t: e, p: n, f: "function" == typeof e[n], n: n, pg: !1, pr: 0 }, l.s = l.f ? e[n.indexOf("set") || "function" != typeof e["get" + n.substr(3)] ? n : "get" + n.substr(3)]() : parseFloat(e[n]), l.c = "string" == typeof _ && "=" === _.charAt(1) ? parseInt(_.charAt(0) + "1", 10) * Number(_.substr(2)) : Number(_) - l.s || 0;
        l && l._next && (l._next._prev = l);
}
return r && this._kill(r, e) ? this._initProps(e, i, s, r) : this._overwrite > 1 && this._firstPT && s.length > 1 && j(e, this, i, this._overwrite, s) ? (this._kill(i, e), this._initProps(e, i, s, r)) : o;
}, r.render = function (t, e, i) {
var s, r, n, a, o = this._time, h = this._duration;
        if (t >= h)
        this._totalTime = this._time = h, this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1, this._reversed || (s = !0, r = "onComplete"), 0 === h && (a = this._rawPrevTime, (0 === t || 0 > a || a === l) && a !== t && (i = !0, a > l && (r = "onReverseComplete")), this._rawPrevTime = a = !e || t ? t : l);
        else if (1e-7 > t)
        this._totalTime = this._time = 0, this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0, (0 !== o || 0 === h && this._rawPrevTime > l) && (r = "onReverseComplete", s = this._reversed), 0 > t ? (this._active = !1, 0 === h && (this._rawPrevTime >= 0 && (i = !0), this._rawPrevTime = a = !e || t ? t : l)) : this._initted || (i = !0);
        else if (this._totalTime = this._time = t, this._easeType) {
var _ = t / h, u = this._easeType, p = this._easePower;
        (1 === u || 3 === u && _ >= .5) && (_ = 1 - _), 3 === u && (_ *= 2), 1 === p ? _ *= _ : 2 === p ? _ *= _ * _ : 3 === p ? _ *= _ * _ * _ : 4 === p && (_ *= _ * _ * _ * _), this.ratio = 1 === u ? 1 - _ : 2 === u ? _ : .5 > t / h ? _ / 2 : 1 - _ / 2;
}
else
        this.ratio = this._ease.getRatio(t / h);
        if (this._time !== o || i) {
if (!this._initted) {
if (this._init(), !this._initted || this._gc)
        return;
        this._time && !s ? this.ratio = this._ease.getRatio(this._time / h) : s && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1));
}
for (this._active || !this._paused && this._time !== o && t >= 0 && (this._active = !0), 0 === o && (this._startAt && (t >= 0 ? this._startAt.render(t, e, i) : r || (r = "_dummyGS")), this.vars.onStart && (0 !== this._time || 0 === h) && (e || this.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || v))), n = this._firstPT; n; )
        n.f ? n.t[n.p](n.c * this.ratio + n.s) : n.t[n.p] = n.c * this.ratio + n.s, n = n._next;
        this._onUpdate && (0 > t && this._startAt && this._startTime && this._startAt.render(t, e, i), e || i && 0 === this._time && 0 === o || this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || v)), r && (this._gc || (0 > t && this._startAt && !this._onUpdate && this._startTime && this._startAt.render(t, e, i), s && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !e && this.vars[r] && this.vars[r].apply(this.vars[r + "Scope"] || this, this.vars[r + "Params"] || v), 0 === h && this._rawPrevTime === l && a !== l && (this._rawPrevTime = 0)));
}
}, r._kill = function (t, e) {
if ("all" === t && (t = null), null == t && (null == e || e === this.target))
        return this._enabled(!1, !1);
        e = "string" != typeof e ? e || this._targets || this.target : O.selector(e) || e;
        var i, s, r, n, a, o, h, l;
        if ((p(e) || D(e)) && "number" != typeof e[0])
        for (i = e.length; --i > - 1; )
        this._kill(t, e[i]) && (o = !0);
        else {
        if (this._targets) {
        for (i = this._targets.length; --i > - 1; )
                if (e === this._targets[i]) {
        a = this._propLookup[i] || {}, this._overwrittenProps = this._overwrittenProps || [], s = this._overwrittenProps[i] = t ? this._overwrittenProps[i] || {} : "all";
                break;
        }
        }
        else {
        if (e !== this.target)
                return !1;
                a = this._propLookup, s = this._overwrittenProps = t ? this._overwrittenProps || {} : "all";
        }
        if (a) {
        h = t || a, l = t !== s && "all" !== s && t !== a && ("object" != typeof t || !t._tempKill);
                for (r in h)
                (n = a[r]) && (n.pg && n.t._kill(h) && (o = !0), n.pg && 0 !== n.t._overwriteProps.length || (n._prev ? n._prev._next = n._next : n === this._firstPT && (this._firstPT = n._next), n._next && (n._next._prev = n._prev), n._next = n._prev = null), delete a[r]), l && (s[r] = 1);
                !this._firstPT && this._initted && this._enabled(!1, !1);
        }
        }
return o;
}, r.invalidate = function () {
return this._notifyPluginsOfEnabled && O._onPluginEvent("_onDisable", this), this._firstPT = null, this._overwrittenProps = null, this._onUpdate = null, this._startAt = null, this._initted = this._active = this._notifyPluginsOfEnabled = !1, this._propLookup = this._targets ? {} : [], this;
}, r._enabled = function (t, e) {
if (a || n.wake(), t && this._gc) {
var i, s = this._targets;
        if (s)
        for (i = s.length; --i > - 1; )
        this._siblings[i] = Y(s[i], this, !0);
        else
        this._siblings = Y(this.target, this, !0);
}
return R.prototype._enabled.call(this, t, e), this._notifyPluginsOfEnabled && this._firstPT ? O._onPluginEvent(t ? "_onEnable" : "_onDisable", this) : !1;
}, O.to = function (t, e, i) {
return new O(t, e, i);
}, O.from = function (t, e, i) {
return i.runBackwards = !0, i.immediateRender = 0 != i.immediateRender, new O(t, e, i);
}, O.fromTo = function (t, e, i, s) {
return s.startAt = i, s.immediateRender = 0 != s.immediateRender && 0 != i.immediateRender, new O(t, e, s);
}, O.delayedCall = function (t, e, i, s, r) {
return new O(e, 0, { delay: t, onComplete: e, onCompleteParams: i, onCompleteScope: s, onReverseComplete: e, onReverseCompleteParams: i, onReverseCompleteScope: s, immediateRender: !1, useFrames: r, overwrite: 0 });
}, O.set = function (t, e) {
return new O(t, 0, e);
}, O.getTweensOf = function (t, e) {
if (null == t)
        return [];
        t = "string" != typeof t ? t : O.selector(t) || t;
        var i, s, r, n;
        if ((p(t) || D(t)) && "number" != typeof t[0]) {
for (i = t.length, s = []; --i > - 1; )
        s = s.concat(O.getTweensOf(t[i], e));
        for (i = s.length; --i > - 1; )
        for (n = s[i], r = i; --r > - 1; )
        n === s[r] && s.splice(i, 1);
}
else
        for (s = Y(t).concat(), i = s.length; --i > - 1; )
        (s[i]._gc || e && !s[i].isActive()) && s.splice(i, 1);
        return s;
}, O.killTweensOf = O.killDelayedCallsTo = function (t, e, i) {
"object" == typeof e && (i = e, e = !1);
        for (var s = O.getTweensOf(t, e), r = s.length; --r > - 1; )
        s[r]._kill(i, t);
};
        var q = d("plugins.TweenPlugin", function (t, e) {
        this._overwriteProps = (t || "").split(","), this._propName = this._overwriteProps[0], this._priority = e || 0, this._super = q.prototype;
        }, !0);
        if (r = q.prototype, q.version = "1.10.1", q.API = 2, r._firstPT = null, r._addTween = function (t, e, i, s, r, n) {
        var a, o;
                return null != s && (a = "number" == typeof s || "=" !== s.charAt(1) ? Number(s) - i : parseInt(s.charAt(0) + "1", 10) * Number(s.substr(2))) ? (this._firstPT = o = { _next: this._firstPT, t: t, p: e, s: i, c: a, f: "function" == typeof t[e], n: r || e, r: n }, o._next && (o._next._prev = o), o) : void 0;
        }, r.setRatio = function (t) {
        for (var e, i = this._firstPT, s = 1e-6; i; )
                e = i.c * t + i.s, i.r ? e = 0 | e + (e > 0 ? .5 : - .5) : s > e && e > - s && (e = 0), i.f ? i.t[i.p](e) : i.t[i.p] = e, i = i._next;
        }, r._kill = function (t) {
        var e, i = this._overwriteProps, s = this._firstPT;
                if (null != t[this._propName])
                this._overwriteProps = [];
                else
                for (e = i.length; --e > - 1; )
                null != t[i[e]] && i.splice(e, 1);
                for (; s; )
                null != t[s.n] && (s._next && (s._next._prev = s._prev), s._prev ? (s._prev._next = s._next, s._prev = null) : this._firstPT === s && (this._firstPT = s._next)), s = s._next;
                return !1;
        }, r._roundProps = function (t, e) {
        for (var i = this._firstPT; i; )
                (t[this._propName] || null != i.n && t[i.n.split(this._propName + "_").join("")]) && (i.r = e), i = i._next;
        }, O._onPluginEvent = function (t, e) {
        var i, s, r, n, a, o = e._firstPT;
                if ("_onInitAllProps" === t) {
        for (; o; ) {
        for (a = o._next, s = r; s && s.pr > o.pr; )
                s = s._next;
                (o._prev = s ? s._prev : n) ? o._prev._next = o : r = o, (o._next = s) ? s._prev = o : n = o, o = a;
        }
        o = e._firstPT = r;
        }
        for (; o; )
                o.pg && "function" == typeof o.t[t] && o.t[t]() && (i = !0), o = o._next;
                return i;
        }, q.activate = function (t) {
        for (var e = t.length; --e > - 1; )
                t[e].API === q.API && (E[(new t[e])._propName] = t[e]);
                return !0;
        }, m.plugin = function (t) {
        if (!(t && t.propName && t.init && t.API))
                throw "illegal plugin definition.";
                var e, i = t.propName, s = t.priority || 0, r = t.overwriteProps, n = { init: "_onInitTween", set: "setRatio", kill: "_kill", round: "_roundProps", initAll: "_onInitAllProps" }, a = d("plugins." + i.charAt(0).toUpperCase() + i.substr(1) + "Plugin", function () {
        q.call(this, i, s), this._overwriteProps = r || [];
        }, t.global === !0), o = a.prototype = new q(i);
                o.constructor = a, a.API = t.API;
                for (e in n)
                "function" == typeof t[e] && (o[n[e]] = t[e]);
                return a.version = t.version, q.activate([a]), a;
        }, i = t._gsQueue) {
for (s = 0; i.length > s; s++)
        i[s]();
        for (r in f)
        f[r].func || t.console.log("GSAP encountered missing dependency: com.greensock." + r);
}
a = !1;
}
}(window);
        function lsShowNotice(lsobj, issue, ver) {
        var el;
                if (typeof lsobj == 'string') {
        el = jQuery('#' + lsobj);
        }
        else if (typeof lsobj == 'object') {
        el = lsobj;
        }
        var errorTitle, errorText;
                switch (issue) {
        case 'jquery':
                errorTitle = 'multiple jQuery issue';
                errorText = 'It looks like that another plugin or your theme loads an extra copy of the jQuery library causing problems for LayerSlider to show your sliders. <strong>Please navigate on your WordPress admin area to the main page of LayerSlider and enable the "Put JS includes to body" option within the Troubleshooting & Advanced Settings box.</strong>';
                break;
                case 'oldjquery':
                errorTitle = 'old jQuery issue';
                errorText = 'It looks like you are using an old version (' + ver + ') of the jQuery library. LayerSlider requires at least version 1.7.0 or newer. Please update jQuery to 1.10.x or higher. Important: Please do not use the jQuery Updater plugin on WordPress and do not update to 2.x version of jQuery because it is not compatible with older browsers like IE 7 & 8. <a href="http://support.kreaturamedia.com/faq/4/layerslider-for-wordpress/#group-13&entry-60">You can read more about updating jQuery by clicking here.</a>';
                break;
        }
        el.addClass('ls-error');
                el.append('<p class="ls-exclam">!</p>');
                el.append('<p class="ls-error-title">LayerSlider: ' + errorTitle + '</p>');
                el.append('<p class="ls-error-text">' + errorText + '</p>');
                }
(function ($) {
$.fn.layerSlider = function (options) {
var reqVer = '1.7.0';
        var curVer = $.fn.jquery;
        var el = $(this);
        var checkVersions = function (v1, v2) {
        var v1parts = v1.split('.');
                var v2parts = v2.split('.');
                for (var i = 0; i < v1parts.length; ++i) {
        if (v2parts.length == i) {
        return false;
        }
        if (parseInt(v1parts[i]) == parseInt(v2parts[i])) {
        continue;
        }
        else if (parseInt(v1parts[i]) > parseInt(v2parts[i])) {
        return false;
        }
        else {
        return true;
        }
        }
        if (v1parts.length != v2parts.length) {
        return true;
        }
        return true;
        };
        if (!checkVersions('1.8.0', curVer)) {
el.addClass('ls-norotate');
}
if (!checkVersions(reqVer, curVer)) {
lsShowNotice(el, 'oldjquery', curVer);
}
else {
if ((typeof (options)).match('object|undefined')) {
return this.each(function (i) {
new layerSlider(this, options);
});
}
else {
if (options == 'data') {
var lsData = $(this).data('LayerSlider').g;
        if (lsData) {
return lsData;
}
}
else {
return this.each(function (i) {
var lsData = $(this).data('LayerSlider');
        if (lsData) {
if (!lsData.g.isAnimating && !lsData.g.isLoading) {
if (typeof options == 'number') {
if (options > 0 && options < lsData.g.layersNum + 1 && options != lsData.g.curLayerIndex) {
lsData.change(options);
}
}
else {
switch (options) {
case 'prev':
        lsData.o.cbPrev(lsData.g);
        lsData.prev('clicked');
        break;
        case 'next':
        lsData.o.cbNext(lsData.g);
        lsData.next('clicked');
        break;
        case 'start':
        if (!lsData.g.autoSlideshow) {
lsData.o.cbStart(lsData.g);
        lsData.g.originalAutoSlideshow = true;
        lsData.start();
}
break;
}
}
}
if (options == 'debug') {
lsData.d.show();
}
if ((lsData.g.autoSlideshow || (!lsData.g.autoSlideshow && lsData.g.originalAutoSlideshow)) && options == 'stop') {
lsData.o.cbStop(lsData.g);
        lsData.g.originalAutoSlideshow = false;
        lsData.g.curLayer.find('iframe[src*="www.youtu"], iframe[src*="player.vimeo"]').each(function () {
clearTimeout($(this).data('videoTimer'));
});
        lsData.stop();
}
if (options == 'forceStop') {
lsData.forcestop();
}
}
});
}
}
}
};
        var layerSlider = function (el, options) {
        var ls = this;
                ls.$el = $(el).addClass('ls-container');
                ls.$el.data('LayerSlider', ls);
                ls.load = function () {
                ls.o = $.extend({}, layerSlider.options, options);
                        ls.g = $.extend({}, layerSlider.global);
                        ls.lt = $.extend({}, layerSlider.layerTransitions);
                        ls.st = $.extend({}, layerSlider.slideTransitions);
                        ls.g.enableCSS3 = $(el).hasClass('ls-norotate') ? false : true;
                        if (ls.g.ie78) {
                ls.o.lazyLoad = false;
                }
                if (ls.o.autoPauseSlideshow === 'enabled') {
                ls.o.autoPauseSlideshow = true;
                }
                if (ls.o.autoPauseSlideshow === 'disabled') {
                ls.o.autoPauseSlideshow = false;
                }
                if (typeof layerSliderTransitions !== 'undefined') {
                ls.t = $.extend({}, layerSliderTransitions);
                }
                if (typeof layerSliderCustomTransitions !== 'undefined') {
                ls.ct = $.extend({}, layerSliderCustomTransitions);
                }
                if (!ls.g.initialized) {
                ls.g.initialized = true;
                        ls.debug();
                        if ($('html').find('meta[content*="WordPress"]').length) {
                ls.g.wpVersion = $('html').find('meta[content*="WordPress"]').attr('content').split('WordPress')[1];
                }
                if ($('html').find('script[src*="layerslider"]').length) {
                if ($('html').find('script[src*="layerslider"]').attr('src').indexOf('?') != - 1) {
                ls.g.lswpVersion = $('html').find('script[src*="layerslider"]').attr('src').split('?')[1].split('=')[1];
                }
                }
                ls.d.aT('LayerSlider controls');
                        ls.d.aU('<a href="#">prev</a> | <a href="#">next</a> | <a href="#">start</a> | <a href="#">stop</a> | <a href="#">force stop</a>');
                        ls.d.history.find('a').each(function () {
                $(this).click(function (e) {
                e.preventDefault();
                        $(el).layerSlider($(this).text());
                });
                });
                        ls.d.aT('LayerSlider version information');
                        ls.d.aU('JS version: <strong>' + ls.g.version + '</strong>');
                        if (ls.g.lswpVersion) {
                ls.d.aL('WP version: <strong>' + ls.g.lswpVersion + '</strong>');
                }
                if (ls.g.wpVersion) {
                ls.d.aL('WordPress version: <strong>' + ls.g.wpVersion + '</strong>');
                }
                ls.d.aL('jQuery version: <strong>' + $().jquery + '</strong>');
                        if ($(el).attr('id')) {
                ls.d.aT('LayerSlider container');
                        ls.d.aU('#' + $(el).attr('id'));
                }
                if (!ls.o.skin || ls.o.skin == '' || !ls.o.skinsPath || ls.o.skinsPath == '') {
                ls.d.aT('Loading without skin. Possibilities: mistyped skin and / or skinsPath.');
                        ls.init();
                }
                else {
                ls.d.aT('Trying to load with skin: ' + ls.o.skin, true);
                        $(el).addClass('ls-' + ls.o.skin);
                        var skinStyle = ls.o.skinsPath + ls.o.skin + '/skin.css';
                        cssContainer = $('head');
                        if (!$('head').length) {
                cssContainer = $('body');
                }
                if ($('link[href="' + skinStyle + '"]').length) {
                ls.d.aU('Skin "' + ls.o.skin + '" is already loaded.');
                        curSkin = $('link[href="' + skinStyle + '"]');
                        if (!ls.g.loaded) {
                ls.g.loaded = true;
                        ls.g.t1 = setTimeout(function () {
                        ls.init();
                        }, 150);
                }
                }
                else {
                if (document.createStyleSheet) {
                document.createStyleSheet(skinStyle);
                        var curSkin = $('link[href="' + skinStyle + '"]');
                }
                else {
                var curSkin = $('<link rel="stylesheet" href="' + skinStyle + '" type="text/css" />').appendTo(cssContainer);
                }
                }
                curSkin.load(function () {
                if (!ls.g.loaded) {
                ls.d.aU('curSkin.load(); fired');
                        ls.g.loaded = true;
                        ls.g.t2 = setTimeout(function () {
                        ls.init();
                        }, 150);
                }
                });
                        $(window).load(function () {
                if (!ls.g.loaded) {
                ls.d.aU('$(window).load(); fired');
                        ls.g.loaded = true;
                        ls.g.t3 = setTimeout(function () {
                        ls.init();
                        }, 150);
                }
                });
                        ls.g.t4 = setTimeout(function () {
                        if (!ls.g.loaded) {
                        ls.d.aT('Fallback mode: Neither curSkin.load(); or $(window).load(); were fired');
                                ls.g.loaded = true;
                                ls.init();
                        }
                        }, 1000);
                }
                }
                };
                ls.init = function () {
                if (!$('html').attr('id')) {
                $('html').attr('id', 'ls-global');
                }
                else if (!$('body').attr('id')) {
                $('body').attr('id', 'ls-global');
                }
                ls.g.sliderWidth = function () {
                return $(el).width();
                };
                        ls.g.sliderHeight = function () {
                        return $(el).height();
                        };
                        $(el).find('.ls-layer').removeClass('ls-layer').addClass('ls-slide');
                        $(el).find('.ls-slide > *[class*="ls-s"]').each(function () {
                var oldDistanceNum = $(this).attr('class').split('ls-s')[1].split(' ')[0];
                        $(this).removeClass('ls-s' + oldDistanceNum).addClass('ls-l' + oldDistanceNum);
                });
                        if (ls.o.firstLayer) {
                ls.o.firstSlide = ls.o.firstLayer;
                }
                if (ls.o.animateFirstLayer === false) {
                ls.o.animateFirstSlide = false;
                }
                if ($(el).find('.ls-slide').length == 1) {
                ls.o.autoStart = false;
                        ls.o.navPrevNext = false;
                        ls.o.navStartStop = false;
                        ls.o.navButtons = false;
                        ls.o.loops = 0;
                        ls.o.forceLoopNum = false;
                        ls.o.autoPauseSlideshow = true;
                        ls.o.firstSlide = 1;
                        ls.o.thumbnailNavigation = 'disabled';
                }
                if ($(el).parent().hasClass('ls-wp-fullwidth-helper')) {
                $(el)[0].style.width = '100%';
                }
                if (ls.o.width) {
                ls.g.sliderOriginalWidthRU = ls.g.sliderOriginalWidth = '' + ls.o.width;
                }
                else {
                ls.g.sliderOriginalWidthRU = ls.g.sliderOriginalWidth = $(el)[0].style.width;
                }
                if (ls.o.height) {
                ls.g.sliderOriginalHeight = '' + ls.o.height;
                }
                else {
                ls.g.sliderOriginalHeight = $(el)[0].style.height;
                }
                if (ls.g.sliderOriginalWidth.indexOf('%') == - 1 && ls.g.sliderOriginalWidth.indexOf('px') == - 1) {
                ls.g.sliderOriginalWidth += 'px';
                }
                if (ls.g.sliderOriginalHeight.indexOf('%') == - 1 && ls.g.sliderOriginalHeight.indexOf('px') == - 1) {
                ls.g.sliderOriginalHeight += 'px';
                }
                if (ls.o.responsive && ls.g.sliderOriginalWidth.indexOf('px') != - 1 && ls.g.sliderOriginalHeight.indexOf('px') != - 1) {
                ls.g.responsiveMode = true;
                }
                else {
                ls.g.responsiveMode = false;
                }
                $(el).find('*[class*="ls-l"], *[class*="ls-bg"]').each(function () {
                if (!$(this).parent().hasClass('ls-slide')) {
                $(this).insertBefore($(this).parent());
                }
                });
                        $(el).find('.ls-slide').each(function () {
                $(this).children(':not([class*="ls-"])').each(function () {
                $(this).remove();
                });
                        var hd = $('<div>').addClass('ls-gpuhack');
                        if ($(this).find('.ls-bg').length) {
                hd.insertAfter($(this).find('.ls-bg').eq('0'));
                }
                else {
                hd.prependTo($(this));
                }
                });
                        $(el).find('.ls-slide, *[class*="ls-l"]').each(function () {
                if ($(this).data('ls') || $(this).attr('rel') || $(this).attr('style')) {
                if ($(this).data('ls')) {
                var params = $(this).data('ls').toLowerCase().split(';');
                }
                else if ($(this).attr('rel') && $(this).attr('rel').indexOf(':') != - 1 && $(this).attr('rel').indexOf(';') != - 1) {
                var params = $(this).attr('rel').toLowerCase().split(';');
                }
                else {
                var params = $(this).attr('style').toLowerCase().split(';');
                }
                for (x = 0; x < params.length; x++) {
                param = params[x].split(':');
                        if (param[0].indexOf('easing') != - 1) {
                param[1] = ls.ieEasing(param[1]);
                }
                var p2 = '';
                        if (param[2]) {
                p2 = ':' + $.trim(param[2]);
                }
                if (param[0] != ' ' && param[0] != '') {
                $(this).data($.trim(param[0]), $.trim(param[1]) + p2);
                }
                }
                }
                if (ls.o.startOnScroll === true && ls.o.autoStart === true) {
                ls.o.autoStart = false;
                        ls.g.originalAutoStart = true;
                }
                var sl = $(this);
                        sl.data('originalLeft', sl[0].style.left);
                        sl.data('originalTop', sl[0].style.top);
                        if ($(this).is('a') && $(this).children().length > 0) {
                sl = $(this).children();
                }
                var _w = sl.width();
                        var _h = sl.height();
                        if (sl[0].style.width && sl[0].style.width.indexOf('%') != - 1) {
                _w = sl[0].style.width;
                }
                if (sl[0].style.height && sl[0].style.height.indexOf('%') != - 1) {
                _h = sl[0].style.height;
                }
                sl.data('originalWidth', _w);
                        sl.data('originalHeight', _h);
                        sl.data('originalPaddingLeft', sl.css('padding-left'));
                        sl.data('originalPaddingRight', sl.css('padding-right'));
                        sl.data('originalPaddingTop', sl.css('padding-top'));
                        sl.data('originalPaddingBottom', sl.css('padding-bottom'));
                        var _o = typeof parseFloat(sl.css('opacity')) == 'number' ? Math.round(parseFloat(sl.css('opacity')) * 100) / 100 : 1;
                        $(this).data('originalOpacity', _o);
                        if (sl.css('border-left-width').indexOf('px') == - 1) {
                sl.data('originalBorderLeft', sl[0].style.borderLeftWidth);
                }
                else {
                sl.data('originalBorderLeft', sl.css('border-left-width'));
                }
                if (sl.css('border-right-width').indexOf('px') == - 1) {
                sl.data('originalBorderRight', sl[0].style.borderRightWidth);
                }
                else {
                sl.data('originalBorderRight', sl.css('border-right-width'));
                }
                if (sl.css('border-top-width').indexOf('px') == - 1) {
                sl.data('originalBorderTop', sl[0].style.borderTopWidth);
                }
                else {
                sl.data('originalBorderTop', sl.css('border-top-width'));
                }
                if (sl.css('border-bottom-width').indexOf('px') == - 1) {
                sl.data('originalBorderBottom', sl[0].style.borderBottomWidth);
                }
                else {
                sl.data('originalBorderBottom', sl.css('border-bottom-width'));
                }
                sl.data('originalFontSize', sl.css('font-size'));
                        sl.data('originalLineHeight', sl.css('line-height'));
                });
                        if (document.location.hash) {
                for (var dl = 0; dl < $(el).find('.ls-slide').length; dl++) {
                if ($(el).find('.ls-slide').eq(dl).data('deeplink') == document.location.hash.split('#')[1]) {
                ls.o.firstSlide = dl + 1;
                }
                }
                }
                $(el).find('*[class*="ls-linkto-"]').each(function () {
                var lClasses = $(this).attr('class').split(' ');
                        for (var ll = 0; ll < lClasses.length; ll++) {
                if (lClasses[ll].indexOf('ls-linkto-') != - 1) {
                var linkTo = parseInt(lClasses[ll].split('ls-linkto-')[1]);
                        $(this).css({ cursor: 'pointer' }).click(function (e) {
                e.preventDefault();
                        $(el).layerSlider(linkTo);
                });
                }
                }
                });
                        ls.g.layersNum = $(el).find('.ls-slide').length;
                        if (ls.o.randomSlideshow && ls.g.layersNum > 2) {
                ls.o.firstSlide == 'random';
                        ls.o.twoWaySlideshow = false;
                }
                else {
                ls.o.randomSlideshow = false;
                }
                if (ls.o.firstSlide == 'random') {
                ls.o.firstSlide = Math.floor(Math.random() * ls.g.layersNum + 1);
                }
                ls.o.fisrtSlide = ls.o.fisrtSlide < ls.g.layersNum + 1 ? ls.o.fisrtSlide : 1;
                        ls.o.fisrtSlide = ls.o.fisrtSlide < 1 ? 1 : ls.o.fisrtSlide;
                        ls.g.nextLoop = 1;
                        if (ls.o.animateFirstSlide) {
                ls.g.nextLoop = 0;
                }
                var HTTP = document.location.href.indexOf('file:') === - 1 ? '' : 'http:';
                        $(el).find('iframe[src*="youtube.com"], iframe[src*="youtu.be"]').each(function () {
                $(this).parent().addClass('ls-video-layer');
                        if ($(this).parent('[class*="ls-l"]')) {
                var iframe = $(this);
                        var http = HTTP;
                        $.getJSON(http + '//gdata.youtube.com/feeds/api/videos/' + $(this).attr('src').split('embed/')[1].split('?')[0] + '?v=2&alt=json&callback=?', function (data) {
                        iframe.data('videoDuration', parseInt(data['entry']['media$group']['yt$duration']['seconds']) * 1000);
                        });
                        var vpContainer = $('<div>').addClass('ls-vpcontainer').appendTo($(this).parent());
                        $('<img>').appendTo(vpContainer).addClass('ls-videopreview').attr('alt', 'Play video').attr('src', http + '//img.youtube.com/vi/' + $(this).attr('src').split('embed/')[1].split('?')[0] + '/' + ls.o.youtubePreview);
                        $('<div>').appendTo(vpContainer).addClass('ls-playvideo');
                        $(this).parent().css({ width: $(this).width(), height: $(this).height() }).click(function () {
                if ($(this).data('showuntil') > 0 && $(this).data('showUntilTimer')) {
                clearTimeout($(this).data('showUntilTimer'));
                }
                ls.g.isAnimating = true;
                        if (ls.g.paused) {
                if (ls.o.autoPauseSlideshow != false) {
                ls.g.paused = false;
                }
                ls.g.originalAutoSlideshow = true;
                }
                else {
                ls.g.originalAutoSlideshow = ls.g.autoSlideshow;
                }
                if (ls.o.autoPauseSlideshow != false) {
                ls.stop();
                }
                ls.g.pausedByVideo = true;
                        http = $(this).find('iframe').data('videoSrc').indexOf('http') === - 1 ? HTTP : '';
                        $(this).find('iframe').attr('src', http + $(this).find('iframe').data('videoSrc'));
                        $(this).find('.ls-vpcontainer').delay(ls.g.v.d).fadeOut(ls.g.v.fo, function () {
                if (ls.o.autoPauseSlideshow == 'auto' && ls.g.originalAutoSlideshow == true) {
                var videoTimer = setTimeout(function () {
                ls.start();
                }, iframe.data('videoDuration') - ls.g.v.d);
                        iframe.data('videoTimer', videoTimer);
                }
                ls.g.isAnimating = false;
                        if (ls.g.resize == true) {
                ls.makeResponsive(ls.g.curLayer, function () {
                ls.g.resize = false;
                });
                }
                });
                });
                        var sep = '&';
                        if ($(this).attr('src').indexOf('?') == - 1) {
                sep = '?';
                }
                var videoFix = '&wmode=opaque&html5=1';
                        if ($(this).attr('src').indexOf('autoplay') == - 1) {
                $(this).data('videoSrc', $(this).attr('src') + sep + 'autoplay=1' + videoFix);
                }
                else {
                $(this).data('videoSrc', $(this).attr('src').replace('autoplay=0', 'autoplay=1') + videoFix);
                }
                $(this).data('originalWidth', $(this).attr('width'));
                        $(this).data('originalHeight', $(this).attr('height'));
                        $(this).attr('src', '');
                }
                });
                        $(el).find('iframe[src*="player.vimeo"]').each(function () {
                $(this).parent().addClass('ls-video-layer');
                        if ($(this).parent('[class*="ls-l"]')) {
                var iframe = $(this);
                        var http = HTTP;
                        var vpContainer = $('<div>').addClass('ls-vpcontainer').appendTo($(this).parent());
                        $.getJSON(http + '//vimeo.com/api/v2/video/' + ($(this).attr('src').split('video/')[1].split('?')[0]) + '.json?callback=?', function (data) {
                        $('<img>').appendTo(vpContainer).addClass('ls-videopreview').attr('alt', 'Play video').attr('src', data[0]['thumbnail_large']);
                                iframe.data('videoDuration', parseInt(data[0]['duration']) * 1000);
                                $('<div>').appendTo(vpContainer).addClass('ls-playvideo');
                        });
                        $(this).parent().css({ width: $(this).width(), height: $(this).height() }).click(function () {
                if ($(this).data('showuntil') > 0 && $(this).data('showUntilTimer')) {
                clearTimeout($(this).data('showUntilTimer'));
                }
                ls.g.isAnimating = true;
                        if (ls.g.paused) {
                if (ls.o.autoPauseSlideshow != false) {
                ls.g.paused = false;
                }
                ls.g.originalAutoSlideshow = true;
                }
                else {
                ls.g.originalAutoSlideshow = ls.g.autoSlideshow;
                }
                if (ls.o.autoPauseSlideshow != false) {
                ls.stop();
                }
                ls.g.pausedByVideo = true;
                        http = $(this).find('iframe').data('videoSrc').indexOf('http') === - 1 ? HTTP : '';
                        $(this).find('iframe').attr('src', http + $(this).find('iframe').data('videoSrc'));
                        $(this).find('.ls-vpcontainer').delay(ls.g.v.d).fadeOut(ls.g.v.fo, function () {
                if (ls.o.autoPauseSlideshow == 'auto' && ls.g.originalAutoSlideshow == true) {
                var videoTimer = setTimeout(function () {
                ls.start();
                }, iframe.data('videoDuration') - ls.g.v.d);
                        iframe.data('videoTimer', videoTimer);
                }
                ls.g.isAnimating = false;
                        if (ls.g.resize == true) {
                ls.makeResponsive(ls.g.curLayer, function () {
                ls.g.resize = false;
                });
                }
                });
                });
                        var sep = '&';
                        if ($(this).attr('src').indexOf('?') == - 1) {
                sep = '?';
                }
                var videoFix = '&wmode=opaque';
                        if ($(this).attr('src').indexOf('autoplay') == - 1) {
                $(this).data('videoSrc', $(this).attr('src') + sep + 'autoplay=1' + videoFix);
                }
                else {
                $(this).data('videoSrc', $(this).attr('src').replace('autoplay=0', 'autoplay=1') + videoFix);
                }
                $(this).data('originalWidth', $(this).attr('width'));
                        $(this).data('originalHeight', $(this).attr('height'));
                        $(this).attr('src', '');
                }
                });
                        $(el).find('video, audio').each(function () {
                var ow = typeof $(this).attr('width') !== 'undefined' ? $(this).attr('width') : '640';
                        var oh = typeof $(this).attr('height') !== 'undefined' ? $(this).attr('height') : '' + $(this).height();
                        if (ow.indexOf('%') === - 1) {
                ow = parseInt(ow);
                }
                if (oh.indexOf('%') === - 1) {
                oh = parseInt(oh);
                }
                if (ow === '100%' && (oh === 0 || oh === '0' || oh === '100%')) {
                $(this).attr('height', '100%');
                        oh = 'auto';
                }
                $(this).parent().addClass('ls-video-layer').css({ width: ow, height: oh }).data({ originalWidth: ow, originalHeight: oh });
                        var curVideo = $(this);
                        $(this).removeAttr('width').removeAttr('height').css({ width: '100%', height: '100%' }).click(function () {
                this.play();
                        ls.g.isAnimating = true;
                        if (ls.g.paused) {
                if (ls.o.autoPauseSlideshow !== false) {
                ls.g.paused = false;
                }
                ls.g.originalAutoSlideshow = true;
                }
                else {
                ls.g.originalAutoSlideshow = ls.g.autoSlideshow;
                }
                if (ls.o.autoPauseSlideshow !== false) {
                ls.stop();
                }
                ls.g.pausedByVideo = true;
                        $(this).on('ended', function () {
                if (ls.o.autoPauseSlideshow === 'auto' && ls.g.originalAutoSlideshow === true) {
                ls.start();
                }
                });
                        ls.g.isAnimating = false;
                        if (ls.g.resize === true) {
                ls.makeResponsive(ls.g.curLayer, function () {
                ls.g.resize = false;
                });
                }
                });
                });
                        if (ls.o.animateFirstSlide) {
                ls.o.firstSlide = ls.o.firstSlide - 1 === 0 ? ls.g.layersNum : ls.o.firstSlide - 1;
                }
                ls.g.curLayerIndex = ls.o.firstSlide;
                        ls.g.curLayer = $(el).find('.ls-slide:eq(' + (ls.g.curLayerIndex - 1) + ')');
                        $(el).find('.ls-slide').wrapAll('<div class="ls-inner"></div>');
                        if (ls.o.showBarTimer) {
                ls.g.barTimer = $('<div>').addClass('ls-bar-timer').appendTo($(el).find('.ls-inner'));
                }
                if (ls.o.showCircleTimer && !ls.g.ie78) {
                ls.g.circleTimer = $('<div>').addClass('ls-circle-timer').appendTo($(el).find('.ls-inner'));
                        ls.g.circleTimer.append($('<div class="ls-ct-left"><div class="ls-ct-rotate"><div class="ls-ct-hider"><div class="ls-ct-half"></div></div></div></div><div class="ls-ct-right"><div class="ls-ct-rotate"><div class="ls-ct-hider"><div class="ls-ct-half"></div></div></div></div><div class="ls-ct-center"></div>'));
                }
                ls.g.li = $('<div>').css({ zIndex: - 1, display: 'none' }).addClass('ls-loading-container').appendTo($(el));
                        $('<div>').addClass('ls-loading-indicator').appendTo(ls.g.li);
                        if ($(el).css('position') == 'static') {
                $(el).css('position', 'relative');
                }
                if (ls.o.globalBGImage) {
                $(el).find('.ls-inner').css({ backgroundImage: 'url(' + ls.o.globalBGImage + ')', backgroundPosition: ls.o.globalBGPosition, backgroundSize: ls.o.globalBGSize, backgroundRepeat: ls.o.globalBGRepeat, backgroundAttachment: ls.o.globalBGBehaviour });
                }
                else {
                $(el).find('.ls-inner').css({ backgroundColor: ls.o.globalBGColor });
                }
                if (ls.o.globalBGColor == 'transparent' && ls.o.globalBGImage == false) {
                $(el).find('.ls-inner').css({ background: 'none transparent !important' });
                }
                $(el).find('.ls-slide img').each(function () {
                $(this).removeAttr('width').removeAttr('height');
                        if (ls.o.imgPreload === true && ls.o.lazyLoad === true) {
                if (typeof $(this).data('src') !== 'string') {
                $(this).data('src', $(this).attr('src'));
                        var src = ls.o.skinsPath + '../css/blank.gif';
                        $(this).attr('src', src);
                }
                }
                else {
                if (typeof $(this).data('src') === 'string') {
                $(this).attr('src', $(this).data('src'));
                        $(this).removeAttr('data-src');
                }
                }
                });
                        $(el).find('.ls-slide').on('mouseenter', function (e) {
                ls.g.parallaxStartX = e.pageX - $(this).parent().offset().left;
                        ls.g.parallaxStartY = e.pageY - $(this).parent().offset().top;
                });
                        $(el).find('.ls-slide').on('mousemove', function (e) {
                var mX0 = $(this).parent().offset().left + ls.g.parallaxStartX;
                        var mY0 = $(this).parent().offset().top + ls.g.parallaxStartY;
                        var mX = e.pageX - mX0;
                        var mY = e.pageY - mY0;
                        $(this).find('> *:not(.ls-bg)').each(function () {
                if (typeof $(this).data('parallaxlevel') !== 'undefined' && parseInt($(this).data('parallaxlevel')) !== 0) {
                $(this).css({ marginLeft: - mX / 100 * parseInt($(this).data('parallaxlevel')), marginTop: - mY / 100 * parseInt($(this).data('parallaxlevel')) });
                }
                });
                });
                        $(el).find('.ls-slide').on('mouseleave', function () {
                $(this).find('> *:not(.ls-bg)').each(function () {
                if (typeof $(this).data('parallaxlevel') !== 'undefined' && parseInt($(this).data('parallaxlevel')) !== 0) {
                TweenLite.to(this, .4, { css: { marginLeft: 0, marginTop: 0 } });
                }
                });
                });
                        if (ls.o.navPrevNext) {
                $('<a class="ls-nav-prev" href="#" />').click(function (e) {
                e.preventDefault();
                        $(el).layerSlider('prev');
                }).appendTo($(el));
                        $('<a class="ls-nav-next" href="#" />').click(function (e) {
                e.preventDefault();
                        $(el).layerSlider('next');
                }).appendTo($(el));
                        if (ls.o.hoverPrevNext) {
                $(el).find('.ls-nav-prev, .ls-nav-next').css({ display: 'none' });
                        $(el).hover(function () {
                if (!ls.g.forceHideControls) {
                if (ls.g.ie78) {
                $(el).find('.ls-nav-prev, .ls-nav-next').css('display', 'block');
                }
                else {
                $(el).find('.ls-nav-prev, .ls-nav-next').stop(true, true).fadeIn(300);
                }
                }
                }, function () {
                if (ls.g.ie78) {
                $(el).find('.ls-nav-prev, .ls-nav-next').css('display', 'none');
                }
                else {
                $(el).find('.ls-nav-prev, .ls-nav-next').stop(true, true).fadeOut(300);
                }
                });
                }
                }
                if (ls.o.navStartStop || ls.o.navButtons) {
                var bottomNav = $('<div class="ls-bottom-nav-wrapper" />').appendTo($(el));
                        ls.g.bottomWrapper = bottomNav;
                        if (ls.o.thumbnailNavigation == 'always') {
                bottomNav.addClass('ls-above-thumbnails');
                }
                if (ls.o.navButtons && ls.o.thumbnailNavigation != 'always') {
                $('<span class="ls-bottom-slidebuttons" />').appendTo($(el).find('.ls-bottom-nav-wrapper'));
                        if (ls.o.thumbnailNavigation == 'hover') {
                var thumbs = $('<div class="ls-thumbnail-hover"><div class="ls-thumbnail-hover-inner"><div class="ls-thumbnail-hover-bg"></div><div class="ls-thumbnail-hover-img"><img></div><span></span></div></div>').appendTo($(el).find('.ls-bottom-slidebuttons'));
                }
                for (x = 1; x < ls.g.layersNum + 1; x++) {
                var btn = $('<a href="#" />').appendTo($(el).find('.ls-bottom-slidebuttons')).click(function (e) {
                e.preventDefault();
                        $(el).layerSlider(($(this).index() + 1));
                });
                        if (ls.o.thumbnailNavigation == 'hover') {
                $(el).find('.ls-thumbnail-hover, .ls-thumbnail-hover-img').css({ width: ls.o.tnWidth, height: ls.o.tnHeight });
                        var th = $(el).find('.ls-thumbnail-hover');
                        var ti = th.find('img').css({ height: ls.o.tnHeight });
                        var thi = $(el).find('.ls-thumbnail-hover-inner').css({ visibility: 'hidden', display: 'block' });
                        btn.hover(function () {
                        var hoverLayer = $(el).find('.ls-slide').eq($(this).index());
                                var tnSrc;
                                if (ls.o.imgPreload === true && ls.o.lazyLoad === true) {
                        if (hoverLayer.find('.ls-tn').length) {
                        tnSrc = hoverLayer.find('.ls-tn').data('src');
                        }
                        else if (hoverLayer.find('.ls-videopreview').length) {
                        tnSrc = hoverLayer.find('.ls-videopreview').attr('src');
                        }
                        else if (hoverLayer.find('.ls-bg').length) {
                        tnSrc = hoverLayer.find('.ls-bg').data('src');
                        }
                        else {
                        tnSrc = ls.o.skinsPath + ls.o.skin + '/nothumb.png';
                        }
                        }
                        else {
                        if (hoverLayer.find('.ls-tn').length) {
                        tnSrc = hoverLayer.find('.ls-tn').attr('src');
                        }
                        else if (hoverLayer.find('.ls-videopreview').length) {
                        tnSrc = hoverLayer.find('.ls-videopreview').attr('src');
                        }
                        else if (hoverLayer.find('.ls-bg').length) {
                        tnSrc = hoverLayer.find('.ls-bg').attr('src');
                        }
                        else {
                        tnSrc = ls.o.skinsPath + ls.o.skin + '/nothumb.png';
                        }
                        }
                        $(el).find('.ls-thumbnail-hover-img').css({ left: parseInt(th.css('padding-left')), top: parseInt(th.css('padding-top')) });
                                ti.load(function () {
                                if ($(this).width() == 0) {
                                ti.css({ position: 'relative', margin: '0 auto', left: 'auto' });
                                }
                                else {
                                ti.css({ position: 'absolute', marginLeft: - $(this).width() / 2, left: '50%' });
                                }
                                }).attr('src', tnSrc);
                                th.css({ display: 'block' }).stop().animate({ left: $(this).position().left + ($(this).width() - th.outerWidth()) / 2 }, 250);
                                thi.css({ display: 'none', visibility: 'visible' }).stop().fadeIn(250);
                        }, function () {
                        thi.stop().fadeOut(250, function () {
                        th.css({ visibility: 'hidden', display: 'block' });
                        });
                        });
                }
                }
                if (ls.o.thumbnailNavigation == 'hover') {
                thumbs.appendTo($(el).find('.ls-bottom-slidebuttons'));
                }
                $(el).find('.ls-bottom-slidebuttons a:eq(' + (ls.o.firstSlide - 1) + ')').addClass('ls-nav-active');
                }
                if (ls.o.navStartStop) {
                var buttonStart = $('<a class="ls-nav-start" href="#" />').click(function (e) {
                e.preventDefault();
                        $(el).layerSlider('start');
                }).prependTo($(el).find('.ls-bottom-nav-wrapper'));
                        var buttonStop = $('<a class="ls-nav-stop" href="#" />').click(function (e) {
                e.preventDefault();
                        $(el).layerSlider('stop');
                }).appendTo($(el).find('.ls-bottom-nav-wrapper'));
                }
                else if (ls.o.thumbnailNavigation != 'always') {
                $('<span class="ls-nav-sides ls-nav-sideleft" />').prependTo($(el).find('.ls-bottom-nav-wrapper'));
                        $('<span class="ls-nav-sides ls-nav-sideright" />').appendTo($(el).find('.ls-bottom-nav-wrapper'));
                }
                if (ls.o.hoverBottomNav && ls.o.thumbnailNavigation != 'always') {
                bottomNav.css({ display: 'none' });
                        $(el).hover(function () {
                if (!ls.g.forceHideControls) {
                if (ls.g.ie78) {
                bottomNav.css('display', 'block');
                }
                else {
                bottomNav.stop(true, true).fadeIn(300);
                }
                }
                }, function () {
                if (ls.g.ie78) {
                bottomNav.css('display', 'none');
                }
                else {
                bottomNav.stop(true, true).fadeOut(300);
                }
                });
                }
                }
                if (ls.o.thumbnailNavigation == 'always') {
                ls.g.thumbsWrapper = $('<div class="ls-thumbnail-wrapper"></div>').appendTo($(el));
                        var thumbs = $('<div class="ls-thumbnail"><div class="ls-thumbnail-inner"><div class="ls-thumbnail-slide-container"><div class="ls-thumbnail-slide"></div></div></div></div>').appendTo(ls.g.thumbsWrapper);
                        ls.g.thumbnails = $(el).find('.ls-thumbnail-slide-container');
                        if (!('ontouchstart' in window)) {
                ls.g.thumbnails.hover(function () {
                $(this).addClass('ls-thumbnail-slide-hover');
                }, function () {
                $(this).removeClass('ls-thumbnail-slide-hover');
                        ls.scrollThumb();
                }).mousemove(function (e) {
                var mL = parseInt(e.pageX - $(this).offset().left) / $(this).width() * ($(this).width() - $(this).find('.ls-thumbnail-slide').width());
                        $(this).find('.ls-thumbnail-slide').stop().css({ marginLeft: mL });
                });
                }
                else {
                ls.g.thumbnails.addClass('ls-touchscroll');
                }
                $(el).find('.ls-slide').each(function () {
                var tempIndex = $(this).index() + 1;
                        var tnSrc;
                        if (ls.o.imgPreload === true && ls.o.lazyLoad === true) {
                if ($(this).find('.ls-tn').length) {
                tnSrc = $(this).find('.ls-tn').data('src');
                }
                else if ($(this).find('.ls-videopreview').length) {
                tnSrc = $(this).find('.ls-videopreview').attr('src');
                }
                else if ($(this).find('.ls-bg').length) {
                tnSrc = $(this).find('.ls-bg').data('src');
                }
                else {
                tnSrc = ls.o.skinsPath + ls.o.skin + '/nothumb.png';
                }
                }
                else {
                if ($(this).find('.ls-tn').length) {
                tnSrc = $(this).find('.ls-tn').attr('src');
                }
                else if ($(this).find('.ls-videopreview').length) {
                tnSrc = $(this).find('.ls-videopreview').attr('src');
                }
                else if ($(this).find('.ls-bg').length) {
                tnSrc = $(this).find('.ls-bg').attr('src');
                }
                else {
                tnSrc = ls.o.skinsPath + ls.o.skin + '/nothumb.png';
                }
                }
                var thumb = $('<a href="#" class="ls-thumb-' + tempIndex + '"><img src="' + tnSrc + '"></a>');
                        thumb.appendTo($(el).find('.ls-thumbnail-slide'));
                        if (!('ontouchstart' in window)) {
                thumb.hover(function () {
                $(this).children().stop().fadeTo(300, ls.o.tnActiveOpacity / 100);
                }, function () {
                if (!$(this).children().hasClass('ls-thumb-active')) {
                $(this).children().stop().fadeTo(300, ls.o.tnInactiveOpacity / 100);
                }
                });
                }
                thumb.click(function (e) {
                e.preventDefault();
                        $(el).layerSlider(tempIndex);
                });
                });
                        if (buttonStart && buttonStop) {
                var lsBottomBelowTN = ls.g.bottomWrapper = $('<div class="ls-bottom-nav-wrapper ls-below-thumbnails"></div>').appendTo($(el));
                        buttonStart.clone().click(function (e) {
                e.preventDefault();
                        $(el).layerSlider('start');
                }).appendTo(lsBottomBelowTN);
                        buttonStop.clone().click(function (e) {
                e.preventDefault();
                        $(el).layerSlider('stop');
                }).appendTo(lsBottomBelowTN);
                }
                if (ls.o.hoverBottomNav) {
                ls.g.thumbsWrapper.css('display', 'none');
                        if (lsBottomBelowTN) {
                ls.g.bottomWrapper = lsBottomBelowTN.css('display') == 'block' ? lsBottomBelowTN : $(el).find('.ls-above-thumbnails');
                        ls.g.bottomWrapper.css('display', 'none');
                }
                $(el).hover(function () {
                $(el).addClass('ls-hover');
                        if (!ls.g.forceHideControls) {
                if (ls.g.ie78) {
                ls.g.thumbsWrapper.css('display', 'block');
                        if (ls.g.bottomWrapper) {
                ls.g.bottomWrapper.css('display', 'block');
                }
                }
                else {
                ls.g.thumbsWrapper.stop(true, true).fadeIn(300);
                        if (ls.g.bottomWrapper) {
                ls.g.bottomWrapper.stop(true, true).fadeIn(300);
                }
                }
                }
                }, function () {
                $(el).removeClass('ls-hover');
                        if (ls.g.ie78) {
                ls.g.thumbsWrapper.css('display', 'none');
                        if (ls.g.bottomWrapper) {
                ls.g.bottomWrapper.css('display', 'none');
                }
                }
                else {
                ls.g.thumbsWrapper.stop(true, true).fadeOut(300);
                        if (ls.g.bottomWrapper) {
                ls.g.bottomWrapper.stop(true, true).fadeOut(300);
                }
                }
                });
                }
                }
                ls.g.shadow = $('<div class="ls-shadow"></div>').appendTo($(el));
                        if (ls.g.shadow.css('display') == 'block' && !ls.g.shadow.find('img').length) {
                ls.g.showShadow = function () {
                ls.g.shadow.css({ display: 'none', visibility: 'visible' }).fadeIn(500, function () {
                ls.g.showShadow = false;
                });
                };
                        ls.g.shadowImg = $('<img>').attr('src', ls.o.skinsPath + ls.o.skin + '/shadow.png').appendTo(ls.g.shadow);
                        ls.g.shadowBtmMod = typeof parseInt($(el).css('padding-bottom')) == 'number' ? parseInt($(el).css('padding-bottom')) : 0;
                }
                ls.resizeShadow();
                        if (ls.o.keybNav && $(el).find('.ls-slide').length > 1) {
                $('body').bind('keydown', function (e) {
                if (!ls.g.isAnimating && !ls.g.isLoading) {
                if (e.which == 37) {
                ls.o.cbPrev(ls.g);
                        ls.prev('clicked');
                }
                else if (e.which == 39) {
                ls.o.cbNext(ls.g);
                        ls.next('clicked');
                }
                }
                });
                }
                if ('ontouchstart' in window && $(el).find('.ls-slide').length > 1 && ls.o.touchNav) {
                $(el).find('.ls-inner').bind('touchstart', function (e) {
                var t = e.touches ? e.touches : e.originalEvent.touches;
                        if (t.length == 1) {
                ls.g.touchStartX = ls.g.touchEndX = t[0].clientX;
                }
                });
                        $(el).find('.ls-inner').bind('touchmove', function (e) {
                var t = e.touches ? e.touches : e.originalEvent.touches;
                        if (t.length == 1) {
                ls.g.touchEndX = t[0].clientX;
                }
                if (Math.abs(ls.g.touchStartX - ls.g.touchEndX) > 45) {
                e.preventDefault();
                }
                });
                        $(el).find('.ls-inner').bind('touchend', function (e) {
                if (Math.abs(ls.g.touchStartX - ls.g.touchEndX) > 45) {
                if (ls.g.touchStartX - ls.g.touchEndX > 0) {
                ls.o.cbNext(ls.g);
                        $(el).layerSlider('next');
                }
                else {
                ls.o.cbPrev(ls.g);
                        $(el).layerSlider('prev');
                }
                }
                });
                }
                if (ls.o.pauseOnHover == true && $(el).find('.ls-slide').length > 1) {
                $(el).find('.ls-inner').hover(function () {
                ls.o.cbPause(ls.g);
                        if (ls.g.autoSlideshow) {
                ls.g.paused = true;
                        ls.stop();
                        if (ls.g.barTimer) {
                ls.g.barTimer.stop();
                }
                if (ls.g.circleTimer) {
                if (ls.g.cttl) {
                ls.g.cttl.pause();
                }
                }
                ls.g.pausedSlideTime = new Date().getTime();
                }
                }, function () {
                if (ls.g.paused == true) {
                ls.start();
                        ls.g.paused = false;
                }
                });
                }
                ls.resizeSlider();
                        if (ls.o.yourLogo) {
                ls.g.yourLogo = $('<img>').addClass('ls-yourlogo').appendTo($(el)).attr('style', ls.o.yourLogoStyle).css({ visibility: 'hidden', display: 'bock' }).load(function () {
                var logoTimeout = 0;
                        if (!ls.g.yourLogo) {
                logoTimeout = 1000;
                }
                setTimeout(function () {
                ls.g.yourLogo.data('originalWidth', ls.g.yourLogo.width());
                        ls.g.yourLogo.data('originalHeight', ls.g.yourLogo.height());
                        if (ls.g.yourLogo.css('left') != 'auto') {
                ls.g.yourLogo.data('originalLeft', ls.g.yourLogo[0].style.left);
                }
                if (ls.g.yourLogo.css('right') != 'auto') {
                ls.g.yourLogo.data('originalRight', ls.g.yourLogo[0].style.right);
                }
                if (ls.g.yourLogo.css('top') != 'auto') {
                ls.g.yourLogo.data('originalTop', ls.g.yourLogo[0].style.top);
                }
                if (ls.g.yourLogo.css('bottom') != 'auto') {
                ls.g.yourLogo.data('originalBottom', ls.g.yourLogo[0].style.bottom);
                }
                if (ls.o.yourLogoLink != false) {
                $('<a>').appendTo($(el)).attr('href', ls.o.yourLogoLink).attr('target', ls.o.yourLogoTarget).css({ textDecoration: 'none', outline: 'none' }).append(ls.g.yourLogo);
                }
                ls.g.yourLogo.css({ display: 'none', visibility: 'visible' });
                        ls.resizeYourLogo();
                }, logoTimeout);
                }).attr('src', ls.o.yourLogo);
                }
                $(window).resize(function () {
                ls.g.resize = true;
                        if (!ls.g.isAnimating) {
                ls.makeResponsive(ls.g.curLayer, function () {
                if (ls.g.ltContainer) {
                ls.g.ltContainer.empty();
                }
                ls.g.resize = false;
                });
                        if (ls.g.yourLogo) {
                ls.resizeYourLogo();
                }
                }
                });
                        ls.g.showSlider = true;
                        if (ls.o.animateFirstSlide == true) {
                if (ls.o.autoStart) {
                ls.g.autoSlideshow = true;
                        $(el).find('.ls-nav-start').addClass('ls-nav-start-active');
                }
                else {
                $(el).find('.ls-nav-stop').addClass('ls-nav-stop-active');
                }
                ls.next();
                }
                else {
                ls.imgPreload(ls.g.curLayer, function () {
                ls.g.curLayer.fadeIn(ls.o.sliderFadeInDuration, function () {
                ls.g.isLoading = false;
                        $(this).addClass('ls-active');
                        if (ls.o.autoPlayVideos) {
                $(this).delay($(this).data('delayin') + 25).queue(function () {
                $(this).find('.ls-videopreview').click();
                        $(this).find('video, audio').each(function () {
                if (typeof $(this)[0].currentTime !== 0) {
                $(this)[0].currentTime = 0;
                }
                $(this).click();
                });
                        $(this).dequeue();
                });
                }
                ls.g.curLayer.find(' > *[class*="ls-l"]').each(function () {
                var cursub = $(this);
                        if ((!cursub.hasClass('ls-video-layer') || (cursub.hasClass('ls-video-layer') && ls.o.autoPlayVideos === false)) && cursub.data('showuntil') > 0) {
                cursub.data('showUntilTimer', setTimeout(function () {
                ls.sublayerShowUntil(cursub);
                }, cursub.data('showuntil')));
                }
                });
                });
                        ls.changeThumb(ls.g.curLayerIndex);
                        if (ls.o.autoStart) {
                ls.g.isLoading = false;
                        ls.start();
                }
                else {
                $(el).find('.ls-nav-stop').addClass('ls-nav-stop-active');
                }
                });
                }
                ls.o.cbInit($(el));
                };
                ls.start = function () {
                if (ls.g.autoSlideshow) {
                if (ls.g.prevNext == 'prev' && ls.o.twoWaySlideshow) {
                ls.prev();
                }
                else {
                ls.next();
                }
                }
                else {
                ls.g.autoSlideshow = true;
                        if (!ls.g.isAnimating && !ls.g.isLoading) {
                ls.timer();
                }
                }
                $(el).find('.ls-nav-start').addClass('ls-nav-start-active');
                        $(el).find('.ls-nav-stop').removeClass('ls-nav-stop-active');
                };
                ls.timer = function () {
                if ($(el).find('.ls-active').data('ls')) {
                var sD = ls.st.slideDelay;
                }
                else {
                var sD = ls.o.slideDelay;
                }
                var delaytime = $(el).find('.ls-active').data('slidedelay') ? parseInt($(el).find('.ls-active').data('slidedelay')) : sD;
                        if (!ls.o.animateFirstSlide && !$(el).find('.ls-active').data('slidedelay')) {
                var tempD = $(el).find('.ls-slide:eq(' + (ls.o.firstSlide - 1) + ')').data('slidedelay');
                        delaytime = tempD ? tempD : sD;
                }
                clearTimeout(ls.g.slideTimer);
                        if (ls.g.pausedSlideTime) {
                if (!ls.g.startSlideTime) {
                ls.g.startSlideTime = new Date().getTime();
                }
                if (ls.g.startSlideTime > ls.g.pausedSlideTime) {
                ls.g.pausedSlideTime = new Date().getTime();
                }
                if (!ls.g.curSlideTime) {
                ls.g.curSlideTime = delaytime;
                }
                ls.g.curSlideTime -= (ls.g.pausedSlideTime - ls.g.startSlideTime);
                        ls.g.pausedSlideTime = false;
                        ls.g.startSlideTime = new Date().getTime();
                }
                else {
                ls.g.curSlideTime = delaytime;
                        ls.g.startSlideTime = new Date().getTime();
                }
                ls.g.curSlideTime = parseInt(ls.g.curSlideTime);
                        ls.g.slideTimer = setTimeout(function () {
                        ls.g.startSlideTime = ls.g.pausedSlideTime = ls.g.curSlideTime = false;
                                ls.start();
                        }, ls.g.curSlideTime);
                        if (ls.g.barTimer) {
                ls.g.barTimer.animate({ width: ls.g.sliderWidth() }, ls.g.curSlideTime, 'linear', function () {
                $(this).css({ width: 0 });
                });
                }
                if (ls.g.circleTimer) {
                var ct1 = ls.g.circleTimer.find('.ls-ct-right .ls-ct-rotate');
                        var ct2 = ls.g.circleTimer.find('.ls-ct-left .ls-ct-rotate');
                        if (ls.g.circleTimer.css('display') == 'none') {
                ct1.css({ rotate: 0 });
                        ct2.css({ rotate: 0 });
                        ls.g.circleTimer.fadeIn(350);
                }
                if (!ls.g.cttl) {
                ls.g.cttl = new TimelineLite();
                        ls.g.cttl.add(TweenLite.fromTo(ct1[0], delaytime / 2000, { rotation: 0 }, { ease: Linear.easeNone, rotation: 180, onReverseComplete: function () {
                        ls.g.cttl = false;
                        } }));
                        ls.g.cttl.add(TweenLite.fromTo(ct2[0], delaytime / 2000, { rotation: 0 }, { ease: Linear.easeNone, rotation: 180 }));
                }
                else {
                ls.g.cttl.resume();
                }
                }
                };
                ls.stop = function () {
                ls.g.pausedSlideTime = new Date().getTime();
                        if (ls.g.barTimer) {
                ls.g.barTimer.stop();
                }
                if (ls.g.circleTimer) {
                if (ls.g.cttl) {
                ls.g.cttl.pause();
                }
                }
                if (!ls.g.paused && !ls.g.originalAutoSlideshow) {
                $(el).find('.ls-nav-stop').addClass('ls-nav-stop-active');
                        $(el).find('.ls-nav-start').removeClass('ls-nav-start-active');
                }
                clearTimeout(ls.g.slideTimer);
                        ls.g.autoSlideshow = false;
                };
                ls.forcestop = function () {
                clearTimeout(ls.g.slideTimer);
                        ls.g.autoSlideshow = false;
                        clearTimeout(ls.g.t1);
                        clearTimeout(ls.g.t2);
                        clearTimeout(ls.g.t3);
                        clearTimeout(ls.g.t4);
                        clearTimeout(ls.g.t5);
                        if (ls.g.barTimer) {
                ls.g.barTimer.stop();
                }
                if (ls.g.circleTimer) {
                if (ls.g.cttl) {
                ls.g.cttl.pause();
                }
                }
                $(el).find('*').stop(true, false).dequeue();
                        $(el).find('.ls-slide >').each(function () {
                if ($(this).data('tr')) {
                $(this).data('tr').pause();
                }
                });
                        if (!ls.g.paused && !ls.g.originalAutoSlideshow) {
                $(el).find('.ls-nav-stop').addClass('ls-nav-stop-active');
                        $(el).find('.ls-nav-start').removeClass('ls-nav-start-active');
                }
                };
                ls.restart = function () {
                $(el).find('*').stop();
                        clearTimeout(ls.g.slideTimer);
                        ls.change(ls.g.curLayerIndex, ls.g.prevNext);
                };
                ls.ieEasing = function (e) {
                if ($.trim(e.toLowerCase()) == 'swing' || $.trim(e.toLowerCase()) == 'linear') {
                return e.toLowerCase();
                }
                else {
                return e.replace('easeinout', 'easeInOut').replace('easein', 'easeIn').replace('easeout', 'easeOut').replace('quad', 'Quad').replace('quart', 'Quart').replace('cubic', 'Cubic').replace('quint', 'Quint').replace('sine', 'Sine').replace('expo', 'Expo').replace('circ', 'Circ').replace('elastic', 'Elastic').replace('back', 'Back').replace('bounce', 'Bounce');
                }
                };
                ls.prev = function (clicked) {
                if (ls.g.curLayerIndex < 2) {
                ls.g.nextLoop += 1;
                }
                if ((ls.g.nextLoop > ls.o.loops) && (ls.o.loops > 0) && !clicked) {
                ls.g.nextLoop = 0;
                        ls.stop();
                        if (ls.o.forceLoopNum == false) {
                ls.o.loops = 0;
                }
                }
                else {
                var prev = ls.g.curLayerIndex < 2 ? ls.g.layersNum : ls.g.curLayerIndex - 1;
                        ls.g.prevNext = 'prev';
                        ls.change(prev, ls.g.prevNext);
                }
                };
                ls.next = function (clicked) {
                if (!ls.o.randomSlideshow) {
                if (!(ls.g.curLayerIndex < ls.g.layersNum)) {
                ls.g.nextLoop += 1;
                }
                if ((ls.g.nextLoop > ls.o.loops) && (ls.o.loops > 0) && !clicked) {
                ls.g.nextLoop = 0;
                        ls.stop();
                        if (ls.o.forceLoopNum == false) {
                ls.o.loops = 0;
                }
                }
                else {
                var next = ls.g.curLayerIndex < ls.g.layersNum ? ls.g.curLayerIndex + 1 : 1;
                        ls.g.prevNext = 'next';
                        ls.change(next, ls.g.prevNext);
                }
                }
                else if (!clicked) {
                var next = ls.g.curLayerIndex;
                        var calcRand = function () {
                        next = Math.floor(Math.random() * ls.g.layersNum) + 1;
                                if (next == ls.g.curLayerIndex) {
                        calcRand();
                        }
                        else {
                        ls.g.prevNext = 'next';
                                ls.change(next, ls.g.prevNext);
                        }
                        };
                        calcRand();
                }
                else if (clicked) {
                var next = ls.g.curLayerIndex < ls.g.layersNum ? ls.g.curLayerIndex + 1 : 1;
                        ls.g.prevNext = 'next';
                        ls.change(next, ls.g.prevNext);
                }
                };
                ls.change = function (num, prevnext) {
                ls.g.startSlideTime = ls.g.pausedSlideTime = ls.g.curSlideTime = false;
                        if (ls.g.barTimer) {
                ls.g.barTimer.stop().delay(300).animate({ width: 0 }, 450);
                }
                if (ls.g.circleTimer) {
                ls.g.circleTimer.fadeOut(500);
                        if (ls.g.cttl) {
                ls.g.cttl.reverse().duration(.35);
                }
                }
                if (ls.g.pausedByVideo == true) {
                ls.g.pausedByVideo = false;
                        ls.g.autoSlideshow = ls.g.originalAutoSlideshow;
                        ls.g.curLayer.find('iframe[src*="youtube.com"], iframe[src*="youtu.be"], iframe[src*="player.vimeo"]').each(function () {
                $(this).parent().find('.ls-vpcontainer').fadeIn(ls.g.v.fi, function () {
                $(this).parent().find('iframe').attr('src', '');
                });
                });
                        ls.g.curLayer.find('video, audio').each(function () {
                this.pause();
                });
                }
                $(el).find('iframe[src*="youtube.com"], iframe[src*="youtu.be"], iframe[src*="player.vimeo"]').each(function () {
                clearTimeout($(this).data('videoTimer'));
                });
                        clearTimeout(ls.g.slideTimer);
                        ls.g.nextLayerIndex = num;
                        ls.g.nextLayer = $(el).find('.ls-slide:eq(' + (ls.g.nextLayerIndex - 1) + ')');
                        if (!prevnext) {
                if (ls.g.curLayerIndex < ls.g.nextLayerIndex) {
                ls.g.prevNext = 'next';
                }
                else {
                ls.g.prevNext = 'prev';
                }
                }
                var timeOut = 0;
                        if ($(el).find('iframe[src*="youtube.com"], iframe[src*="youtu.be"], iframe[src*="player.vimeo"]').length > 0) {
                timeOut = ls.g.v.fi;
                }
                ls.imgPreload(ls.g.nextLayer, function () {
                ls.animate();
                });
                };
                ls.imgPreload = function (layer, callback) {
                ls.g.isLoading = true;
                        if (ls.g.showSlider) {
                $(el).css({ visibility: 'visible' });
                }
                if (ls.o.imgPreload) {
                var preImages = [];
                        var preloaded = 0;
                        if (layer.css('background-image') != 'none' && layer.css('background-image').indexOf('url') != - 1 && !layer.hasClass('ls-preloaded') && !layer.hasClass('ls-not-preloaded')) {
                var bgi = layer.css('background-image');
                        bgi = bgi.match(/url\((.*)\)/)[1].replace(/"/gi, '');
                        preImages[preImages.length] = [bgi, layer];
                }
                layer.find('img:not(.ls-preloaded, .ls-not-preloaded)').each(function () {
                if (ls.o.lazyLoad === true) {
                $(this).attr('src', $(this).data('src'));
                }
                preImages[preImages.length] = [$(this).attr('src'), $(this)];
                });
                        layer.find('*').each(function () {
                if ($(this).css('background-image') != 'none' && $(this).css('background-image').indexOf('url') != - 1 && !$(this).hasClass('ls-preloaded') && !$(this).hasClass('ls-not-preloaded')) {
                var bgi = $(this).css('background-image');
                        bgi = bgi.match(/url\((.*)\)/)[1].replace(/"/gi, '');
                        preImages[preImages.length] = [bgi, $(this)];
                }
                });
                        if (preImages.length == 0) {
                $('.ls-thumbnail-wrapper, .ls-nav-next, .ls-nav-prev, .ls-bottom-nav-wrapper').css({ visibility: 'visible' });
                        ls.makeResponsive(layer, callback);
                }
                else {
                if (ls.g.ie78) {
                ls.g.li.css('display', 'block');
                }
                else {
                ls.g.li.delay(400).fadeIn(300);
                }
                var afterImgLoad = function () {
                ls.g.li.stop(true, true).css({ display: 'none' });
                        $('.ls-thumbnail-wrapper, .ls-nav-next, .ls-nav-prev, .ls-bottom-nav-wrapper').css({ visibility: 'visible' });
                        if (navigator.userAgent.indexOf('Trident/7') !== - 1 || ls.g.ie78) {
                setTimeout(function () {
                ls.makeResponsive(layer, callback);
                }, 50);
                }
                else {
                ls.makeResponsive(layer, callback);
                }
                };
                        for (x = 0; x < preImages.length; x++) {
                $('<img>').data('el', preImages[x]).load(function () {
                $(this).data('el')[1].addClass('ls-preloaded');
                        if (++preloaded == preImages.length) {
                afterImgLoad();
                }
                }).error(function () {
                var imgURL = $(this).data('el')[0].substring($(this).data('el')[0].lastIndexOf("/") + 1, $(this).data('el')[0].length);
                        if (window.console) {
                console.log('LayerSlider error:\r\n\r\nIt seems like the URL of the image or background image "' + imgURL + '" is pointing to a wrong location and it cannot be loaded. Please check the URLs of all your images used in the slider.');
                }
                else {
                alert('LayerSlider error:\r\n\r\nIt seems like the URL of the image or background image "' + imgURL + '" is pointing to a wrong location and it cannot be loaded. Please check the URLs of all your images used in the slider.');
                }
                $(this).addClass('ls-not-preloaded');
                        if (++preloaded == preImages.length) {
                afterImgLoad();
                }
                }).attr('src', preImages[x][0]);
                }
                }
                }
                else {
                $('.ls-thumbnail-wrapper, .ls-nav-next, .ls-nav-prev, .ls-bottom-nav-wrapper').css({ visibility: 'visible' });
                        ls.makeResponsive(layer, callback);
                }
                };
                ls.makeResponsive = function (layer, callback) {
                layer.css({ visibility: 'hidden', display: 'block' });
                        if (ls.g.showShadow) {
                ls.g.showShadow();
                }
                ls.resizeSlider();
                        if (ls.o.thumbnailNavigation == 'always') {
                ls.resizeThumb();
                }
                layer.children().each(function () {
                var sl = $(this);
                        var ol = sl.data('originalLeft') ? sl.data('originalLeft') : '0';
                        var ot = sl.data('originalTop') ? sl.data('originalTop') : '0';
                        if (sl.is('a') && sl.children().length > 0) {
                sl.css({ display: 'block' });
                        sl = sl.children();
                }
                var ow = 'auto';
                        var oh = 'auto';
                        if (sl.data('originalWidth')) {
                if (typeof sl.data('originalWidth') == 'number') {
                ow = parseInt(sl.data('originalWidth')) * ls.g.ratio;
                }
                else if (sl.data('originalWidth').indexOf('%') != - 1) {
                ow = sl.data('originalWidth');
                }
                }
                if (sl.data('originalHeight')) {
                if (typeof sl.data('originalHeight') == 'number') {
                oh = parseInt(sl.data('originalHeight')) * ls.g.ratio;
                }
                else if (sl.data('originalHeight').indexOf('%') != - 1) {
                oh = sl.data('originalHeight');
                }
                }
                var opl = sl.data('originalPaddingLeft') ? parseInt(sl.data('originalPaddingLeft')) * ls.g.ratio : 0;
                        var opr = sl.data('originalPaddingRight') ? parseInt(sl.data('originalPaddingRight')) * ls.g.ratio : 0;
                        var opt = sl.data('originalPaddingTop') ? parseInt(sl.data('originalPaddingTop')) * ls.g.ratio : 0;
                        var opb = sl.data('originalPaddingBottom') ? parseInt(sl.data('originalPaddingBottom')) * ls.g.ratio : 0;
                        var obl = sl.data('originalBorderLeft') ? parseInt(sl.data('originalBorderLeft')) * ls.g.ratio : 0;
                        var obr = sl.data('originalBorderRight') ? parseInt(sl.data('originalBorderRight')) * ls.g.ratio : 0;
                        var obt = sl.data('originalBorderTop') ? parseInt(sl.data('originalBorderTop')) * ls.g.ratio : 0;
                        var obb = sl.data('originalBorderBottom') ? parseInt(sl.data('originalBorderBottom')) * ls.g.ratio : 0;
                        var ofs = sl.data('originalFontSize');
                        var olh = sl.data('originalLineHeight');
                        if (ls.g.responsiveMode || ls.o.responsiveUnder > 0) {
                if (sl.is('img') && !sl.hasClass('ls-bg') && sl.attr('src')) {
                sl.css({ width: 'auto', height: 'auto' });
                        if ((ow == 0 || ow == 'auto') && typeof oh == 'number' && oh != 0) {
                ow = (oh / sl.height()) * sl.width();
                }
                if ((oh == 0 || oh == 'auto') && typeof ow == 'number' && ow != 0) {
                oh = (ow / sl.width()) * sl.height();
                }
                if (ow == 'auto') {
                ow = sl.width() * ls.g.ratio;
                }
                if (oh == 'auto') {
                oh = sl.height() * ls.g.ratio;
                }
                sl.css({ width: ow, height: oh });
                }
                if (!sl.is('img')) {
                sl.css({ width: ow, height: oh, 'font-size': parseInt(ofs) * ls.g.ratio + 'px', 'line-height': parseInt(olh) * ls.g.ratio + 'px' });
                }
                if (sl.is('div') && sl.find('iframe').data('videoSrc')) {
                var videoIframe = sl.find('iframe');
                        videoIframe.attr('width', parseInt(videoIframe.data('originalWidth')) * ls.g.ratio).attr('height', parseInt(videoIframe.data('originalHeight')) * ls.g.ratio);
                        sl.css({ width: parseInt(videoIframe.data('originalWidth')) * ls.g.ratio, height: parseInt(videoIframe.data('originalHeight')) * ls.g.ratio });
                }
                sl.css({ padding: opt + 'px ' + opr + 'px ' + opb + 'px ' + opl + 'px ', borderLeftWidth: obl + 'px', borderRightWidth: obr + 'px', borderTopWidth: obt + 'px', borderBottomWidth: obb + 'px' });
                }
                if (!sl.hasClass('ls-bg')) {
                var sl2 = sl;
                        if (sl.parent().is('a')) {
                sl = sl.parent();
                }
                var slC = 0;
                        if (ls.o.layersContainer) {
                slC = ls.o.layersContainer > 0 ? (ls.g.sliderWidth() - ls.o.layersContainer) / 2 : 0;
                }
                else if (ls.o.sublayerContainer) {
                slC = ls.o.sublayerContainer > 0 ? (ls.g.sliderWidth() - ls.o.sublayerContainer) / 2 : 0;
                }
                slC = slC < 0 ? 0 : slC;
                        if (ol.indexOf('%') != - 1) {
                sl.css({ left: ls.g.sliderWidth() / 100 * parseInt(ol) - sl2.width() / 2 - opl - obl });
                }
                else if (slC > 0 || ls.g.responsiveMode || ls.o.responsiveUnder > 0) {
                sl.css({ left: slC + parseInt(ol) * ls.g.ratio });
                }
                if (ot.indexOf('%') != - 1) {
                sl.css({ top: ls.g.sliderHeight() / 100 * parseInt(ot) - sl2.height() / 2 - opt - obt });
                }
                else if (ls.g.responsiveMode || ls.o.responsiveUnder > 0) {
                sl.css({ top: parseInt(ot) * ls.g.ratio });
                }
                }
                else {
                var inner = $(el).find('.ls-inner');
                        sl.css({ width: 'auto', height: 'auto' });
                        ow = sl.width();
                        oh = sl.height();
                        var or = ls.g.ratio;
                        if (ls.g.sliderOriginalWidth.indexOf('%') != - 1) {
                if (ls.g.sliderWidth() > ow) {
                or = ls.g.sliderWidth() / ow;
                        if (ls.g.sliderHeight() > oh * or) {
                or = ls.g.sliderHeight() / oh;
                }
                }
                else if (ls.g.sliderHeight() > oh) {
                or = ls.g.sliderHeight() / oh;
                        if (ls.g.sliderWidth() > ow * or) {
                or = ls.g.sliderWidth() / ow;
                }
                }
                }
                sl.css({ width: ow * or, height: oh * or, marginLeft: inner.width() / 2 - ow * or / 2, marginTop: inner.height() / 2 - oh * or / 2 });
                }
                });
                        layer.css({ display: 'none', visibility: 'visible' });
                        ls.resizeShadow();
                        callback();
                        $(this).dequeue();
                };
                ls.resizeShadow = function () {
                if (ls.g.shadowImg) {
                var resizeShadow = function () {
                if (ls.g.shadowImg.height() > 0) {
                if (ls.g.shadowBtmMod > 0) {
                ls.g.shadow.css({ height: ls.g.shadowImg.height() / 2 });
                }
                else {
                ls.g.shadow.css({ height: ls.g.shadowImg.height(), marginTop: - ls.g.shadowImg.height() / 2 });
                }
                }
                else {
                setTimeout(function () {
                resizeShadow();
                }, 50);
                }
                };
                        resizeShadow();
                }
                };
                ls.resizeSlider = function () {
                if (ls.o.responsiveUnder > 0) {
                if ($(window).width() < ls.o.responsiveUnder) {
                ls.g.responsiveMode = true;
                        ls.g.sliderOriginalWidth = ls.o.responsiveUnder + 'px';
                }
                else {
                ls.g.responsiveMode = false;
                        ls.g.sliderOriginalWidth = ls.g.sliderOriginalWidthRU;
                        ls.g.ratio = 1;
                }
                }
                if (ls.g.responsiveMode) {
                var parent = $(el).parent();
                        $(el).css({ width: parent.width() - parseInt($(el).css('padding-left')) - parseInt($(el).css('padding-right')) });
                        ls.g.ratio = $(el).width() / parseInt(ls.g.sliderOriginalWidth);
                        $(el).css({ height: ls.g.ratio * parseInt(ls.g.sliderOriginalHeight) });
                }
                else {
                ls.g.ratio = 1;
                        $(el).css({ width: ls.g.sliderOriginalWidth, height: ls.g.sliderOriginalHeight });
                }
                if ($(el).closest('.ls-wp-fullwidth-container').length) {
                $(el).closest('.ls-wp-fullwidth-helper').css({ height: $(el).outerHeight(true) });
                        $(el).closest('.ls-wp-fullwidth-container').css({ height: $(el).outerHeight(true) });
                        $(el).closest('.ls-wp-fullwidth-helper').css({ width: $(window).width(), left: - $(el).closest('.ls-wp-fullwidth-container').offset().left });
                        if (ls.g.sliderOriginalWidth.indexOf('%') != - 1) {
                var percentWidth = parseInt(ls.g.sliderOriginalWidth);
                        var newWidth = $('body').width() / 100 * percentWidth - ($(el).outerWidth() - $(el).width());
                        $(el).width(newWidth);
                }
                }
                $(el).find('.ls-inner, .ls-lt-container').css({ width: ls.g.sliderWidth(), height: ls.g.sliderHeight() });
                        if (ls.g.curLayer && ls.g.nextLayer) {
                ls.g.curLayer.css({ width: ls.g.sliderWidth(), height: ls.g.sliderHeight() });
                        ls.g.nextLayer.css({ width: ls.g.sliderWidth(), height: ls.g.sliderHeight() });
                }
                else {
                $(el).find('.ls-slide').css({ width: ls.g.sliderWidth(), height: ls.g.sliderHeight() });
                }
                };
                ls.resizeYourLogo = function () {
                ls.g.yourLogo.css({ width: ls.g.yourLogo.data('originalWidth') * ls.g.ratio, height: ls.g.yourLogo.data('originalHeight') * ls.g.ratio });
                        if (ls.g.ie78) {
                ls.g.yourLogo.css('display', 'block');
                }
                else {
                ls.g.yourLogo.fadeIn(300);
                }
                var oL = oR = oT = oB = 'auto';
                        if (ls.g.yourLogo.data('originalLeft') && ls.g.yourLogo.data('originalLeft').indexOf('%') != - 1) {
                oL = ls.g.sliderWidth() / 100 * parseInt(ls.g.yourLogo.data('originalLeft')) - ls.g.yourLogo.width() / 2 + parseInt($(el).css('padding-left'));
                }
                else {
                oL = parseInt(ls.g.yourLogo.data('originalLeft')) * ls.g.ratio;
                }
                if (ls.g.yourLogo.data('originalRight') && ls.g.yourLogo.data('originalRight').indexOf('%') != - 1) {
                oR = ls.g.sliderWidth() / 100 * parseInt(ls.g.yourLogo.data('originalRight')) - ls.g.yourLogo.width() / 2 + parseInt($(el).css('padding-right'));
                }
                else {
                oR = parseInt(ls.g.yourLogo.data('originalRight')) * ls.g.ratio;
                }
                if (ls.g.yourLogo.data('originalTop') && ls.g.yourLogo.data('originalTop').indexOf('%') != - 1) {
                oT = ls.g.sliderHeight() / 100 * parseInt(ls.g.yourLogo.data('originalTop')) - ls.g.yourLogo.height() / 2 + parseInt($(el).css('padding-top'));
                }
                else {
                oT = parseInt(ls.g.yourLogo.data('originalTop')) * ls.g.ratio;
                }
                if (ls.g.yourLogo.data('originalBottom') && ls.g.yourLogo.data('originalBottom').indexOf('%') != - 1) {
                oB = ls.g.sliderHeight() / 100 * parseInt(ls.g.yourLogo.data('originalBottom')) - ls.g.yourLogo.height() / 2 + parseInt($(el).css('padding-bottom'));
                }
                else {
                oB = parseInt(ls.g.yourLogo.data('originalBottom')) * ls.g.ratio;
                }
                ls.g.yourLogo.css({ left: oL, right: oR, top: oT, bottom: oB });
                };
                ls.resizeThumb = function () {
                ls.bottomNavSizeHelper('on');
                        var sliderW = ls.g.sliderOriginalWidth.indexOf('%') == - 1 ? parseInt(ls.g.sliderOriginalWidth) : ls.g.sliderWidth();
                        $(el).find('.ls-thumbnail-slide a').css({ width: parseInt(ls.o.tnWidth * ls.g.ratio), height: parseInt(ls.o.tnHeight * ls.g.ratio) });
                        $(el).find('.ls-thumbnail-slide a:last').css({ margin: 0 });
                        $(el).find('.ls-thumbnail-slide').css({ height: parseInt(ls.o.tnHeight * ls.g.ratio) });
                        var tn = $(el).find('.ls-thumbnail');
                        var originalWidth = ls.o.tnContainerWidth.indexOf('%') == - 1 ? parseInt(ls.o.tnContainerWidth) : parseInt(sliderW / 100 * parseInt(ls.o.tnContainerWidth));
                        tn.css({ width: originalWidth * Math.floor(ls.g.ratio * 100) / 100 });
                        if (tn.width() > $(el).find('.ls-thumbnail-slide').width()) {
                tn.css({ width: $(el).find('.ls-thumbnail-slide').width() });
                }
                ls.bottomNavSizeHelper('off');
                };
                ls.changeThumb = function (index) {
                var curIndex = index ? index : ls.g.nextLayerIndex;
                        $(el).find('.ls-thumbnail-slide a:not(.ls-thumb-' + curIndex + ')').children().each(function () {
                $(this).removeClass('ls-thumb-active').stop().fadeTo(750, ls.o.tnInactiveOpacity / 100);
                });
                        $(el).find('.ls-thumbnail-slide a.ls-thumb-' + curIndex).children().addClass('ls-thumb-active').stop().fadeTo(750, ls.o.tnActiveOpacity / 100);
                };
                ls.scrollThumb = function () {
                if (!$(el).find('.ls-thumbnail-slide-container').hasClass('ls-thumbnail-slide-hover')) {
                var curThumb = $(el).find('.ls-thumb-active').length ? $(el).find('.ls-thumb-active').parent() : false;
                        if (curThumb) {
                var thumbCenter = curThumb.position().left + curThumb.width() / 2;
                        var mL = $(el).find('.ls-thumbnail-slide-container').width() / 2 - thumbCenter;
                        mL = mL < $(el).find('.ls-thumbnail-slide-container').width() - $(el).find('.ls-thumbnail-slide').width() ? $(el).find('.ls-thumbnail-slide-container').width() - $(el).find('.ls-thumbnail-slide').width() : mL;
                        mL = mL > 0 ? 0 : mL;
                        $(el).find('.ls-thumbnail-slide').animate({ marginLeft: mL }, 600);
                }
                }
                };
                ls.bottomNavSizeHelper = function (val) {
                if (ls.o.hoverBottomNav && !$(el).hasClass('ls-hover')) {
                switch (val) {
                case 'on':
                        ls.g.thumbsWrapper.css({ visibility: 'hidden', display: 'block' });
                        break;
                        case 'off':
                        ls.g.thumbsWrapper.css({ visibility: 'visible', display: 'none' });
                        break;
                }
                }
                };
                ls.animate = function () {
                if ($(el).find('.ls-slide').length > 1) {
                ls.g.isAnimating = true;
                }
                ls.g.isLoading = false;
                        clearTimeout(ls.g.slideTimer);
                        clearTimeout(ls.g.changeTimer);
                        ls.g.stopLayer = ls.g.curLayer;
                        ls.o.cbAnimStart(ls.g);
                        if (ls.o.thumbnailNavigation == 'always') {
                ls.changeThumb();
                        if (!('ontouchstart' in window)) {
                ls.scrollThumb();
                }
                }
                ls.g.nextLayer.addClass('ls-animating');
                        var curLayerLeft = curLayerRight = curLayerTop = curLayerBottom = nextLayerLeft = nextLayerRight = nextLayerTop = nextLayerBottom = layerMarginLeft = layerMarginRight = layerMarginTop = layerMarginBottom = 'auto';
                        var curLayerWidth = nextLayerWidth = ls.g.sliderWidth();
                        var curLayerHeight = nextLayerHeight = ls.g.sliderHeight();
                        var prevOrNext = ls.g.prevNext == 'prev' ? ls.g.curLayer : ls.g.nextLayer;
                        var chooseDirection = prevOrNext.data('slidedirection') ? prevOrNext.data('slidedirection') : ls.o.slideDirection;
                        var slideDirection = ls.g.slideDirections[ls.g.prevNext][chooseDirection];
                        if (slideDirection == 'left' || slideDirection == 'right') {
                curLayerWidth = curLayerTop = nextLayerWidth = nextLayerTop = 0;
                        layerMarginTop = 0;
                }
                if (slideDirection == 'top' || slideDirection == 'bottom') {
                curLayerHeight = curLayerLeft = nextLayerHeight = nextLayerLeft = 0;
                        layerMarginLeft = 0;
                }
                switch (slideDirection) {
                case 'left':
                        curLayerRight = nextLayerLeft = 0;
                        layerMarginLeft = - ls.g.sliderWidth();
                        break;
                        case 'right':
                        curLayerLeft = nextLayerRight = 0;
                        layerMarginLeft = ls.g.sliderWidth();
                        break;
                        case 'top':
                        curLayerBottom = nextLayerTop = 0;
                        layerMarginTop = - ls.g.sliderHeight();
                        break;
                        case 'bottom':
                        curLayerTop = nextLayerBottom = 0;
                        layerMarginTop = ls.g.sliderHeight();
                        break;
                }
                ls.g.curLayer.css({ left: curLayerLeft, right: curLayerRight, top: curLayerTop, bottom: curLayerBottom });
                        ls.g.nextLayer.css({ width: nextLayerWidth, height: nextLayerHeight, left: nextLayerLeft, right: nextLayerRight, top: nextLayerTop, bottom: nextLayerBottom });
                        var curDelay = ls.g.curLayer.data('delayout') ? parseInt(ls.g.curLayer.data('delayout')) : ls.o.delayOut;
                        var curDuration = ls.g.curLayer.data('durationout') ? parseInt(ls.g.curLayer.data('durationout')) : ls.o.durationOut;
                        var curEasing = ls.g.curLayer.data('easingout') ? ls.g.curLayer.data('easingout') : ls.o.easingOut;
                        var nextDelay = ls.g.nextLayer.data('delayin') ? parseInt(ls.g.nextLayer.data('delayin')) : ls.o.delayIn;
                        var nextDuration = ls.g.nextLayer.data('durationin') ? parseInt(ls.g.nextLayer.data('durationin')) : ls.o.durationIn;
                        if (nextDuration === 0) {
                nextDuration = 1;
                }
                var nextEasing = ls.g.nextLayer.data('easingin') ? ls.g.nextLayer.data('easingin') : ls.o.easingIn;
                        var curLayer = function () {
                        ls.g.curLayer.delay(curDelay + curDuration / 15).animate({ width: curLayerWidth, height: curLayerHeight }, curDuration, curEasing, function () {
                        curLayerCallback();
                        });
                        };
                        var curLayerCallback = function () {
                        ls.g.stopLayer.find(' > *[class*="ls-l"]').each(function () {
                        var tr = $(this).data('tr');
                                if (tr) {
                        if ($.isArray(tr)) {
                        for (var i = 0; i < tr.length; i++)
                                tr[i].kill();
                                $(this).data('split').revert();
                        }
                        else
                                tr.kill();
                        }
                        $(this).css({ filter: 'none' });
                        });
                                ls.g.curLayer = ls.g.nextLayer;
                                ls.g.prevLayerIndex = ls.g.curLayerIndex;
                                ls.g.curLayerIndex = ls.g.nextLayerIndex;
                                ls.o.cbAnimStop(ls.g);
                                if (ls.o.imgPreload && ls.o.lazyLoad) {
                        var preLayerIndex = ls.g.curLayerIndex == ls.g.layersNum ? 1 : ls.g.curLayerIndex + 1;
                                $(el).find('.ls-slide').eq(preLayerIndex - 1).find('img:not(.ls-preloaded)').each(function () {
                        $(this).load(function () {
                        $(this).addClass('ls-preloaded');
                        }).error(function () {
                        var imgURL = $(this).data('src').substring($(this).data('src').lastIndexOf("/") + 1, $(this).data('src').length);
                                if (window.console) {
                        console('LayerSlider error:\r\n\r\nIt seems like the URL of the image or background image "' + imgURL + '" is pointing to a wrong location and it cannot be loaded. Please check the URLs of all your images used in the slider.');
                        }
                        else {
                        alert('LayerSlider error:\r\n\r\nIt seems like the URL of the image or background image "' + imgURL + '" is pointing to a wrong location and it cannot be loaded. Please check the URLs of all your images used in the slider.');
                        }
                        $(this).addClass('ls-not-preloaded');
                        }).attr('src', $(this).data('src'));
                        });
                        }
                        $(el).find('.ls-slide').removeClass('ls-active');
                                $(el).find('.ls-slide:eq(' + (ls.g.curLayerIndex - 1) + ')').addClass('ls-active').removeClass('ls-animating');
                                $(el).find('.ls-bottom-slidebuttons a').removeClass('ls-nav-active');
                                $(el).find('.ls-bottom-slidebuttons a:eq(' + (ls.g.curLayerIndex - 1) + ')').addClass('ls-nav-active');
                                if (ls.g.autoSlideshow) {
                        ls.timer();
                        }
                        ls.g.isAnimating = false;
                                if (ls.g.resize == true) {
                        ls.makeResponsive(ls.g.curLayer, function () {
                        ls.g.resize = false;
                        });
                        }
                        };
                        var curSubLayers = function (sublayersDurationOut) {
                        ls.g.curLayer.find(' > *[class*="ls-l"]').each(function () {
                        if (!$(this).data('transitiontype')) {
                        ls.transitionType($(this));
                        }
                        $(this).removeClass('ls-videohack');
                                var curSubSlideDir = $(this).data('slidedirection') ? $(this).data('slidedirection') : slideDirection;
                                var lml, lmt;
                                switch (curSubSlideDir) {
                        case 'left':
                                lml = - ls.g.sliderWidth();
                                lmt = 0;
                                break;
                                case 'right':
                                lml = ls.g.sliderWidth();
                                lmt = 0;
                                break;
                                case 'top':
                                lmt = - ls.g.sliderHeight();
                                lml = 0;
                                break;
                                case 'bottom':
                                lmt = ls.g.sliderHeight();
                                lml = 0;
                                break;
                                case 'fade':
                                lmt = 0;
                                lml = 0;
                                break;
                        }
                        if ($(this).data('transitiontype') === 'new') {
                        var curSubSlideOutDir = 'new';
                        }
                        else {
                        var curSubSlideOutDir = $(this).data('slideoutdirection') ? $(this).data('slideoutdirection') : false;
                        }
                        switch (curSubSlideOutDir) {
                        case 'left':
                                lml = ls.g.sliderWidth();
                                lmt = 0;
                                break;
                                case 'right':
                                lml = - ls.g.sliderWidth();
                                lmt = 0;
                                break;
                                case 'top':
                                lmt = ls.g.sliderHeight();
                                lml = 0;
                                break;
                                case 'bottom':
                                lmt = - ls.g.sliderHeight();
                                lml = 0;
                                break;
                                case 'fade':
                                lmt = 0;
                                lml = 0;
                                break;
                                case 'new':
                                if ($(this).data('offsetxout')) {
                        if ($(this).data('offsetxout') === 'left') {
                        lml = ls.g.sliderWidth();
                        }
                        else if ($(this).data('offsetxout') === 'right') {
                        lml = - ls.g.sliderWidth();
                        }
                        else {
                        lml = - parseInt($(this).data('offsetxout'));
                        }
                        }
                        else {
                        lml = - ls.lt.offsetXOut;
                        }
                        if ($(this).data('offsetyout')) {
                        if ($(this).data('offsetyout') === 'top') {
                        lmt = ls.g.sliderHeight();
                        }
                        else if ($(this).data('offsetyout') === 'bottom') {
                        lmt = - ls.g.sliderHeight();
                        }
                        else {
                        lmt = - parseInt($(this).data('offsetyout'));
                        }
                        }
                        else {
                        lmt = - ls.lt.offsetYOut;
                        }
                        break;
                        }
                        var curSubRotate = curSubRotateX = curSubRotateY = curSubScale = curSubSkewX = curSubSkewY = curSubScaleX = curSubScaleY = 'none';
                                var curSubSplit, curSubShift;
                                curSubRotate = $(this).data('rotateout') ? $(this).data('rotateout') : ls.lt.rotateOut;
                                curSubRotateX = $(this).data('rotatexout') ? $(this).data('rotatexout') : ls.lt.rotateXOut;
                                curSubRotateY = $(this).data('rotateyout') ? $(this).data('rotateyout') : ls.lt.rotateYOut;
                                curSubScale = $(this).data('scaleout') ? $(this).data('scaleout') : ls.lt.scaleOut;
                                curSubSkewX = $(this).data('skewxout') ? $(this).data('skewxout') : ls.lt.skewXOut;
                                curSubSkewY = $(this).data('skewyout') ? $(this).data('skewyout') : ls.lt.skewYOut;
                                curSubSplit = $(this).data('splitout') ? $(this).data('splitout') : ls.lt.splitOut;
                                curSubShift = $(this).data('shiftout') ? $(this).data('shiftout') : ls.lt.splitOut;
                                if (curSubScale === 1) {
                        curSubScaleX = $(this).data('scalexout') ? $(this).data('scalexout') : ls.lt.scaleXOut;
                                curSubScaleY = $(this).data('scaleyout') ? $(this).data('scaleyout') : ls.lt.scaleYOut;
                        }
                        else {
                        curSubScaleX = curSubScaleY = curSubScale;
                        }
                        var too = $(this).data('transformoriginout') ? $(this).data('transformoriginout').split(' ') : ls.lt.transformOriginOut;
                                for (var t = 0; t < too.length; t++) {
                        if (too[t].indexOf('%') === - 1 && too[t].indexOf('left') !== - 1 && too[t].indexOf('right') !== - 1 && too[t].indexOf('top') !== - 1 && too[t].indexOf('bottom') !== - 1) {
                        too[t] = '' + parseInt(too[t]) * ls.g.ratio + 'px';
                        }
                        }
                        var curSubTransformOrigin = too.join(' ');
                                var curSubPerspective = $(this).data('perspectiveout') ? $(this).data('perspectiveout') : ls.lt.perspectiveOut;
                                var endLeft = parseInt($(this).css('left'));
                                var endTop = parseInt($(this).css('top'));
                                var curSubPLevel = parseInt($(this).attr('class').split('ls-l')[1]);
                                var wh = $(this).outerWidth() > $(this).outerHeight() ? $(this).outerWidth() : $(this).outerHeight();
                                var modX = parseInt(curSubRotate) === 0 ? $(this).outerWidth() : wh;
                                var modY = parseInt(curSubRotate) === 0 ? $(this).outerHeight() : wh;
                                if ((curSubPLevel === - 1 && curSubSlideOutDir !== 'new') || ($(this).data('offsetxout') === 'left' || $(this).data('offsetxout') === 'right')) {
                        if (lml < 0) {
                        lml = - (ls.g.sliderWidth() - endLeft + (curSubScaleX / 2 - .5) * modX + 100);
                        }
                        else if (lml > 0) {
                        lml = endLeft + (curSubScaleX / 2 + .5) * modX + 100;
                        }
                        }
                        else {
                        lml = lml * ls.g.ratio;
                        }
                        if ((curSubPLevel === - 1 && curSubSlideOutDir !== 'new') || ($(this).data('offsetyout') === 'top' || $(this).data('offsetyout') === 'bottom')) {
                        if (lmt < 0) {
                        lmt = - (ls.g.sliderHeight() - endTop + (curSubScaleY / 2 - .5) * modY + 100);
                        }
                        else if (lmt > 0) {
                        lmt = endTop + (curSubScaleY / 2 + .5) * modY + 100;
                        }
                        }
                        else {
                        lmt = lmt * ls.g.ratio;
                        }
                        if (curSubPLevel === - 1 || curSubSlideOutDir === 'new') {
                        var curSubPar = 1;
                        }
                        else {
                        var curSubParMod = ls.g.curLayer.data('parallaxout') ? parseInt(ls.g.curLayer.data('parallaxout')) : ls.o.parallaxOut;
                                var curSubPar = curSubPLevel * curSubParMod;
                        }
                        if ($(this).data('transitiontype') === 'new') {
                        var deO = ls.lt.delayOut;
                                var duO = ls.lt.durationOut;
                                var eO = ls.lt.easingOut;
                        }
                        else {
                        var deO = ls.o.delayOut;
                                var duO = ls.o.durationOut;
                                var eO = ls.o.easingOut;
                        }
                        var curSubDelay = $(this).data('delayout') ? parseInt($(this).data('delayout')) : deO;
                                var curSubTime = $(this).data('durationout') ? parseInt($(this).data('durationout')) : duO;
                                if (curSubTime === 0) {
                        curSubTime = 1;
                        }
                        var curSubEasing = $(this).data('easingout') ? $(this).data('easingout') : eO;
                                if (sublayersDurationOut) {
                        curSubDelay = 0;
                                curSubTime = sublayersDurationOut;
                        }
                        if ($(this).data('showUntilTimer')) {
                        clearTimeout($(this).data('showUntilTimer'));
                        }
                        var css = { visibility: 'hidden' };
                                var el = $(this);
                                var transition = { rotation: curSubRotate, rotationX: curSubRotateX, rotationY: curSubRotateY, skewX: curSubSkewX, skewY: curSubSkewY, scaleX: curSubScaleX, scaleY: curSubScaleY, x: - lml * curSubPar, y: - lmt * curSubPar, delay: curSubDelay / 1000, ease: lsConvertEasing(curSubEasing), onComplete: function () {
                                $(this).data('status', 'forceoutend');
                                } };
                                if (curSubSlideOutDir == 'fade' || (!curSubSlideOutDir && curSubSlideDir === 'fade') || ($(this).data('fadeout') !== 'false' && $(this).data('transitiontype') === 'new')) {
                        transition['opacity'] = 0;
                                css['opacity'] = $(this).data('originalOpacity');
                        }
                        var tr = $(this).data('tr');
                                if (tr) {
                        if ($.isArray(tr))
                                for (var i = 0; i < tr.length; i++)
                                tr[i].kill();
                                else
                                tr.kill();
                        }
                        TweenLite.set($(this)[0], { transformOrigin: curSubTransformOrigin, transformPerspective: curSubPerspective });
                                if ($(this).data('status') == 'outend')
                                return;
                                $(this).data('status', 'forceout');
                                var splitOut = curSubSplit.split('_');
                                if (splitOut[0]) {
                        var text = $(this).data('split'), nodes = text[splitOut[0]];
                                if (splitOut[1] == 'desc') {
                        nodes = nodes.slice(0).reverse();
                        }
                        else if (splitOut[1] == 'rand') {
                        nodes = nodes.slice(0).sort(function () {
                        return 0.5 - Math.random();
                        });
                        }
                        transition.onComplete = undefined;
                                TweenLite.set(nodes, { transformOrigin: curSubTransformOrigin });
                                $(this).data('tr', TweenMax.staggerTo(nodes, curSubTime / 1000, transition, curSubShift / 1000, function () {
                        $(this).data('status', 'forceoutend');
                        }));
                        }
                        else
                                $(this).data('tr', TweenLite.to(this, curSubTime / 1000, transition));
                        });
                        };
                        var nextLayer = function () {
                        ls.g.nextLayer.delay(curDelay + nextDelay).animate({ width: ls.g.sliderWidth(), height: ls.g.sliderHeight() }, nextDuration, nextEasing);
                        };
                        var nextSubLayers = function () {
                        if (ls.g.totalDuration) {
                        curDelay = 0;
                        }
                        if (typeof ls.o.cbTimeLineStart === 'function') {
                        ls.o.cbTimeLineStart(ls.g, curDelay + nextDelay);
                        }
                        ls.g.nextLayer.find(' > *[class*="ls-l"]').each(function () {
                        if (!$(this).data('transitiontype')) {
                        ls.transitionType($(this));
                        }
                        if ($(this).data('transitiontype') === 'new') {
                        var nextSubSlideDir = 'new';
                        }
                        else {
                        var nextSubSlideDir = $(this).data('slidedirection') ? $(this).data('slidedirection') : slideDirection;
                        }
                        var lml, lmt;
                                switch (nextSubSlideDir) {
                        case 'left':
                                lml = - ls.g.sliderWidth();
                                lmt = 0;
                                break;
                                case 'right':
                                lml = ls.g.sliderWidth();
                                lmt = 0;
                                break;
                                case 'top':
                                lmt = - ls.g.sliderHeight();
                                lml = 0;
                                break;
                                case 'bottom':
                                lmt = ls.g.sliderHeight();
                                lml = 0;
                                break;
                                case 'fade':
                                lmt = 0;
                                lml = 0;
                                break;
                                case 'new':
                                if ($(this).data('offsetxin')) {
                        if ($(this).data('offsetxin') === 'left') {
                        lml = - ls.g.sliderWidth();
                        }
                        else if ($(this).data('offsetxin') === 'right') {
                        lml = ls.g.sliderWidth();
                        }
                        else {
                        lml = parseInt($(this).data('offsetxin'));
                        }
                        }
                        else {
                        lml = ls.lt.offsetXIn;
                        }
                        if ($(this).data('offsetyin')) {
                        if ($(this).data('offsetyin') === 'top') {
                        lmt = - ls.g.sliderHeight();
                        }
                        else if ($(this).data('offsetyin') === 'bottom') {
                        lmt = ls.g.sliderHeight();
                        }
                        else {
                        lmt = parseInt($(this).data('offsetyin'));
                        }
                        }
                        else {
                        lmt = ls.lt.offsetYIn;
                        }
                        break;
                        }
                        var nextSubRotate = nextSubRotateX = nextSubRotateY = nextSubScale = nextSubSkewX = nextSubSkewY = nextSubScaleX = nextSubScaleY = 'none';
                                var nextSubSplit, nextSubShift;
                                nextSubRotate = $(this).data('rotatein') ? $(this).data('rotatein') : ls.lt.rotateIn;
                                nextSubRotateX = $(this).data('rotatexin') ? $(this).data('rotatexin') : ls.lt.rotateXIn;
                                nextSubRotateY = $(this).data('rotateyin') ? $(this).data('rotateyin') : ls.lt.rotateYIn;
                                nextSubScale = $(this).data('scalein') ? $(this).data('scalein') : ls.lt.scaleIn;
                                nextSubSkewX = $(this).data('skewxin') ? $(this).data('skewxin') : ls.lt.skewXIn;
                                nextSubSkewY = $(this).data('skewyin') ? $(this).data('skewyin') : ls.lt.skewYIn;
                                nextSubSplit = $(this).data('splitin') ? $(this).data('splitin') : ls.lt.splitIn;
                                nextSubShift = $(this).data('shiftin') ? $(this).data('shiftin') : ls.lt.shiftIn;
                                if (nextSubScale === 1) {
                        nextSubScaleX = $(this).data('scalexin') ? $(this).data('scalexin') : ls.lt.scaleXIn;
                                nextSubScaleY = $(this).data('scaleyin') ? $(this).data('scaleyin') : ls.lt.scaleYIn;
                        }
                        else {
                        nextSubScaleX = nextSubScaleY = nextSubScale;
                        }
                        var toi = $(this).data('transformoriginin') ? $(this).data('transformoriginin').split(' ') : ls.lt.transformOriginIn;
                                for (var t = 0; t < toi.length; t++) {
                        if (toi[t].indexOf('%') === - 1 && toi[t].indexOf('left') !== - 1 && toi[t].indexOf('right') !== - 1 && toi[t].indexOf('top') !== - 1 && toi[t].indexOf('bottom') !== - 1) {
                        toi[t] = '' + parseInt(toi[t]) * ls.g.ratio + 'px';
                        }
                        }
                        var nextSubTransformOrigin = toi.join(' ');
                                var nextSubPerspective = $(this).data('perspectivein') ? $(this).data('perspectivein') : ls.lt.perspectiveIn;
                                var endLeft = parseInt($(this).css('left'));
                                var endTop = parseInt($(this).css('top'));
                                var nextSubPLevel = parseInt($(this).attr('class').split('ls-l')[1]);
                                if ($(this)[0].style.width.indexOf('%') !== - 1) {
                        $(this).css({ width: ls.g.sliderWidth() / 100 * parseInt($(this)[0].style.width) });
                        }
                        var wh = $(this).outerWidth() > $(this).outerHeight() ? $(this).outerWidth() : $(this).outerHeight();
                                var modX = parseInt(nextSubRotate) === 0 ? $(this).outerWidth() : wh;
                                var modY = parseInt(nextSubRotate) === 0 ? $(this).outerHeight() : wh;
                                if ((nextSubPLevel === - 1 && nextSubSlideDir !== 'new') || ($(this).data('offsetxin') === 'left' || $(this).data('offsetxin') === 'right')) {
                        if (lml < 0) {
                        lml = - (endLeft + (nextSubScaleX / 2 + .5) * modX + 100);
                        }
                        else if (lml > 0) {
                        lml = ls.g.sliderWidth() - endLeft + (nextSubScaleX / 2 - .5) * modX + 100;
                        }
                        }
                        else {
                        lml = lml * ls.g.ratio;
                        }
                        if ((nextSubPLevel === - 1 && nextSubSlideDir !== 'new') || ($(this).data('offsetyin') === 'top' || $(this).data('offsetyin') === 'bottom')) {
                        if (lmt < 0) {
                        lmt = - (endTop + (nextSubScaleY / 2 + .5) * modY + 100);
                        }
                        else if (lmt > 0) {
                        lmt = ls.g.sliderHeight() - endTop + (nextSubScaleY / 2 - .5) * modY + 100;
                        }
                        }
                        else {
                        lmt = lmt * ls.g.ratio;
                        }
                        if (nextSubPLevel === - 1 || nextSubSlideDir === 'new') {
                        var nextSubPar = 1;
                        }
                        else {
                        var nextSubParMod = ls.g.nextLayer.data('parallaxin') ? parseInt(ls.g.nextLayer.data('parallaxin')) : ls.o.parallaxIn;
                                var nextSubPar = nextSubPLevel * nextSubParMod;
                        }
                        if ($(this).data('transitiontype') === 'new') {
                        var deI = ls.lt.delayIn;
                                var duI = ls.lt.durationIn;
                                var eI = ls.lt.easingIn;
                        }
                        else {
                        var deI = ls.o.delayIn;
                                var duI = ls.o.durationIn;
                                var eI = ls.o.easingIn;
                        }
                        var nextSubDelay = $(this).data('delayin') ? parseInt($(this).data('delayin')) : deI;
                                var nextSubTime = $(this).data('durationin') ? parseInt($(this).data('durationin')) : duI;
                                var nextSubEasing = $(this).data('easingin') ? $(this).data('easingin') : eI;
                                var cursub = $(this);
                                var nextSubCallback = function () {
                                if (cursub.hasClass('ls-video-layer')) {
                                cursub.addClass('ls-videohack');
                                }
                                if (ls.o.autoPlayVideos == true) {
                                cursub.find('.ls-videopreview').click();
                                        cursub.find('video, audio').each(function () {
                                if (typeof $(this)[0].currentTime !== 0) {
                                $(this)[0].currentTime = 0;
                                }
                                $(this).click();
                                });
                                }
                                if ((!cursub.hasClass('ls-video-layer') || (cursub.hasClass('ls-video-layer') && ls.o.autoPlayVideos === false)) && cursub.data('showuntil') > 0) {
                                cursub.data('showUntilTimer', setTimeout(function () {
                                ls.sublayerShowUntil(cursub);
                                }, cursub.data('showuntil')));
                                }
                                };
                                $(this).css({ marginLeft: 0, marginTop: 0 });
                                var css = { scaleX: nextSubScaleX, scaleY: nextSubScaleY, skewX: nextSubSkewX, skewY: nextSubSkewY, rotation: nextSubRotate, rotationX: nextSubRotateX, rotationY: nextSubRotateY, visibility: 'visible', x: lml * nextSubPar, y: lmt * nextSubPar };
                                var transition = { rotation: 0, rotationX: 0, rotationY: 0, skewX: 0, skewY: 0, scaleX: 1, scaleY: 1, ease: lsConvertEasing(nextSubEasing), delay: nextSubDelay / 1000, x: 0, y: 0, onComplete: function () {
                                $(this).data('status', 'inend');
                                        nextSubCallback();
                                } };
                                if (nextSubSlideDir.indexOf('fade') != - 1 || ($(this).data('fadein') !== 'false' && $(this).data('transitiontype') === 'new')) {
                        css['opacity'] = 0;
                                transition['opacity'] = $(this).data('originalOpacity');
                        }
                        var tr = $(this).data('tr');
                                if (tr) {
                        if ($.isArray(tr))
                                for (var i = 0; i < tr.length; i++)
                                tr[i].kill();
                                else
                                tr.kill();
                        }
                        TweenLite.set(this, { transformPerspective: nextSubPerspective, transformOrigin: nextSubTransformOrigin });
                                var splitIn = nextSubSplit.split('_'), splitOut = ($(this).data('splitout') || ls.lt.splitOut).split('_'), splitType = splitIn[0] || splitOut[0];
                                if (splitType) {
                        splitType += splitType != splitOut[0] ? ',' + splitOut[0] : '';
                                $(this).data('split', new SplitText(this, { type: splitType }));
                        }
                        $(this).data('status', 'in');
                                if (splitIn[0]) {
                        var text = $(this).data('split'), nodes = text[splitIn[0]];
                                if (splitIn[1] == 'desc') {
                        nodes = nodes.slice(0).reverse();
                        }
                        else if (splitIn[1] == 'rand') {
                        nodes = nodes.slice(0).sort(function () {
                        return 0.5 - Math.random();
                        });
                        }
                        transition.onComplete = undefined;
                                transition.visibility = 'visible';
                                TweenLite.set(this, transition);
                                TweenLite.set(nodes, { transformOrigin: nextSubTransformOrigin });
                                $(this).data('tr', TweenMax.staggerFromTo(nodes, nextSubTime / 1000, css, transition, nextSubShift / 1000, function () {
                        $(this).data('status', 'inend');
                                nextSubCallback();
                        }));
                        }
                        else
                                $(this).data('tr', TweenLite.fromTo(this, nextSubTime / 1000, css, transition));
                        });
                        };
                        var selectTransition = function () {
                        if (lsSupport3D($(el)) && (ls.g.nextLayer.data('transition3d') || ls.g.nextLayer.data('customtransition3d'))) {
                        if (ls.g.nextLayer.data('transition3d') && ls.g.nextLayer.data('customtransition3d')) {
                        var rnd = Math.floor(Math.random() * 2);
                                var rndT = [['3d', ls.g.nextLayer.data('transition3d')], ['custom3d', ls.g.nextLayer.data('customtransition3d')]];
                                getTransitionType(rndT[rnd][0], rndT[rnd][1]);
                        }
                        else if (ls.g.nextLayer.data('transition3d')) {
                        getTransitionType('3d', ls.g.nextLayer.data('transition3d'));
                        }
                        else {
                        getTransitionType('custom3d', ls.g.nextLayer.data('customtransition3d'));
                        }
                        }
                        else {
                        if (ls.g.nextLayer.data('transition2d') && ls.g.nextLayer.data('customtransition2d')) {
                        var rnd = Math.floor(Math.random() * 2);
                                var rndT = [['2d', ls.g.nextLayer.data('transition2d')], ['custom2d', ls.g.nextLayer.data('customtransition2d')]];
                                getTransitionType(rndT[rnd][0], rndT[rnd][1]);
                        }
                        else if (ls.g.nextLayer.data('transition2d')) {
                        getTransitionType('2d', ls.g.nextLayer.data('transition2d'));
                        }
                        else if (ls.g.nextLayer.data('customtransition2d')) {
                        getTransitionType('custom2d', ls.g.nextLayer.data('customtransition2d'));
                        }
                        else {
                        getTransitionType('2d', '1');
                        }
                        }
                        };
                        var selectCustomTransition = function () {
                        if (lsSupport3D($(el)) && LSCustomTransition.indexOf('3d') != - 1) {
                        getTransitionType('3d', LSCustomTransition.split(':')[1]);
                        }
                        else {
                        if (LSCustomTransition.indexOf('3d') != - 1) {
                        getTransitionType('2d', 'all');
                        }
                        else {
                        getTransitionType('2d', LSCustomTransition.split(':')[1]);
                        }
                        }
                        };
                        var getTransitionType = function (type, transitionlist) {
                        var tr = type.indexOf('custom') == - 1 ? ls.t : ls.ct;
                                var tt = '3d', lt, number;
                                if (type.indexOf('2d') != - 1) {
                        tt = '2d';
                        }
                        if (transitionlist.indexOf('last') != - 1) {
                        number = tr['t' + tt].length - 1;
                                lt = 'last';
                        }
                        else if (transitionlist.indexOf('all') != - 1) {
                        number = Math.floor(Math.random() * lsCountProp(tr['t' + tt]));
                                lt = 'random from all';
                        }
                        else {
                        var t = transitionlist.split(',');
                                var l = t.length;
                                number = parseInt(t[Math.floor(Math.random() * l)]) - 1;
                                lt = 'random from specified';
                        }
                        slideTransition(tt, tr['t' + tt][number]);
                        };
                        var slideTransition = function (type, prop) {
                        var inner = $(el).find('.ls-inner');
                                var sublayersDurationOut = ls.g.curLayer.find('*[class*="ls-l"]').length > 0 ? 1000 : 0;
                                var carousel = prop.name.toLowerCase().indexOf('carousel') == - 1 ? false : true;
                                var crossfade = prop.name.toLowerCase().indexOf('crossfad') == - 1 ? false : true;
                                var cols = typeof (prop.cols);
                                var rows = typeof (prop.rows);
                                switch (cols) {
                        case 'number':
                                cols = prop.cols;
                                break;
                                case 'string':
                                cols = Math.floor(Math.random() * (parseInt(prop.cols.split(',')[1]) - parseInt(prop.cols.split(',')[0]) + 1)) + parseInt(prop.cols.split(',')[0]);
                                break;
                                default:
                                cols = Math.floor(Math.random() * (prop.cols[1] - prop.cols[0] + 1)) + prop.cols[0];
                                break;
                        }
                        switch (rows) {
                        case 'number':
                                rows = prop.rows;
                                break;
                                case 'string':
                                rows = Math.floor(Math.random() * (parseInt(prop.rows.split(',')[1]) - parseInt(prop.rows.split(',')[0]) + 1)) + parseInt(prop.rows.split(',')[0]);
                                break;
                                default:
                                rows = Math.floor(Math.random() * (prop.rows[1] - prop.rows[0] + 1)) + prop.rows[0];
                                break;
                        }
                        if ((ls.g.isMobile() == true && ls.o.optimizeForMobile == true) || (ls.g.ie78 && ls.o.optimizeForIE78 == true)) {
                        if (cols >= 15) {
                        cols = 7;
                        }
                        else if (cols >= 5) {
                        cols = 4;
                        }
                        else if (cols >= 4) {
                        cols = 3;
                        }
                        else if (cols > 2) {
                        cols = 2;
                        }
                        if (rows >= 15) {
                        rows = 7;
                        }
                        else if (rows >= 5) {
                        rows = 4;
                        }
                        else if (rows >= 4) {
                        rows = 3;
                        }
                        else if (rows > 2) {
                        rows = 2;
                        }
                        if (rows > 2 && cols > 2) {
                        rows = 2;
                                if (cols > 4) {
                        cols = 4;
                        }
                        }
                        }
                        var tileWidth = $(el).find('.ls-inner').width() / cols;
                                var tileHeight = $(el).find('.ls-inner').height() / rows;
                                if (!ls.g.ltContainer) {
                        ls.g.ltContainer = $('<div>').addClass('ls-lt-container').addClass('ls-overflow-hidden').css({ width: inner.width(), height: inner.height() }).prependTo(inner);
                        }
                        else {
                        ls.g.ltContainer.stop(true, true).empty().css({ display: 'block', width: inner.width(), height: inner.height() });
                        }
                        var restW = inner.width() - Math.floor(tileWidth) * cols;
                                var restH = inner.height() - Math.floor(tileHeight) * rows;
                                var tileSequence = [];
                                tileSequence.randomize = function () {
                                var i = this.length, j, tempi, tempj;
                                        if (i == 0)
                                        return false;
                                        while (--i) {
                                j = Math.floor(Math.random() * (i + 1));
                                        tempi = this[i];
                                        tempj = this[j];
                                        this[i] = tempj;
                                        this[j] = tempi;
                                }
                                return this;
                                };
                                for (var ts = 0; ts < cols * rows; ts++) {
                        tileSequence.push(ts);
                        }
                        switch (prop.tile.sequence) {
                        case 'reverse':
                                tileSequence.reverse();
                                break;
                                case 'col-forward':
                                tileSequence = lsOrderArray(rows, cols, 'forward');
                                break;
                                case 'col-reverse':
                                tileSequence = lsOrderArray(rows, cols, 'reverse');
                                break;
                                case 'random':
                                tileSequence.randomize();
                                break;
                        }
                        var curBG = ls.g.curLayer.find('.ls-bg');
                                var nextBG = ls.g.nextLayer.find('.ls-bg');
                                if (curBG.length == 0 && nextBG.length == 0) {
                        type = '2d';
                                prop = $.extend(true, {}, ls.t['t2d'][0]);
                                prop.transition.duration = 1;
                                prop.tile.delay = 0;
                        }
                        if (type == '3d') {
                        ls.g.totalDuration = ((cols * rows) - 1) * prop.tile.delay;
                                var stepDuration = 0;
                                if (prop.before && prop.before.duration) {
                        stepDuration += prop.before.duration;
                        }
                        if (prop.animation && prop.animation.duration) {
                        stepDuration += prop.animation.duration;
                        }
                        if (prop.after && prop.after.duration) {
                        stepDuration += prop.after.duration;
                        }
                        ls.g.totalDuration += stepDuration;
                                var stepDelay = 0;
                                if (prop.before && prop.before.delay) {
                        stepDelay += prop.before.delay;
                        }
                        if (prop.animation && prop.animation.delay) {
                        stepDelay += prop.animation.delay;
                        }
                        if (prop.after && prop.after.delay) {
                        stepDelay += prop.after.delay;
                        }
                        ls.g.totalDuration += stepDelay;
                        }
                        else {
                        ls.g.totalDuration = ((cols * rows) - 1) * prop.tile.delay + prop.transition.duration;
                                ls.g.curTiles = $('<div>').addClass('ls-curtiles').appendTo(ls.g.ltContainer);
                                ls.g.nextTiles = $('<div>').addClass('ls-nexttiles').appendTo(ls.g.ltContainer);
                        }
                        var pn = ls.g.prevNext;
                                for (var tiles = 0; tiles < cols * rows; tiles++) {
                        var rW = tiles % cols == 0 ? restW : 0;
                                var rH = tiles > (rows - 1) * cols - 1 ? restH : 0;
                                var tile = $('<div>').addClass('ls-lt-tile').css({ width: Math.floor(tileWidth) + rW, height: Math.floor(tileHeight) + rH }).appendTo(ls.g.ltContainer);
                                var curTile, nextTile;
                                if (type == '3d') {
                        tile.addClass('ls-3d-container');
                                var W = Math.floor(tileWidth) + rW;
                                var H = Math.floor(tileHeight) + rH;
                                var D;
                                if (prop.animation.direction == 'horizontal') {
                        if (Math.abs(prop.animation.transition.rotateY) > 90 && prop.tile.depth != 'large') {
                        D = Math.floor(W / 7) + rW;
                        }
                        else {
                        D = W;
                        }
                        }
                        else {
                        if (Math.abs(prop.animation.transition.rotateX) > 90 && prop.tile.depth != 'large') {
                        D = Math.floor(H / 7) + rH;
                        }
                        else {
                        D = H;
                        }
                        }
                        var W2 = W / 2;
                                var H2 = H / 2;
                                var D2 = D / 2;
                                var createCuboids = function (c, a, w, h, tx, ty, tz, rx, ry) {
                                $('<div>').addClass(c).css({ width: w, height: h, '-o-transform': 'translate3d(' + tx + 'px, ' + ty + 'px, ' + tz + 'px) rotateX(' + rx + 'deg) rotateY(' + ry + 'deg) rotateZ(0deg) scale3d(1, 1, 1)', '-ms-transform': 'translate3d(' + tx + 'px, ' + ty + 'px, ' + tz + 'px) rotateX(' + rx + 'deg) rotateY(' + ry + 'deg) rotateZ(0deg) scale3d(1, 1, 1)', '-moz-transform': 'translate3d(' + tx + 'px, ' + ty + 'px, ' + tz + 'px) rotateX(' + rx + 'deg) rotateY(' + ry + 'deg) rotateZ(0deg) scale3d(1, 1, 1)', '-webkit-transform': 'translate3d(' + tx + 'px, ' + ty + 'px, ' + tz + 'px) rotateX(' + rx + 'deg) rotateY(' + ry + 'deg) rotateZ(0deg) scale3d(1, 1, 1)', 'transform': 'translate3d(' + tx + 'px, ' + ty + 'px, ' + tz + 'px) rotateX(' + rx + 'deg) rotateY(' + ry + 'deg) rotateZ(0deg) scale3d(1, 1, 1)' }).appendTo(a);
                                };
                                createCuboids('ls-3d-box', tile, 0, 0, 0, 0, - D2, 0, 0);
                                var backRotX = 0;
                                var topRotX = 0;
                                var bottomRotX = 0;
                                if (prop.animation.direction == 'vertical' && Math.abs(prop.animation.transition.rotateX) > 90) {
                        createCuboids('ls-3d-back', tile.find('.ls-3d-box'), W, H, - W2, - H2, - D2, 180, 0);
                        }
                        else {
                        createCuboids('ls-3d-back', tile.find('.ls-3d-box'), W, H, - W2, - H2, - D2, 0, 180);
                        }
                        createCuboids('ls-3d-bottom', tile.find('.ls-3d-box'), W, D, - W2, H2 - D2, 0, - 90, 0);
                                createCuboids('ls-3d-top', tile.find('.ls-3d-box'), W, D, - W2, - H2 - D2, 0, 90, 0);
                                createCuboids('ls-3d-front', tile.find('.ls-3d-box'), W, H, - W2, - H2, D2, 0, 0);
                                createCuboids('ls-3d-left', tile.find('.ls-3d-box'), D, H, - W2 - D2, - H2, 0, 0, - 90);
                                createCuboids('ls-3d-right', tile.find('.ls-3d-box'), D, H, W2 - D2, - H2, 0, 0, 90);
                                curTile = tile.find('.ls-3d-front');
                                if (prop.animation.direction == 'horizontal') {
                        if (Math.abs(prop.animation.transition.rotateY) > 90) {
                        nextTile = tile.find('.ls-3d-back');
                        }
                        else {
                        nextTile = tile.find('.ls-3d-left, .ls-3d-right');
                        }
                        }
                        else {
                        if (Math.abs(prop.animation.transition.rotateX) > 90) {
                        nextTile = tile.find('.ls-3d-back');
                        }
                        else {
                        nextTile = tile.find('.ls-3d-top, .ls-3d-bottom');
                        }
                        }
                        var curCubDelay = tileSequence[tiles] * prop.tile.delay;
                                var curCub = ls.g.ltContainer.find('.ls-3d-container:eq(' + tiles + ') .ls-3d-box');
                                var tl = new TimelineLite();
                                if (prop.before && prop.before.transition) {
                        prop.before.transition.delay = prop.before.transition.delay ? (prop.before.transition.delay + curCubDelay) / 1000 : curCubDelay / 1000;
                                tl.to(curCub[0], prop.before.duration / 1000, lsConvertTransition(prop.before.transition, prop.before.easing));
                        }
                        else {
                        prop.animation.transition.delay = prop.animation.transition.delay ? (prop.animation.transition.delay + curCubDelay) / 1000 : curCubDelay / 1000;
                        }
                        tl.to(curCub[0], prop.animation.duration / 1000, lsConvertTransition(prop.animation.transition, prop.animation.easing));
                                if (prop.after) {
                        if (!prop.after.transition) {
                        prop.after.transition = {};
                        }
                        tl.to(curCub[0], prop.after.duration / 1000, lsConvertTransition(prop.after.transition, prop.after.easing, 'after'));
                        }
                        }
                        else {
                        var T1 = L1 = T2 = L2 = 'auto';
                                var O1 = O2 = 1;
                                if (prop.transition.direction == 'random') {
                        var dir = ['top', 'bottom', 'right', 'left'];
                                var direction = dir[Math.floor(Math.random() * dir.length)];
                        }
                        else {
                        var direction = prop.transition.direction;
                        }
                        if (prop.name.toLowerCase().indexOf('mirror') != - 1 && tiles % 2 == 0) {
                        if (pn == 'prev') {
                        pn = 'next';
                        }
                        else {
                        pn = 'prev';
                        }
                        }
                        if (pn == 'prev') {
                        switch (direction) {
                        case 'top':
                                direction = 'bottom';
                                break;
                                case 'bottom':
                                direction = 'top';
                                break;
                                case 'left':
                                direction = 'right';
                                break;
                                case 'right':
                                direction = 'left';
                                break;
                                case 'topleft':
                                direction = 'bottomright';
                                break;
                                case 'topright':
                                direction = 'bottomleft';
                                break;
                                case 'bottomleft':
                                direction = 'topright';
                                break;
                                case 'bottomright':
                                direction = 'topleft';
                                break;
                        }
                        }
                        switch (direction) {
                        case 'top':
                                T1 = T2 = - tile.height();
                                L1 = L2 = 0;
                                break;
                                case 'bottom':
                                T1 = T2 = tile.height();
                                L1 = L2 = 0;
                                break;
                                case 'left':
                                T1 = T2 = 0;
                                L1 = L2 = - tile.width();
                                break;
                                case 'right':
                                T1 = T2 = 0;
                                L1 = L2 = tile.width();
                                break;
                                case 'topleft':
                                T1 = tile.height();
                                T2 = 0;
                                L1 = tile.width();
                                L2 = 0;
                                break;
                                case 'topright':
                                T1 = tile.height();
                                T2 = 0;
                                L1 = - tile.width();
                                L2 = 0;
                                break;
                                case 'bottomleft':
                                T1 = - tile.height();
                                T2 = 0;
                                L1 = tile.width();
                                L2 = 0;
                                break;
                                case 'bottomright':
                                T1 = - tile.height();
                                T2 = 0;
                                L1 = - tile.width();
                                L2 = 0;
                                break;
                        }
                        ls.g.scale2D = prop.transition.scale ? prop.transition.scale : 1;
                                if (carousel == true && ls.g.scale2D != 1) {
                        T1 = T1 / 2;
                                T2 = T2 / 2;
                                L1 = L1 / 2;
                                L2 = L2 / 2;
                        }
                        switch (prop.transition.type) {
                        case 'fade':
                                T1 = T2 = L1 = L2 = 0;
                                O1 = 0;
                                O2 = 1;
                                break;
                                case 'mixed':
                                O1 = 0;
                                O2 = 1;
                                if (ls.g.scale2D == 1) {
                        T2 = L2 = 0;
                        }
                        break;
                        }
                        if (((prop.transition.rotate || prop.transition.rotateX || prop.transition.rotateY) || ls.g.scale2D != 1) && !ls.g.ie78 && prop.transition.type != 'slide') {
                        tile.css({ overflow: 'visible' });
                        }
                        else {
                        tile.css({ overflow: 'hidden' });
                        }
                        if (carousel == true) {
                        ls.g.curTiles.css({ overflow: 'visible' });
                        }
                        else {
                        ls.g.curTiles.css({ overflow: 'hidden' });
                        }
                        if (crossfade == true || prop.transition.type == 'slide' || carousel == true) {
                        var tileInCur = tile.appendTo(ls.g.curTiles);
                                var tileInNext = tile.clone().appendTo(ls.g.nextTiles);
                                curTile = $('<div>').addClass('ls-curtile').appendTo(tileInCur);
                        }
                        else {
                        var tileInNext = tile.appendTo(ls.g.nextTiles);
                        }
                        nextTile = $('<div>').addClass('ls-nexttile').appendTo(tileInNext).css({ top: - T1, left: - L1, dispay: 'block', opacity: O1 });
                                var curTileDelay = tileSequence[tiles] * prop.tile.delay;
                                var r = prop.transition.rotate ? prop.transition.rotate : 0;
                                var rX = prop.transition.rotateX ? prop.transition.rotateX : 0;
                                var rY = prop.transition.rotateY ? prop.transition.rotateY : 0;
                                if (pn == 'prev') {
                        r = - r;
                                rX = - rX;
                                rY = - rY;
                        }
                        TweenLite.fromTo(nextTile[0], prop.transition.duration / 1000, { rotation: r, rotationX: rX, rotationY: rY, scale: ls.g.scale2D }, { delay: curTileDelay / 1000, top: 0, left: 0, opacity: O2, rotation: 0, rotationX: 0, rotationY: 0, scale: 1, ease: lsConvertEasing(prop.transition.easing) });
                                if (crossfade == true && (nextBG.length < 1 || (nextBG.length > 0 && (nextBG.attr('src').toLowerCase().indexOf('png') != - 1 || (nextBG.width() < ls.g.sliderWidth() || nextBG.height() < ls.g.sliderHeight()))))) {
                        TweenLite.to(curTile[0], prop.transition.duration / 1000, { delay: curTileDelay / 1000, opacity: 0, ease: lsConvertEasing(prop.transition.easing) });
                        }
                        if ((prop.transition.type == 'slide' || carousel == true) && prop.name.toLowerCase().indexOf('mirror') == - 1) {
                        var r2 = 0;
                                if (r != 0) {
                        r2 = - r;
                        }
                        TweenLite.to(curTile[0], prop.transition.duration / 1000, { delay: curTileDelay / 1000, top: T2, left: L2, rotation: r2, scale: ls.g.scale2D, opacity: O1, ease: lsConvertEasing(prop.transition.easing) });
                        }
                        }
                        if (curBG.length) {
                        if (type == '3d' || (type == '2d' && (crossfade == true || prop.transition.type == 'slide' || carousel == true))) {
                        curTile.append($('<img>').attr('src', curBG.attr('src')).css({ width: curBG[0].style.width, height: curBG[0].style.height, marginLeft: parseFloat(curBG.css('margin-left')) - parseFloat(tile.position().left), marginTop: parseFloat(curBG.css('margin-top')) - parseFloat(tile.position().top) }));
                        }
                        else if (ls.g.curTiles.children().length == 0) {
                        ls.g.curTiles.append($('<img>').attr('src', curBG.attr('src')).css({ width: curBG[0].style.width, height: curBG[0].style.height, marginLeft: parseFloat(curBG.css('margin-left')), marginTop: parseFloat(curBG.css('margin-top')) }));
                        }
                        }
                        if (nextBG.length) {
                        nextTile.append($('<img>').attr('src', nextBG.attr('src')).css({ width: nextBG[0].style.width, height: nextBG[0].style.height, marginLeft: parseFloat(nextBG.css('margin-left')) - parseFloat(tile.position().left), marginTop: parseFloat(nextBG.css('margin-top')) - parseFloat(tile.position().top) }));
                        }
                        }
                        var curLayer = ls.g.curLayer;
                                var nextLayer = ls.g.nextLayer;
                                setTimeout(function () {
                                curLayer.find('.ls-bg').css({ visibility: 'hidden' });
                                }, 50);
                                nextLayer.find('.ls-bg').css({ visibility: 'hidden' });
                                ls.g.ltContainer.removeClass('ls-overflow-hidden');
                                curSubLayers(sublayersDurationOut);
                                if (sublayersDurationOut === 0) {
                        sublayersDurationOut = 10;
                        }
                        setTimeout(function () {
                        curLayer.css({ width: 0 });
                        }, sublayersDurationOut);
                                var nextLayerTimeShift = parseInt(nextLayer.data('timeshift')) ? parseInt(nextLayer.data('timeshift')) : 0;
                                var nextLayerDelay = ls.g.totalDuration + nextLayerTimeShift > 0 ? ls.g.totalDuration + nextLayerTimeShift : 0;
                                setTimeout(function () {
                                if (ls.g.resize == true) {
                                ls.g.ltContainer.empty();
                                        curLayer.removeClass('ls-active');
                                        ls.makeResponsive(nextLayer, function () {
                                        ls.g.resize = false;
                                        });
                                }
                                nextSubLayers();
                                        if (nextLayer.find('.ls-bg').length < 1 || (nextLayer.find('.ls-bg').length > 0 && nextLayer.find('.ls-bg').attr('src').toLowerCase().indexOf('png') != - 1)) {
                                ls.g.ltContainer.delay(350).fadeOut(300, function () {
                                $(this).empty().show();
                                });
                                }
                                nextLayer.css({ width: ls.g.sliderWidth(), height: ls.g.sliderHeight() });
                                }, nextLayerDelay);
                                if (ls.g.totalDuration < 300) {
                        ls.g.totalDuration = 1000;
                        }
                        setTimeout(function () {
                        ls.g.ltContainer.addClass('ls-overflow-hidden');
                                nextLayer.addClass('ls-active');
                                if (nextLayer.find('.ls-bg').length) {
                        nextLayer.find('.ls-bg').css({ display: 'none', visibility: 'visible' });
                                if (ls.g.ie78) {
                        nextLayer.find('.ls-bg').css('display', 'block');
                                setTimeout(function () {
                                curLayerCallback();
                                }, 500);
                        }
                        else {
                        nextLayer.find('.ls-bg').fadeIn(500, function () {
                        curLayerCallback();
                        });
                        }
                        }
                        else {
                        curLayerCallback();
                        }
                        }, ls.g.totalDuration);
                        };
                        var startOnScroll = function () {
                        ls.g.nextLayer.find(' > *[class*="ls-l"]').each(function () {
                        $(this).css({ visibility: 'hidden' });
                        });
                                ls.g.sliderTop = $(el).offset().top;
                                $(window).load(function () {
                        setTimeout(function () {
                        ls.g.sliderTop = $(el).offset().top;
                        }, 20);
                        });
                                var isSliderInViewport = function () {
                                if ($(window).scrollTop() + $(window).height() - (ls.g.sliderHeight() / 2) > ls.g.sliderTop) {
                                ls.g.firstSlideAnimated = true;
                                        if (ls.g.originalAutoStart === true) {
                                ls.o.autoStart = true;
                                        ls.start();
                                }
                                nextSubLayers();
                                }
                                };
                                $(window).scroll(function () {
                        if (!ls.g.firstSlideAnimated) {
                        isSliderInViewport();
                        }
                        });
                                isSliderInViewport();
                        };
                        var tType = ((ls.g.nextLayer.data('transition3d') || ls.g.nextLayer.data('transition2d')) && ls.t) || ((ls.g.nextLayer.data('customtransition3d') || ls.g.nextLayer.data('customtransition2d')) && ls.ct) ? 'new' : 'old';
                        if (!ls.g.nextLayer.data('transitiontype')) {
                ls.transitionType(ls.g.nextLayer);
                }
                if (ls.g.nextLayer.data('transitiontype') === 'new') {
                tType = 'new';
                }
                if (ls.o.slideTransition) {
                tType = 'forced';
                }
                if (ls.o.animateFirstSlide && !ls.g.firstSlideAnimated) {
                if (ls.g.layersNum == 1) {
                var curDelay = 0;
                        ls.o.cbAnimStop(ls.g);
                }
                else {
                var nextLayerTimeShift = parseInt(ls.g.nextLayer.data('timeshift')) ? parseInt(ls.g.nextLayer.data('timeshift')) : 0;
                        var d = tType == 'new' ? 0 : curDuration;
                        ls.g.t5 = setTimeout(function () {
                        curLayerCallback();
                        }, d + Math.abs(nextLayerTimeShift));
                }
                ls.g.totalDuration = true;
                        if (ls.o.startOnScroll === true) {
                startOnScroll();
                }
                else {
                ls.g.firstSlideAnimated = true;
                        nextSubLayers();
                }
                ls.g.nextLayer.css({ width: ls.g.sliderWidth(), height: ls.g.sliderHeight() });
                        if (!ls.g.ie78) {
                ls.g.nextLayer.find('.ls-bg').css({ display: 'none' }).fadeIn(ls.o.sliderFadeInDuration);
                }
                ls.g.isLoading = false;
                }
                else {
                switch (tType) {
                case 'old':
                        ls.g.totalDuration = false;
                        if (ls.g.ltContainer) {
                ls.g.ltContainer.empty();
                }
                curLayer();
                        curSubLayers();
                        nextLayer();
                        nextSubLayers();
                        break;
                        case 'new':
                        if (typeof LSCustomTransition != 'undefined') {
                selectCustomTransition();
                }
                else {
                selectTransition();
                }
                break;
                        case 'forced':
                        slideTransition(ls.o.slideTransition.type, ls.o.slideTransition.obj);
                        break;
                }
                }
                };
                ls.transitionType = function (el) {
                var ttype = el.data('ls') || (!el.data('ls') && !el.data('slidedelay') && !el.data('slidedirection') && !el.data('slideoutdirection') && !el.data('delayin') && !el.data('delayout') && !el.data('durationin') && !el.data('durationout') && !el.data('showuntil') && !el.data('easingin') && !el.data('easingout') && !el.data('scalein') && !el.data('scaleout') && !el.data('rotatein') && !el.data('rotateout') && !el.data('splitin') && !el.data('splitout') && !el.data('shiftin') && !el.data('shiftout')) ? 'new' : 'old';
                        el.data('transitiontype', ttype);
                };
                ls.sublayerShowUntil = function (sublayer) {
                if (!sublayer.data('transitiontype')) {
                ls.transitionType(sublayer);
                }
                sublayer.removeClass('ls-videohack');
                        var prevOrNext = ls.g.curLayer;
                        if (ls.g.prevNext != 'prev' && ls.g.nextLayer) {
                prevOrNext = ls.g.nextLayer;
                }
                var chooseDirection = prevOrNext.data('slidedirection') ? prevOrNext.data('slidedirection') : ls.o.slideDirection;
                        var slideDirection = ls.g.slideDirections[ls.g.prevNext][chooseDirection];
                        var curSubSlideDir = sublayer.data('slidedirection') ? sublayer.data('slidedirection') : slideDirection;
                        var lml, lmt;
                        switch (curSubSlideDir) {
                case 'left':
                        lml = - ls.g.sliderWidth();
                        lmt = 0;
                        break;
                        case 'right':
                        lml = ls.g.sliderWidth();
                        lmt = 0;
                        break;
                        case 'top':
                        lmt = - ls.g.sliderHeight();
                        lml = 0;
                        break;
                        case 'bottom':
                        lmt = ls.g.sliderHeight();
                        lml = 0;
                        break;
                        case 'fade':
                        lmt = 0;
                        lml = 0;
                        break;
                }
                if (sublayer.data('transitiontype') === 'new') {
                var curSubSlideOutDir = 'new';
                }
                else {
                var curSubSlideOutDir = sublayer.data('slideoutdirection') ? sublayer.data('slideoutdirection') : false;
                }
                switch (curSubSlideOutDir) {
                case 'left':
                        lml = ls.g.sliderWidth();
                        lmt = 0;
                        break;
                        case 'right':
                        lml = - ls.g.sliderWidth();
                        lmt = 0;
                        break;
                        case 'top':
                        lmt = ls.g.sliderHeight();
                        lml = 0;
                        break;
                        case 'bottom':
                        lmt = - ls.g.sliderHeight();
                        lml = 0;
                        break;
                        case 'fade':
                        lmt = 0;
                        lml = 0;
                        break;
                        case 'new':
                        if (sublayer.data('offsetxout')) {
                if (sublayer.data('offsetxout') === 'left') {
                lml = ls.g.sliderWidth();
                }
                else if (sublayer.data('offsetxout') === 'right') {
                lml = - ls.g.sliderWidth();
                }
                else {
                lml = - parseInt(sublayer.data('offsetxout'));
                }
                }
                else {
                lml = - ls.lt.offsetXOut;
                }
                if (sublayer.data('offsetyout')) {
                if (sublayer.data('offsetyout') === 'top') {
                lmt = ls.g.sliderHeight();
                }
                else if (sublayer.data('offsetyout') === 'bottom') {
                lmt = - ls.g.sliderHeight();
                }
                else {
                lmt = - parseInt(sublayer.data('offsetyout'));
                }
                }
                else {
                lmt = - ls.lt.offsetYOut;
                }
                break;
                }
                var curSubRotate = curSubRotateX = curSubRotateY = curSubScale = curSubSkewX = curSubSkewY = curSubScaleX = curSubScaleY = 'none';
                        var curSubSplit, curSubShift;
                        curSubRotate = sublayer.data('rotateout') ? sublayer.data('rotateout') : ls.lt.rotateOut;
                        curSubRotateX = sublayer.data('rotatexout') ? sublayer.data('rotatexout') : ls.lt.rotateXOut;
                        curSubRotateY = sublayer.data('rotateyout') ? sublayer.data('rotateyout') : ls.lt.rotateYOut;
                        curSubScale = sublayer.data('scaleout') ? sublayer.data('scaleout') : ls.lt.scaleOut;
                        curSubSkewX = sublayer.data('skewxout') ? sublayer.data('skewxout') : ls.lt.skewXOut;
                        curSubSkewY = sublayer.data('skewyout') ? sublayer.data('skewyout') : ls.lt.skewYOut;
                        curSubSplit = sublayer.data('splitout') ? sublayer.data('splitout') : ls.lt.splitOut;
                        curSubShift = sublayer.data('shiftout') ? sublayer.data('shiftout') : ls.lt.splitOut;
                        if (curSubScale === 1) {
                curSubScaleX = sublayer.data('scalexout') ? sublayer.data('scalexout') : ls.lt.scaleXOut;
                        curSubScaleY = sublayer.data('scaleyout') ? sublayer.data('scaleyout') : ls.lt.scaleYOut;
                }
                else {
                curSubScaleX = curSubScaleY = curSubScale;
                }
                var too = sublayer.data('transformoriginout') ? sublayer.data('transformoriginout').split(' ') : ls.lt.transformOriginOut;
                        for (var t = 0; t < too.length; t++) {
                if (too[t].indexOf('%') === - 1 && too[t].indexOf('left') !== - 1 && too[t].indexOf('right') !== - 1 && too[t].indexOf('top') !== - 1 && too[t].indexOf('bottom') !== - 1) {
                too[t] = '' + parseInt(too[t]) * ls.g.ratio + 'px';
                }
                }
                var curSubTransformOrigin = too.join(' ');
                        var curSubPerspective = sublayer.data('perspectiveout') ? sublayer.data('perspectiveout') : ls.lt.perspectiveOut;
                        var endLeft = parseInt(sublayer.css('left'));
                        var endTop = parseInt(sublayer.css('top'));
                        var curSubPLevel = parseInt(sublayer.attr('class').split('ls-l')[1]);
                        var wh = sublayer.outerWidth() > sublayer.outerHeight() ? sublayer.outerWidth() : sublayer.outerHeight();
                        var modX = parseInt(curSubRotate) === 0 ? sublayer.outerWidth() : wh;
                        var modY = parseInt(curSubRotate) === 0 ? sublayer.outerHeight() : wh;
                        if ((curSubPLevel === - 1 && curSubSlideOutDir !== 'new') || (sublayer.data('offsetxout') === 'left' || sublayer.data('offsetxout') === 'right')) {
                if (lml < 0) {
                lml = - (ls.g.sliderWidth() - endLeft + (curSubScaleX / 2 - .5) * modX + 100);
                }
                else if (lml > 0) {
                lml = endLeft + (curSubScaleX / 2 + .5) * modX + 100;
                }
                }
                else {
                lml = lml * ls.g.ratio;
                }
                if ((curSubPLevel === - 1 && curSubSlideOutDir !== 'new') || (sublayer.data('offsetyout') === 'top' || sublayer.data('offsetyout') === 'bottom')) {
                if (lmt < 0) {
                lmt = - (ls.g.sliderHeight() - endTop + (curSubScaleY / 2 - .5) * modY + 100);
                }
                else if (lmt > 0) {
                lmt = endTop + (curSubScaleY / 2 + .5) * modY + 100;
                }
                }
                else {
                lmt = lmt * ls.g.ratio;
                }
                if (curSubPLevel === - 1 || curSubSlideOutDir === 'new') {
                var curSubPar = 1;
                }
                else {
                var curSubParMod = ls.g.curLayer.data('parallaxout') ? parseInt(ls.g.curLayer.data('parallaxout')) : ls.o.parallaxOut;
                        var curSubPar = curSubPLevel * curSubParMod;
                }
                if (sublayer.data('transitiontype') === 'new') {
                var duO = ls.lt.durationOut;
                        var eO = ls.lt.easingOut;
                }
                else {
                var duO = ls.o.durationOut;
                        var eO = ls.o.easingOut;
                }
                var curSubTime = sublayer.data('durationout') ? parseInt(sublayer.data('durationout')) : duO;
                        if (curSubTime === 0) {
                curSubTime = 1;
                }
                var curSubEasing = sublayer.data('easingout') ? sublayer.data('easingout') : eO;
                        var css = { visibility: 'hidden' };
                        var transition = { rotation: curSubRotate, rotationX: curSubRotateX, rotationY: curSubRotateY, skewX: curSubSkewX, skewY: curSubSkewY, scaleX: curSubScaleX, scaleY: curSubScaleY, x: - lml * curSubPar, y: - lmt * curSubPar, ease: lsConvertEasing(curSubEasing), onComplete: function () {
                        sublayer.data('status', 'outend');
                        } };
                        if (curSubSlideOutDir == 'fade' || (!curSubSlideOutDir && curSubSlideDir == 'fade') || (sublayer.data('fadeout') !== 'false' && sublayer.data('transitiontype') === 'new')) {
                transition['opacity'] = 0;
                        css['opacity'] = sublayer.data('originalOpacity');
                }
                TweenLite.set(sublayer[0], { transformPerspective: curSubPerspective, transformOrigin: curSubTransformOrigin });
                        sublayer.data('status', 'out');
                        var splitOut = curSubSplit.split('_');
                        if (splitOut[0]) {
                var text = sublayer.data('split'), nodes = text[splitOut[0]];
                        if (splitOut[1] == 'desc') {
                nodes = nodes.slice(0).reverse();
                }
                else if (splitOut[1] == 'rand') {
                nodes = nodes.slice(0).sort(function () {
                return 0.5 - Math.random();
                });
                }
                transition.onComplete = undefined;
                        TweenLite.set(nodes, { transformOrigin: curSubTransformOrigin });
                        TweenMax.staggerTo(nodes, curSubTime / 1000, transition, curSubShift / 1000, function () {
                        sublayer.data('status', 'outend');
                        });
                }
                else
                        TweenLite.to(sublayer[0], curSubTime / 1000, transition);
                };
                ls.debug = function () {
                ls.d = { history: $('<div>'), aT: function (content) {
                $('<h1>' + content + '</h1>').appendTo(ls.d.history);
                }, aeU: function () {
                $('<ul>').appendTo(ls.d.history);
                }, aU: function (content) {
                $('<ul><li>' + content + '</li></ul>').appendTo(ls.d.history);
                }, aL: function (content) {
                $('<li>' + content + '</li>').appendTo(ls.d.history.find('ul:last'));
                }, aUU: function (content) {
                $('<ul>').appendTo(ls.d.history.find('ul:last li:last'));
                }, aF: function (elem) {
                ls.d.history.find('ul:last li:last').hover(function () {
                elem.css({ border: '2px solid red', marginTop: parseInt(elem.css('margin-top')) - 2, marginLeft: parseInt(elem.css('margin-left')) - 2 });
                }, function () {
                elem.css({ border: '0px', marginTop: parseInt(elem.css('margin-top')) + 2, marginLeft: parseInt(elem.css('margin-left')) + 2 });
                });
                }, show: function () {
                if (!$('body').find('.ls-debug-console').length) {
                if (!ls.d.putData) {
                ls.d.aT('Init code');
                        ls.d.aeU();
                        for (var prop in ls.o) {
                ls.d.aL(prop + ': <strong>' + ls.o[prop] + '</strong>');
                }
                ls.d.aT('LayerSlider Content');
                        ls.d.aU('Number of slides found: <strong>' + $(el).find('.ls-slide').length + '</strong>');
                        $(el).find('.ls-inner .ls-slide, .ls-inner *[class*="ls-l"]').each(function () {
                if ($(this).hasClass('ls-slide')) {
                ls.d.aU('<strong>SLIDE ' + ($(this).index() + 1) + '</strong>');
                        ls.d.aUU();
                        ls.d.aL('<strong>SLIDE ' + ($(this).index() + 1) + ' properties:</strong><br><br>');
                }
                else {
                ls.d.aU('&nbsp;&nbsp;&nbsp;&nbsp;Layer ( ' + $(this).prop('tagName') + ' )');
                        ls.d.aF($(this));
                        ls.d.aUU();
                        ls.d.aL('<strong>' + $(this).prop('tagName') + ' layer properties:</strong><br><br>');
                        ls.d.aL('distance / class: <strong>' + $(this).attr('class') + '</strong>');
                }
                $.each($(this).data(), function (name, val) {
                ls.d.aL(name + ': <strong>' + val + '</strong>');
                });
                });
                        ls.d.putData = true;
                }
                var dc = $('<div>').addClass('ls-debug-console').css({ position: 'fixed', zIndex: '10000000000', top: '10px', right: '10px', width: '300px', padding: '20px', background: 'black', 'border-radius': '10px', height: $(window).height() - 60, opacity: 0, marginRight: 150 }).appendTo($('body')).css({ marginRight: 0, opacity: .9 }).click(function (e) {
                if (e.shiftKey && e.altKey) {
                $(this).remove();
                }
                });
                        var ds = $('<div>').css({ width: '100%', height: '100%', overflow: 'auto' }).appendTo(dc);
                        var dd = $('<div>').css({ width: '100%' }).appendTo(ds).append(ls.d.history);
                }
                }, hide: function () {
                $('body').find('.ls-debug-console').remove();
                } };
                        $(el).click(function (e) {
                if (e.shiftKey && e.altKey) {
                ls.d.show();
                }
                });
                };
                ls.load();
        };
        var lsConvertEasing = function (e) {
        var t;
                if (e.toLowerCase().indexOf('swing') !== - 1 || e.toLowerCase().indexOf('linear') !== - 1) {
        t = Linear.easeNone;
        }
        else if (e.toLowerCase().indexOf('easeinout') !== - 1) {
        var ee = e.toLowerCase().split('easeinout')[1];
                t = window[ee.charAt(0).toUpperCase() + ee.slice(1)].easeInOut;
        }
        else if (e.toLowerCase().indexOf('easeout') !== - 1) {
        var ee = e.toLowerCase().split('easeout')[1];
                t = window[ee.charAt(0).toUpperCase() + ee.slice(1)].easeOut;
        }
        else if (e.toLowerCase().indexOf('easein') !== - 1) {
        var ee = e.toLowerCase().split('easein')[1];
                t = window[ee.charAt(0).toUpperCase() + ee.slice(1)].easeIn;
        }
        return t;
        };
        var lsConvertTransition = function (t, e, type, undef) {
        if (typeof e === 'undefined') {
        var e = 'easeInOutQuart';
        }
        var tt = {};
                if (t.rotate !== undef) {
        tt.rotation = t.rotate;
        }
        if (t.rotateY !== undef) {
        tt.rotationY = t.rotateY;
        }
        if (t.rotateX !== undef) {
        tt.rotationX = t.rotateX;
        }
        if (type === 'after') {
        tt.scaleX = tt.scaleY = tt.scaleZ = 1;
        }
        else if (t.scale3d !== undef) {
        tt.scaleX = tt.scaleY = tt.scaleZ = t.scale3d;
        }
        if (t.delay) {
        tt.delay = type === 'after' ? t.delay / 1000 : t.delay;
        }
        tt.ease = lsConvertEasing(e);
                return tt;
        };
        var lsSupport3D = function (el) {
        var testEl = $('<div>'), s3d1 = false, s3d2 = false, properties = ['perspective', 'OPerspective', 'msPerspective', 'MozPerspective', 'WebkitPerspective'];
                transform = ['transformStyle', 'OTransformStyle', 'msTransformStyle', 'MozTransformStyle', 'WebkitTransformStyle'];
                for (var i = properties.length - 1; i >= 0; i--) {
        s3d1 = s3d1 ? s3d1 : testEl[0].style[properties[i]] != undefined;
        }
        ;
                for (var i = transform.length - 1; i >= 0; i--) {
        testEl.css('transform-style', 'preserve-3d');
                s3d2 = s3d2 ? s3d2 : testEl[0].style[transform[i]] == 'preserve-3d';
        }
        ;
                if (s3d1 && testEl[0].style[properties[4]] != undefined) {
        testEl.attr('id', 'ls-test3d').appendTo(el);
                s3d1 = testEl[0].offsetHeight === 3 && testEl[0].offsetLeft === 9;
                testEl.remove();
        }
        return (s3d1 && s3d2);
        };
        var lsOrderArray = function (x, y, dir) {
        var i = [];
                if (dir == 'forward') {
        for (var a = 0; a < x; a++) {
        for (var b = 0; b < y; b++) {
        i.push(a + b * x);
        }
        }
        }
        else {
        for (var a = x - 1; a > - 1; a--) {
        for (var b = y - 1; b > - 1; b--) {
        i.push(a + b * x);
        }
        }
        }
        return i;
        };
        var lsCountProp = function (obj) {
        var count = 0;
                for (var prop in obj) {
        if (obj.hasOwnProperty(prop)) {
        ++count;
        }
        }
        return count;
        };
        var lsBrowser = function () {
        uaMatch = function (ua) {
        ua = ua.toLowerCase();
                var match = /(chrome)[ \/]([\w.]+)/.exec(ua) || /(webkit)[ \/]([\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(ua) || /(msie) ([\w.]+)/.exec(ua) || ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua) || [];
                return { browser: match[1] || "", version: match[2] || "0" };
        };
                var matched = uaMatch(navigator.userAgent), browser = {};
                if (matched.browser) {
        browser[matched.browser] = true;
                browser.version = matched.version;
        }
        if (browser.chrome) {
        browser.webkit = true;
        }
        else if (browser.webkit) {
        browser.safari = true;
        }
        return browser;
        };
        lsPrefixes = function (obj, method) {
        var pfx = ['webkit', 'khtml', 'moz', 'ms', 'o', ''];
                var p = 0, m, t;
                while (p < pfx.length && !obj[m]) {
        m = method;
                if (pfx[p] == '') {
        m = m.substr(0, 1).toLowerCase() + m.substr(1);
        }
        m = pfx[p] + m;
                t = typeof obj[m];
                if (t != 'undefined') {
        pfx = [pfx[p]];
                return (t == 'function' ? obj[m]() : obj[m]);
        }
        p++;
        }
        };
        layerSlider.global = { version: '5.2.0', isMobile: function () {
        if (navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/webOS/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/iPod/i) || navigator.userAgent.match(/BlackBerry/i) || navigator.userAgent.match(/Windows Phone/i)) {
        return true;
        }
        else {
        return false;
        }
        }, isHideOn3D: function (el) {
        if (el.css('padding-bottom') == 'auto' || el.css('padding-bottom') == 'none' || el.css('padding-bottom') == 0 || el.css('padding-bottom') == '0px') {
        return true;
        }
        else {
        return false;
        }
        }, ie78: lsBrowser().msie && lsBrowser().version < 9 ? true : false, originalAutoStart: false, paused: false, pausedByVideo: false, autoSlideshow: false, isAnimating: false, layersNum: null, prevNext: 'next', slideTimer: null, sliderWidth: null, sliderHeight: null, slideDirections: { prev: { left: 'right', right: 'left', top: 'bottom', bottom: 'top' }, next: { left: 'left', right: 'right', top: 'top', bottom: 'bottom' } }, v: { d: 500, fo: 750, fi: 500 } };
        layerSlider.layerTransitions = { offsetXIn: 80, offsetYIn: 0, durationIn: 1000, delayIn: 0, easingIn: 'easeInOutQuint', fadeIn: true, rotateIn: 0, rotateXIn: 0, rotateYIn: 0, scaleIn: 1, scaleXIn: 1, scaleYIn: 1, skewXIn: 0, skewYIn: 0, transformOriginIn: ['50%', '50%', '0'], perspectiveIn: 500, splitIn: '', staggerIn: 0, offsetXOut: - 80, offsetYOut: 0, durationOut: 400, showUntil: 0, easingOut: 'easeInOutQuint', fadeOut: true, rotateOut: 0, rotateXOut: 0, rotateYOut: 0, scaleOut: 1, scaleXOut: 1, scaleYOut: 1, skewXOut: 0, skewYOut: 0, transformOriginOut: ['50%', '50%', '0'], perspectiveOut: 500, splitOut: '', staggerOut: 0 };
        layerSlider.slideTransitions = { slideDelay: 4000 };
        layerSlider.options = { responsive: true, responsiveUnder: 0, layersContainer: 0, autoStart: true, startOnScroll: true, pauseOnHover: true, firstSlide: 1, animateFirstSlide: true, sliderFadeInDuration: 350, loops: 0, forceLoopNum: true, twoWaySlideshow: false, randomSlideshow: false, skin: 'v5', skinsPath: '/layerslider/skins/', globalBGColor: 'transparent', globalBGImage: false, navPrevNext: true, navStartStop: true, navButtons: true, keybNav: true, touchNav: true, hoverPrevNext: true, hoverBottomNav: false, showBarTimer: false, showCircleTimer: true, thumbnailNavigation: 'hover', tnContainerWidth: '60%', tnWidth: 100, tnHeight: 60, tnActiveOpacity: 35, tnInactiveOpacity: 100, autoPlayVideos: true, autoPauseSlideshow: 'auto', youtubePreview: 'maxresdefault.jpg', imgPreload: true, lazyLoad: true, yourLogo: false, yourLogoStyle: 'left: -10px; top: -10px;', yourLogoLink: false, yourLogoTarget: '_self', optimizeForMobile: true, optimizeForIE78: true, cbInit: function (element) {
        }, cbStart: function (data) {
        }, cbStop: function (data) {
        }, cbPause: function (data) {
        }, cbAnimStart: function (data) {
        }, cbAnimStop: function (data) {
        }, cbPrev: function (data) {
        }, cbNext: function (data) {
        }, slideDelay: 4000, slideDirection: 'right', parallaxIn: .45, parallaxOut: .45, durationIn: 1000, durationOut: 1000, easingIn: 'easeInOutQuint', easingOut: 'easeInOutQuint', delayIn: 0, delayOut: 0 };
        })(window.jq183 || jQuery);
        var layerSliderTransitions = { t2d: [{ name: 'Sliding from right', rows: 1, cols: 1, tile: { delay: 0, sequence: 'forward' }, transition: { type: 'slide', easing: 'easeInOutQuad', duration: 1000, direction: 'left' } }, { name: 'Sliding from left', rows: 1, cols: 1, tile: { delay: 0, sequence: 'forward' }, transition: { type: 'slide', easing: 'easeInOutQuad', duration: 1000, direction: 'right' } }, { name: 'Sliding from bottom', rows: 1, cols: 1, tile: { delay: 0, sequence: 'forward' }, transition: { type: 'slide', easing: 'easeInOutQuad', duration: 1000, direction: 'top' } }, { name: 'Sliding from top', rows: 1, cols: 1, tile: { delay: 0, sequence: 'forward' }, transition: { type: 'slide', easing: 'easeInOutQuad', duration: 1000, direction: 'bottom' } }, { name: 'Crossfading', rows: 1, cols: 1, tile: { delay: 0, sequence: 'forward' }, transition: { type: 'fade', easing: 'easeInOutQuad', duration: 1000, direction: 'left' } }, { name: 'Fading tiles forward', rows: [2, 4], cols: [4, 7], tile: { delay: 30, sequence: 'forward' }, transition: { type: 'fade', easing: 'easeOutQuart', duration: 1000, direction: 'left' } }, { name: 'Fading tiles reverse', rows: [2, 4], cols: [4, 7], tile: { delay: 30, sequence: 'reverse' }, transition: { type: 'fade', easing: 'easeOutQuart', duration: 1000, direction: 'left' } }, { name: 'Fading tiles col-forward', rows: [2, 4], cols: [4, 7], tile: { delay: 30, sequence: 'col-forward' }, transition: { type: 'fade', easing: 'easeOutQuart', duration: 1000, direction: 'left' } }, { name: 'Fading tiles col-reverse', rows: [2, 4], cols: [4, 7], tile: { delay: 30, sequence: 'col-reverse' }, transition: { type: 'fade', easing: 'easeOutQuart', duration: 1000, direction: 'left' } }, { name: 'Fading tiles (random)', rows: [2, 4], cols: [4, 7], tile: { delay: 30, sequence: 'random' }, transition: { type: 'fade', easing: 'easeOutQuart', duration: 1000, direction: 'left' } }, { name: 'Smooth fading from right', rows: 1, cols: 35, tile: { delay: 25, sequence: 'reverse' }, transition: { type: 'fade', easing: 'linear', duration: 750, direction: 'left' } }, { name: 'Smooth fading from left', rows: 1, cols: 35, tile: { delay: 25, sequence: 'forward' }, transition: { type: 'fade', easing: 'easeInOutQuart', duration: 750, direction: 'left' } }, { name: 'Smooth fading from bottom', rows: 35, cols: 1, tile: { delay: 25, sequence: 'col-reverse' }, transition: { type: 'fade', easing: 'easeInOutQuart', duration: 750, direction: 'left' } }, { name: 'Smooth fading from top', rows: 35, cols: 1, tile: { delay: 25, sequence: 'col-forward' }, transition: { type: 'fade', easing: 'easeInOutQuart', duration: 750, direction: 'left' } }, { name: 'Smooth sliding from right', rows: 1, cols: 25, tile: { delay: 30, sequence: 'reverse' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 350, direction: 'left' } }, { name: 'Smooth sliding from left', rows: 1, cols: 25, tile: { delay: 30, sequence: 'forward' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 350, direction: 'right' } }, { name: 'Smooth sliging from bottom', rows: 25, cols: 1, tile: { delay: 30, sequence: 'col-reverse' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 350, direction: 'top' } }, { name: 'Smooth sliding from top', rows: 25, cols: 1, tile: { delay: 30, sequence: 'col-forward' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 350, direction: 'bottom' } }, { name: 'Sliding tiles to right (random)', rows: [2, 4], cols: [4, 7], tile: { delay: 50, sequence: 'random' }, transition: { type: 'slide', easing: 'easeOutQuart', duration: 500, direction: 'right' } }, { name: 'Sliding tiles to left (random)', rows: [2, 4], cols: [4, 7], tile: { delay: 50, sequence: 'random' }, transition: { type: 'slide', easing: 'easeOutQuart', duration: 500, direction: 'left' } }, { name: 'Sliding tiles to bottom (random)', rows: [2, 4], cols: [4, 7], tile: { delay: 50, sequence: 'random' }, transition: { type: 'slide', easing: 'easeOutQuart', duration: 500, direction: 'bottom' } }, { name: 'Sliding tiles to top (random)', rows: [2, 4], cols: [4, 7], tile: { delay: 50, sequence: 'random' }, transition: { type: 'slide', easing: 'easeOutQuart', duration: 500, direction: 'top' } }, { name: 'Sliding random tiles to random directions', rows: [2, 4], cols: [4, 7], tile: { delay: 50, sequence: 'random' }, transition: { type: 'slide', easing: 'easeOutQuart', duration: 500, direction: 'random' } }, { name: 'Sliding rows to right (forward)', rows: [7, 11], cols: 1, tile: { delay: 100, sequence: 'forward' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 600, direction: 'right' } }, { name: 'Sliding rows to right (reverse)', rows: [7, 11], cols: 1, tile: { delay: 100, sequence: 'reverse' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 600, direction: 'right' } }, { name: 'Sliding rows to right (random)', rows: [7, 11], cols: 1, tile: { delay: 100, sequence: 'random' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 600, direction: 'right' } }, { name: 'Sliding rows to left (forward)', rows: [7, 11], cols: 1, tile: { delay: 100, sequence: 'forward' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 600, direction: 'left' } }, { name: 'Sliding rows to left (reverse)', rows: [7, 11], cols: 1, tile: { delay: 100, sequence: 'reverse' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 600, direction: 'left' } }, { name: 'Sliding rows to left (random)', rows: [7, 11], cols: 1, tile: { delay: 100, sequence: 'random' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 600, direction: 'left' } }, { name: 'Sliding rows from top to bottom (forward)', rows: [7, 11], cols: 1, tile: { delay: 100, sequence: 'forward' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 600, direction: 'bottom' } }, { name: 'Sliding rows from top to bottom (random)', rows: [7, 11], cols: 1, tile: { delay: 100, sequence: 'random' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 600, direction: 'bottom' } }, { name: 'Sliding rows from bottom to top (reverse)', rows: [7, 11], cols: 1, tile: { delay: 100, sequence: 'reverse' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 600, direction: 'top' } }, { name: 'Sliding rows from bottom to top (random)', rows: [7, 11], cols: 1, tile: { delay: 100, sequence: 'random' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 600, direction: 'top' } }, { name: 'Sliding columns to bottom (forward)', rows: 1, cols: [12, 16], tile: { delay: 75, sequence: 'forward' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 600, direction: 'bottom' } }, { name: 'Sliding columns to bottom (reverse)', rows: 1, cols: [12, 16], tile: { delay: 75, sequence: 'reverse' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 600, direction: 'bottom' } }, { name: 'Sliding columns to bottom (random)', rows: 1, cols: [12, 16], tile: { delay: 75, sequence: 'random' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 600, direction: 'bottom' } }, { name: 'Sliding columns to top (forward)', rows: 1, cols: [12, 16], tile: { delay: 75, sequence: 'forward' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 600, direction: 'top' } }, { name: 'Sliding columns to top (reverse)', rows: 1, cols: [12, 16], tile: { delay: 75, sequence: 'reverse' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 600, direction: 'top' } }, { name: 'Sliding columns to top (random)', rows: 1, cols: [12, 16], tile: { delay: 75, sequence: 'random' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 600, direction: 'top' } }, { name: 'Sliding columns from left to right (forward)', rows: 1, cols: [12, 16], tile: { delay: 75, sequence: 'forward' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 600, direction: 'right' } }, { name: 'Sliding columns from left to right (random)', rows: 1, cols: [12, 16], tile: { delay: 75, sequence: 'random' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 600, direction: 'right' } }, { name: 'Sliding columns from right to left (reverse)', rows: 1, cols: [12, 16], tile: { delay: 75, sequence: 'reverse' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 600, direction: 'left' } }, { name: 'Sliding columns from right to left (random)', rows: 1, cols: [12, 16], tile: { delay: 75, sequence: 'random' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 600, direction: 'left' } }, { name: 'Fading and sliding tiles to right (random)', rows: [2, 4], cols: [4, 7], tile: { delay: 50, sequence: 'random' }, transition: { type: 'mixed', easing: 'easeOutQuart', duration: 500, direction: 'right' } }, { name: 'Fading and sliding tiles to left (random)', rows: [2, 4], cols: [4, 7], tile: { delay: 50, sequence: 'random' }, transition: { type: 'mixed', easing: 'easeOutQuart', duration: 500, direction: 'left' } }, { name: 'Fading and sliding tiles to bottom (random)', rows: [2, 4], cols: [4, 7], tile: { delay: 50, sequence: 'random' }, transition: { type: 'mixed', easing: 'easeOutQuart', duration: 500, direction: 'bottom' } }, { name: 'Fading and sliding tiles to top (random)', rows: [2, 4], cols: [4, 7], tile: { delay: 50, sequence: 'random' }, transition: { type: 'mixed', easing: 'easeOutQuart', duration: 500, direction: 'top' } }, { name: 'Fading and sliding random tiles to random directions', rows: [2, 4], cols: [4, 7], tile: { delay: 50, sequence: 'random' }, transition: { type: 'mixed', easing: 'easeOutQuart', duration: 500, direction: 'random' } }, { name: 'Fading and sliding tiles from top-left (forward)', rows: [2, 4], cols: [4, 7], tile: { delay: 50, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeOutQuart', duration: 500, direction: 'topleft' } }, { name: 'Fading and sliding tiles from bottom-right (reverse)', rows: [2, 4], cols: [4, 7], tile: { delay: 50, sequence: 'reverse' }, transition: { type: 'mixed', easing: 'easeOutQuart', duration: 500, direction: 'bottomright' } }, { name: 'Fading and sliding tiles from top-right (random)', rows: [2, 4], cols: [4, 7], tile: { delay: 50, sequence: 'random' }, transition: { type: 'mixed', easing: 'easeOutQuart', duration: 500, direction: 'topright' } }, { name: 'Fading and sliding tiles from bottom-left (random)', rows: [2, 4], cols: [4, 7], tile: { delay: 50, sequence: 'random' }, transition: { type: 'mixed', easing: 'easeOutQuart', duration: 500, direction: 'bottomleft' } }, { name: 'Fading and sliding rows to right (forward)', rows: [7, 11], cols: 1, tile: { delay: 100, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeInOutQuart', duration: 600, direction: 'right' } }, { name: 'Fading and sliding rows to right (reverse)', rows: [7, 11], cols: 1, tile: { delay: 100, sequence: 'reverse' }, transition: { type: 'mixed', easing: 'easeInOutQuart', duration: 600, direction: 'right' } }, { name: 'Fading and sliding rows to right (random)', rows: [7, 11], cols: 1, tile: { delay: 100, sequence: 'random' }, transition: { type: 'mixed', easing: 'easeInOutQuart', duration: 600, direction: 'right' } }, { name: 'Fading and sliding rows to left (forward)', rows: [7, 11], cols: 1, tile: { delay: 100, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeInOutQuart', duration: 600, direction: 'left' } }, { name: 'Fading and sliding rows to left (reverse)', rows: [7, 11], cols: 1, tile: { delay: 100, sequence: 'reverse' }, transition: { type: 'mixed', easing: 'easeInOutQuart', duration: 600, direction: 'left' } }, { name: 'Fading and sliding rows to left (random)', rows: [7, 11], cols: 1, tile: { delay: 100, sequence: 'random' }, transition: { type: 'mixed', easing: 'easeInOutQuart', duration: 600, direction: 'left' } }, { name: 'Fading and sliding rows from top to bottom (forward)', rows: [7, 11], cols: 1, tile: { delay: 100, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeInOutQuart', duration: 600, direction: 'bottom' } }, { name: 'Fading and sliding rows from top to bottom (random)', rows: [7, 11], cols: 1, tile: { delay: 100, sequence: 'random' }, transition: { type: 'mixed', easing: 'easeInOutQuart', duration: 600, direction: 'bottom' } }, { name: 'Fading and sliding rows from bottom to top (reverse)', rows: [7, 11], cols: 1, tile: { delay: 100, sequence: 'reverse' }, transition: { type: 'mixed', easing: 'easeInOutQuart', duration: 600, direction: 'top' } }, { name: 'Fading and sliding rows from bottom to top (random)', rows: [7, 11], cols: 1, tile: { delay: 100, sequence: 'random' }, transition: { type: 'mixed', easing: 'easeInOutQuart', duration: 600, direction: 'top' } }, { name: 'Fading and sliding columns to bottom (forward)', rows: 1, cols: [12, 16], tile: { delay: 75, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeInOutQuart', duration: 600, direction: 'bottom' } }, { name: 'Fading and sliding columns to bottom (reverse)', rows: 1, cols: [12, 16], tile: { delay: 75, sequence: 'reverse' }, transition: { type: 'mixed', easing: 'easeInOutQuart', duration: 600, direction: 'bottom' } }, { name: 'Fading and sliding columns to bottom (random)', rows: 1, cols: [12, 16], tile: { delay: 75, sequence: 'random' }, transition: { type: 'mixed', easing: 'easeInOutQuart', duration: 600, direction: 'bottom' } }, { name: 'Fading and sliding columns to top (forward)', rows: 1, cols: [12, 16], tile: { delay: 75, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeInOutQuart', duration: 600, direction: 'top' } }, { name: 'Fading and sliding columns to top (reverse)', rows: 1, cols: [12, 16], tile: { delay: 75, sequence: 'reverse' }, transition: { type: 'mixed', easing: 'easeInOutQuart', duration: 600, direction: 'top' } }, { name: 'Fading and sliding columns to top (random)', rows: 1, cols: [12, 16], tile: { delay: 75, sequence: 'random' }, transition: { type: 'mixed', easing: 'easeInOutQuart', duration: 600, direction: 'top' } }, { name: 'Fading and sliding columns from left to right (forward)', rows: 1, cols: [12, 16], tile: { delay: 75, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeInOutQuart', duration: 600, direction: 'right' } }, { name: 'Fading and sliding columns from left to right (random)', rows: 1, cols: [12, 16], tile: { delay: 75, sequence: 'random' }, transition: { type: 'mixed', easing: 'easeInOutQuart', duration: 600, direction: 'right' } }, { name: 'Fading and sliding columns from right to left (reverse)', rows: 1, cols: [12, 16], tile: { delay: 75, sequence: 'reverse' }, transition: { type: 'mixed', easing: 'easeInOutQuart', duration: 600, direction: 'left' } }, { name: 'Fading and sliding columns from right to left (random)', rows: 1, cols: [12, 16], tile: { delay: 75, sequence: 'random' }, transition: { type: 'mixed', easing: 'easeInOutQuart', duration: 600, direction: 'left' } }, { name: 'Carousel', rows: 1, cols: 1, tile: { delay: 0, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeInOutQuad', duration: 750, direction: 'left', scale: .5 } }, { name: 'Carousel rows', rows: 4, cols: 1, tile: { delay: 50, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeInOutQuad', duration: 750, direction: 'left', scale: .5 } }, { name: 'Carousel cols', rows: 1, cols: 4, tile: { delay: 50, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeInOutQuad', duration: 750, direction: 'left', scale: .5 } }, { name: 'Carousel tiles horizontal', rows: 3, cols: 4, tile: { delay: 35, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeInOutQuad', duration: 750, direction: 'left', scale: .5, rotateY: 90 } }, { name: 'Carousel tiles vertical', rows: 3, cols: 4, tile: { delay: 35, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeInOutQuad', duration: 750, direction: 'top', scale: .5, rotateX: - 90 } }, { name: 'Carousel-mirror tiles horizontal', rows: 3, cols: 4, tile: { delay: 15, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeInOutQuad', duration: 750, direction: 'left', scale: .5, rotateY: 90 } }, { name: 'Carousel-mirror tiles vertical', rows: 3, cols: 4, tile: { delay: 15, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeInOutQuad', duration: 750, direction: 'top', scale: .5, rotateX: - 90 } }, { name: 'Carousel mirror rows', rows: 4, cols: 1, tile: { delay: 50, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeInOutQuad', duration: 750, direction: 'right', scale: .5 } }, { name: 'Carousel mirror cols', rows: 1, cols: 4, tile: { delay: 50, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeInOutQuad', duration: 750, direction: 'left', scale: .5 } }, { name: 'Turning tile from left', rows: 1, cols: 1, tile: { delay: 0, sequence: 'forward' }, transition: { type: 'slide', easing: 'easeOutQuart', duration: 750, direction: 'right', rotateY: 90 } }, { name: 'Turning tile from right', rows: 1, cols: 1, tile: { delay: 0, sequence: 'forward' }, transition: { type: 'slide', easing: 'easeOutQuart', duration: 750, direction: 'left', rotateY: - 90 } }, { name: 'Turning tile from top', rows: 1, cols: 1, tile: { delay: 0, sequence: 'forward' }, transition: { type: 'slide', easing: 'easeOutQuart', duration: 750, direction: 'bottom', rotateX: - 90 } }, { name: 'Turning tile from bottom', rows: 1, cols: 1, tile: { delay: 0, sequence: 'forward' }, transition: { type: 'slide', easing: 'easeOutQuart', duration: 750, direction: 'top', rotateX: 90 } }, { name: 'Turning tiles from left', rows: [3, 4], cols: [3, 4], tile: { delay: 55, sequence: 'forward' }, transition: { type: 'fade', easing: 'easeOutQuart', duration: 750, direction: 'left', rotateY: 90 } }, { name: 'Turning tiles from right', rows: [3, 4], cols: [3, 4], tile: { delay: 55, sequence: 'reverse' }, transition: { type: 'fade', easing: 'easeOutQuart', duration: 750, direction: 'left', rotateY: - 90 } }, { name: 'Turning tiles from top', rows: [3, 4], cols: [3, 4], tile: { delay: 55, sequence: 'forward' }, transition: { type: 'fade', easing: 'easeOutQuart', duration: 750, direction: 'left', rotateX: - 90 } }, { name: 'Turning tiles from bottom', rows: [3, 4], cols: [3, 4], tile: { delay: 55, sequence: 'reverse' }, transition: { type: 'fade', easing: 'easeOutQuart', duration: 750, direction: 'left', rotateX: 90 } }, { name: 'Turning rows from top', rows: [6, 12], cols: 1, tile: { delay: 55, sequence: 'forward' }, transition: { type: 'fade', easing: 'easeOutQuart', duration: 750, direction: 'left', rotateX: 90 } }, { name: 'Turning rows from bottom', rows: [6, 12], cols: 1, tile: { delay: 55, sequence: 'reverse' }, transition: { type: 'fade', easing: 'easeOutQuart', duration: 750, direction: 'left', rotateX: - 90 } }, { name: 'Turning cols from left', rows: 1, cols: [6, 12], tile: { delay: 55, sequence: 'forward' }, transition: { type: 'fade', easing: 'easeOutQuart', duration: 750, direction: 'left', rotateY: - 90 } }, { name: 'Turning cols from right', rows: 1, cols: [6, 12], tile: { delay: 55, sequence: 'reverse' }, transition: { type: 'fade', easing: 'easeOutQuart', duration: 750, direction: 'left', rotateY: 90 } }, { name: 'Flying rows from left', rows: [3, 10], cols: 1, tile: { delay: 55, sequence: 'forward' }, transition: { type: 'fade', easing: 'easeOutQuart', duration: 750, direction: 'left', rotateY: 90 } }, { name: 'Flying rows from right', rows: [3, 10], cols: 1, tile: { delay: 55, sequence: 'reverse' }, transition: { type: 'fade', easing: 'easeOutQuart', duration: 750, direction: 'left', rotateY: - 90 } }, { name: 'Flying cols from top', rows: 1, cols: [3, 10], tile: { delay: 55, sequence: 'forward' }, transition: { type: 'fade', easing: 'easeOutQuart', duration: 750, direction: 'left', rotateX: - 90 } }, { name: 'Flying cols from bottom', rows: 1, cols: [3, 10], tile: { delay: 55, sequence: 'reverse' }, transition: { type: 'fade', easing: 'easeOutQuart', duration: 750, direction: 'left', rotateX: 90 } }, { name: 'Flying and rotating tile from left', rows: 1, cols: 1, tile: { delay: 75, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeOutQuart', duration: 750, direction: 'right', scale: .1, rotate: - 90, rotateY: 90 } }, { name: 'Flying and rotating tile from right', rows: 1, cols: 1, tile: { delay: 75, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeOutQuart', duration: 750, direction: 'left', scale: .1, rotate: 90, rotateY: - 90 } }, { name: 'Flying and rotating tiles from left', rows: [3, 4], cols: [3, 4], tile: { delay: 55, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeOutQuart', duration: 750, direction: 'right', rotate: - 45 } }, { name: 'Flying and rotating tiles from right', rows: [3, 4], cols: [3, 4], tile: { delay: 55, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeOutQuart', duration: 750, direction: 'left', rotate: - 45 } }, { name: 'Flying and rotating tiles from random', rows: [3, 4], cols: [3, 4], tile: { delay: 55, sequence: 'random' }, transition: { type: 'mixed', easing: 'easeOutQuart', duration: 750, direction: 'random', rotate: - 45 } }, { name: 'Scaling tile in', rows: 1, cols: 1, tile: { delay: 0, sequence: 'forward' }, transition: { type: 'fade', easing: 'easeOutQuart', duration: 1500, direction: 'left', scale: .8 } }, { name: 'Scaling tile from out', rows: 1, cols: 1, tile: { delay: 0, sequence: 'forward' }, transition: { type: 'fade', easing: 'easeInOutQuart', duration: 1500, direction: 'left', scale: 1.2 } }, { name: 'Scaling tiles random', rows: [3, 4], cols: [3, 4], tile: { delay: 35, sequence: 'random' }, transition: { type: 'fade', easing: 'easeOutQuart', duration: 750, direction: 'left', scale: .1 } }, { name: 'Scaling tiles from out random', rows: [3, 4], cols: [3, 4], tile: { delay: 35, sequence: 'random' }, transition: { type: 'fade', easing: 'easeOutQuart', duration: 750, direction: 'left', scale: 2 } }, { name: 'Scaling in and rotating tiles random', rows: [3, 4], cols: [3, 4], tile: { delay: 35, sequence: 'random' }, transition: { type: 'fade', easing: 'easeOutQuart', duration: 750, direction: 'left', scale: .1, rotate: 90 } }, { name: 'Scaling and rotating tiles from out random', rows: [3, 4], cols: [3, 4], tile: { delay: 35, sequence: 'random' }, transition: { type: 'fade', easing: 'easeOutQuart', duration: 750, direction: 'left', scale: 2, rotate: - 90 } }, { name: 'Mirror-sliding tiles diagonal', rows: 3, cols: 4, tile: { delay: 15, sequence: 'forward' }, transition: { type: 'slide', easing: 'easeInOutQuart', duration: 850, direction: 'topright' } }, { name: 'Mirror-sliding rows horizontal', rows: 6, cols: 1, tile: { delay: 0, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeOutQuart', duration: 750, direction: 'left' } }, { name: 'Mirror-sliding rows vertical', rows: 6, cols: 1, tile: { delay: 0, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeOutQuart', duration: 750, direction: 'top' } }, { name: 'Mirror-sliding cols horizontal', rows: 1, cols: 8, tile: { delay: 0, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeOutQuart', duration: 750, direction: 'left' } }, { name: 'Mirror-sliding cols vertical', rows: 1, cols: 8, tile: { delay: 0, sequence: 'forward' }, transition: { type: 'mixed', easing: 'easeOutQuart', duration: 750, direction: 'top' } }], t3d: [{ name: 'Spinning tile to right (180&#176;)', rows: 1, cols: 1, tile: { delay: 75, sequence: 'forward' }, animation: { transition: { rotateY: 91 }, easing: 'easeInQuart', duration: 1000, direction: 'horizontal' }, after: { transition: { rotateY: 180 }, easing: 'easeOutQuart', duration: 1000, direction: 'horizontal' } }, { name: 'Spinning tile to left (180&#176;)', rows: 1, cols: 1, tile: { delay: 75, sequence: 'forward' }, animation: { transition: { rotateY: - 91 }, easing: 'easeInQuart', duration: 1000, direction: 'horizontal' }, after: { transition: { rotateY: - 180 }, easing: 'easeOutQuart', duration: 1000, direction: 'horizontal' } }, { name: 'Spinning tile to bottom (180&#176;)', rows: 1, cols: 1, tile: { delay: 75, sequence: 'forward' }, animation: { transition: { rotateX: - 91 }, easing: 'easeInQuart', duration: 800, direction: 'vertical' }, after: { transition: { rotateX: - 180 }, easing: 'easeOutQuart', duration: 800, direction: 'vertical' } }, { name: 'Spinning tile to top (180&#176;)', rows: 1, cols: 1, tile: { delay: 75, sequence: 'forward' }, animation: { transition: { rotateX: 91 }, easing: 'easeInQuart', duration: 800, direction: 'vertical' }, after: { transition: { rotateX: 180 }, easing: 'easeOutQuart', duration: 800, direction: 'vertical' } }, { name: 'Spinning tiles to right (180&#176;)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'forward' }, animation: { transition: { rotateY: 180 }, easing: 'easeInOutQuart', duration: 1000, direction: 'horizontal' } }, { name: 'Spinning tiles to left (180&#176;)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'reverse' }, animation: { transition: { rotateY: - 180 }, easing: 'easeInOutQuart', duration: 1000, direction: 'horizontal' } }, { name: 'Spinning tiles to bottom (180&#176;)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'col-forward' }, animation: { transition: { rotateX: - 180 }, easing: 'easeInOutQuart', duration: 1000, direction: 'vertical' } }, { name: 'Spinning tiles to top (180&#176;)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'col-reverse' }, animation: { transition: { rotateX: 180 }, easing: 'easeInOutQuart', duration: 1000, direction: 'vertical' } }, { name: 'Horizontal spinning tiles random (180&#176;)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'random' }, animation: { transition: { rotateY: 180 }, easing: 'easeInOutQuart', duration: 1300, direction: 'horizontal' } }, { name: 'Vertical spinning tiles random (180&#176;)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'random' }, animation: { transition: { rotateX: 180 }, easing: 'easeInOutQuart', duration: 1300, direction: 'vertical' } }, { name: 'Scaling and spinning tiles to right (180&#176;)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'forward' }, before: { transition: { scale3d: .95 }, duration: 450, easing: 'easeInOutQuint' }, animation: { transition: { rotateY: 180 }, easing: 'easeInOutBack', duration: 1000, direction: 'horizontal' }, after: { duration: 350, easing: 'easeInOutBack' } }, { name: 'Scaling and spinning tiles to left (180&#176;)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'reverse' }, before: { transition: { scale3d: .95 }, duration: 450, easing: 'easeInOutQuint' }, animation: { transition: { rotateY: - 180 }, easing: 'easeInOutBack', duration: 1000, direction: 'horizontal' }, after: { duration: 350, easing: 'easeInOutBack' } }, { name: 'Scaling and spinning tiles to bottom (180&#176;)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'col-forward' }, before: { transition: { scale3d: .95 }, duration: 450, easing: 'easeInOutQuint' }, animation: { transition: { rotateX: - 180 }, easing: 'easeInOutBack', duration: 1000, direction: 'vertical' }, after: { duration: 350, easing: 'easeInOutBack' } }, { name: 'Scaling and spinning tiles to top (180&#176;)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'col-reverse' }, before: { transition: { scale3d: .95 }, duration: 450, easing: 'easeInOutQuint' }, animation: { transition: { rotateX: 180 }, easing: 'easeInOutBack', duration: 1000, direction: 'vertical' }, after: { duration: 350, easing: 'easeInOutBack' } }, { name: 'Scaling and horizontal spinning tiles random (180&#176;)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'random' }, before: { transition: { scale3d: .95, rotateX: 30 }, duration: 450, easing: 'easeInOutQuint' }, animation: { transition: { rotateY: 180, rotateX: - 30 }, easing: 'easeInOutBack', duration: 1300, direction: 'horizontal' }, after: { transition: { rotateX: 0 }, duration: 350, easing: 'easeInOutBack' } }, { name: 'Scaling and vertical spinning tiles random (180&#176;)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'random' }, before: { transition: { scale3d: .95, rotateY: - 15 }, duration: 450, easing: 'easeInOutQuint' }, animation: { transition: { rotateX: 180, rotateY: 15 }, easing: 'easeInOutBack', duration: 1300, direction: 'vertical' }, after: { transition: { rotateY: 0 }, duration: 350, easing: 'easeInOutBack' } }, { name: 'Spinning rows to right (180&#176;)', rows: [5, 9], cols: 1, tile: { delay: 75, sequence: 'forward' }, animation: { transition: { rotateY: 180 }, easing: 'easeInOutQuart', duration: 1500, direction: 'horizontal' } }, { name: 'Spinning rows to left (180&#176;)', rows: [5, 9], cols: 1, tile: { delay: 75, sequence: 'forward' }, animation: { transition: { rotateY: - 180 }, easing: 'easeInOutQuart', duration: 1500, direction: 'horizontal' } }, { name: 'Spinning rows to bottom (180&#176;)', rows: [5, 9], cols: 1, tile: { delay: 75, sequence: 'forward' }, animation: { transition: { rotateX: - 180 }, easing: 'easeInOutQuart', duration: 1000, direction: 'vertical' } }, { name: 'Spinning rows to top (180&#176;)', rows: [5, 9], cols: 1, tile: { delay: 75, sequence: 'reverse' }, animation: { transition: { rotateX: 180 }, easing: 'easeInOutQuart', duration: 1000, direction: 'vertical' } }, { name: 'Horizontal spinning rows random (180&#176;)', rows: [5, 9], cols: 1, tile: { delay: 75, sequence: 'random' }, animation: { transition: { rotateY: 180 }, easing: 'easeInOutQuart', duration: 1500, direction: 'horizontal' } }, { name: 'Vertical spinning rows random (180&#176;)', rows: [5, 9], cols: 1, tile: { delay: 75, sequence: 'random' }, animation: { transition: { rotateX: - 180 }, easing: 'easeInOutQuart', duration: 1500, direction: 'vertical' } }, { name: 'Vertical spinning rows random (540&#176;)', rows: [3, 7], cols: 1, tile: { delay: 150, sequence: 'random' }, animation: { transition: { rotateX: - 540 }, easing: 'easeInOutQuart', duration: 2000, direction: 'vertical' } }, { name: 'Scaling and spinning rows to right (180&#176;)', rows: [5, 9], cols: 1, tile: { delay: 55, sequence: 'forward' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateY: 180 }, easing: 'easeInOutBack', duration: 1200, direction: 'horizontal' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Scaling and spinning rows to left (180&#176;)', rows: [5, 9], cols: 1, tile: { delay: 55, sequence: 'reverse' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateY: - 180 }, easing: 'easeInOutBack', duration: 1200, direction: 'horizontal' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Scaling and spinning rows to bottom (180&#176;)', rows: [5, 9], cols: 1, tile: { delay: 55, sequence: 'forward' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateX: - 180 }, easing: 'easeInOutQuart', duration: 600, direction: 'vertical' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Scaling and spinning rows to top (180&#176;)', rows: [5, 9], cols: 1, tile: { delay: 55, sequence: 'reverse' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateX: 180 }, easing: 'easeInOutQuart', duration: 600, direction: 'vertical' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Scaling and horizontal spinning rows random (180&#176;)', rows: [5, 9], cols: 1, tile: { delay: 55, sequence: 'random' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateY: 180 }, easing: 'easeInOutBack', duration: 1200, direction: 'horizontal' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Scaling and vertical spinning rows random (180&#176;)', rows: [5, 9], cols: 1, tile: { delay: 55, sequence: 'random' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateX: - 180 }, easing: 'easeInOutBack', duration: 600, direction: 'vertical' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Spinning columns to right (180&#176;)', rows: 1, cols: [5, 9], tile: { delay: 75, sequence: 'forward' }, animation: { transition: { rotateY: 180 }, easing: 'easeInOutQuart', duration: 1500, direction: 'horizontal' } }, { name: 'Spinning columns to left (180&#176;)', rows: 1, cols: [5, 9], tile: { delay: 75, sequence: 'forward' }, animation: { transition: { rotateY: - 180 }, easing: 'easeInOutQuart', duration: 1500, direction: 'horizontal' } }, { name: 'Spinning columns to bottom (180&#176;)', rows: 1, cols: [5, 9], tile: { delay: 75, sequence: 'forward' }, animation: { transition: { rotateX: - 180 }, easing: 'easeInOutQuart', duration: 1000, direction: 'vertical' } }, { name: 'Spinning columns to top (180&#176;)', rows: 1, cols: [5, 9], tile: { delay: 75, sequence: 'reverse' }, animation: { transition: { rotateX: 180 }, easing: 'easeInOutQuart', duration: 1000, direction: 'vertical' } }, { name: 'Horizontal spinning columns random (180&#176;)', rows: 1, cols: [5, 9], tile: { delay: 75, sequence: 'random' }, animation: { transition: { rotateY: 180 }, easing: 'easeInOutQuart', duration: 1500, direction: 'horizontal' } }, { name: 'Vertical spinning columns random (180&#176;)', rows: 1, cols: [5, 9], tile: { delay: 75, sequence: 'random' }, animation: { transition: { rotateX: - 180 }, easing: 'easeInOutQuart', duration: 1500, direction: 'vertical' } }, { name: 'Horizontal spinning columns random (540&#176;)', rows: 1, cols: [4, 9], tile: { delay: 150, sequence: 'random' }, animation: { transition: { rotateY: 540 }, easing: 'easeInOutQuart', duration: 2000, direction: 'horizontal' } }, { name: 'Scaling and spinning columns to right (180&#176;)', rows: 1, cols: [7, 11], tile: { delay: 55, sequence: 'forward' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateY: 180 }, easing: 'easeInOutQuart', duration: 600, direction: 'horizontal' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Scaling and spinning columns to left (180&#176;)', rows: 1, cols: [7, 11], tile: { delay: 55, sequence: 'reverse' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateY: - 180 }, easing: 'easeInOutQuart', duration: 600, direction: 'horizontal' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Scaling and spinning columns to bottom (180&#176;)', rows: 1, cols: [7, 11], tile: { delay: 55, sequence: 'forward' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateX: - 180 }, easing: 'easeInOutBack', duration: 1200, direction: 'vertical' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Scaling and spinning columns to top (180&#176;)', rows: 1, cols: [7, 11], tile: { delay: 75, sequence: 'reverse' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateX: 180 }, easing: 'easeInOutBack', duration: 1200, direction: 'vertical' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Scaling and horizontal spinning columns random (180&#176;)', rows: 1, cols: [7, 11], tile: { delay: 75, sequence: 'random' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateY: 180 }, easing: 'easeInOutBack', duration: 600, direction: 'horizontal' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Scaling and vertical spinning columns random (180&#176;)', rows: 1, cols: [7, 11], tile: { delay: 75, sequence: 'random' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateX: - 180 }, easing: 'easeInOutBack', duration: 1200, direction: 'vertical' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Drunk colums scaling and spinning to right (180&#176;)', rows: 1, cols: [7, 11], tile: { delay: 75, sequence: 'forward' }, before: { transition: { scale3d: .85, rotateX: - 30 }, duration: 600, easing: 'easeOutQuart' }, animation: { transition: { rotateX: - 30, rotateY: 180 }, easing: 'easeInOutQuart', duration: 1000, direction: 'horizontal' }, after: { transition: { rotateX: 0, delay: 200 }, easing: 'easeOutQuart', duration: 600 } }, { name: 'Drunk colums scaling and spinning to left (180&#176;)', rows: 1, cols: [7, 11], tile: { delay: 75, sequence: 'reverse' }, before: { transition: { scale3d: .85, rotateX: - 30 }, duration: 600, easing: 'easeOutQuart' }, animation: { transition: { rotateX: 30, rotateY: - 180 }, easing: 'easeInOutQuart', duration: 1000, direction: 'horizontal' }, after: { transition: { rotateX: 0, delay: 200 }, easing: 'easeOutQuart', duration: 600 } }, { name: 'Turning cuboid to right (90&#176;)', rows: 1, cols: 1, tile: { delay: 75, sequence: 'forward' }, animation: { transition: { rotateY: 90 }, easing: 'easeInOutQuart', duration: 1500, direction: 'horizontal' } }, { name: 'Turning cuboid to left (90&#176;)', rows: 1, cols: 1, tile: { delay: 75, sequence: 'forward' }, animation: { transition: { rotateY: - 90 }, easing: 'easeInOutQuart', duration: 1500, direction: 'horizontal' } }, { name: 'Turning cuboid to bottom (90&#176;)', rows: 1, cols: 1, tile: { delay: 75, sequence: 'forward' }, animation: { transition: { rotateX: - 90 }, easing: 'easeInOutQuart', duration: 1500, direction: 'vertical' } }, { name: 'Turning cuboid to top (90&#176;)', rows: 1, cols: 1, tile: { delay: 75, sequence: 'forward' }, animation: { transition: { rotateX: 90 }, easing: 'easeInOutQuart', duration: 1500, direction: 'vertical' } }, { name: 'Scaling and turning cuboid to right (90&#176;)', rows: 1, cols: 1, tile: { delay: 75, sequence: 'random' }, animation: { transition: { scale3d: .8, rotate: 7, rotateX: 10, rotateY: 45 }, easing: 'easeInOutQuad', duration: 800, direction: 'horizontal' }, after: { transition: { rotate: 0, rotateX: 0, rotateY: 90 }, duration: 800, easing: 'easeInOutQuad' } }, { name: 'Scaling and turning cuboid to left (90&#176;)', rows: 1, cols: 1, tile: { delay: 75, sequence: 'random' }, animation: { transition: { scale3d: .8, rotate: - 7, rotateX: 10, rotateY: - 45 }, easing: 'easeInOutQuad', duration: 800, direction: 'horizontal' }, after: { transition: { rotate: 0, rotateX: 0, rotateY: - 90 }, duration: 800, easing: 'easeInOutQuad' } }, { name: 'Scaling and turning cuboids to right (90&#176;)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'forward' }, before: { transition: { scale3d: .85 }, duration: 450, easing: 'easeInOutQuint' }, animation: { transition: { rotateY: 90 }, easing: 'easeInOutBack', duration: 1000, direction: 'horizontal' }, after: { duration: 350, easing: 'easeInOutBack' } }, { name: 'Scaling and turning cuboids to left (90&#176;)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'reverse' }, before: { transition: { scale3d: .85 }, duration: 450, easing: 'easeInOutQuint' }, animation: { transition: { rotateY: - 90 }, easing: 'easeInOutBack', duration: 1000, direction: 'horizontal' }, after: { duration: 350, easing: 'easeInOutBack' } }, { name: 'Scaling and turning cuboids to bottom (90&#176;)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'col-forward' }, before: { transition: { scale3d: .85 }, duration: 450, easing: 'easeInOutQuint' }, animation: { transition: { rotateX: - 90 }, easing: 'easeInOutBack', duration: 1000, direction: 'vertical' }, after: { duration: 350, easing: 'easeInOutBack' } }, { name: 'Scaling and turning cuboids to top (90&#176;)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'col-reverse' }, before: { transition: { scale3d: .85 }, duration: 450, easing: 'easeInOutQuint' }, animation: { transition: { rotateX: 90 }, easing: 'easeInOutBack', duration: 1000, direction: 'vertical' }, after: { duration: 350, easing: 'easeInOutBack' } }, { name: 'Scaling and horizontal turning cuboids random (90&#176;)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'random' }, before: { transition: { scale3d: .65, rotateX: - 15 }, duration: 700, easing: 'easeInOutQuint' }, animation: { transition: { rotateY: 75, rotateX: 15 }, easing: 'easeInOutBack', duration: 700, direction: 'horizontal' }, after: { transition: { rotateY: 90, rotateX: 0 }, duration: 700, easing: 'easeInOutBack' } }, { name: 'Scaling and vertical turning cuboids random (90&#176;)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'random' }, before: { transition: { scale3d: .65, rotateY: 15 }, duration: 700, easing: 'easeInOutQuint' }, animation: { transition: { rotateX: 75, rotateY: - 15 }, easing: 'easeInOutBack', duration: 700, direction: 'vertical' }, after: { transition: { rotateX: 90, rotateY: 0 }, duration: 700, easing: 'easeInOutBack' } }, { name: 'Turning rows to right (90&#176;)', rows: [5, 9], cols: 1, tile: { delay: 75, sequence: 'forward' }, animation: { transition: { rotateY: 90 }, easing: 'easeInOutQuart', duration: 1500, direction: 'horizontal' } }, { name: 'Turning rows to left (90&#176;)', rows: [5, 9], cols: 1, tile: { delay: 75, sequence: 'forward' }, animation: { transition: { rotateY: - 90 }, easing: 'easeInOutQuart', duration: 1500, direction: 'horizontal' } }, { name: 'Horizontal turning rows random (90&#176;)', rows: [5, 9], cols: 1, tile: { delay: 75, sequence: 'random' }, animation: { transition: { rotateY: 90 }, easing: 'easeInOutQuart', duration: 1500, direction: 'horizontal' } }, { name: 'Scaling and turning rows to right (90&#176;)', rows: [5, 9], cols: 1, tile: { delay: 75, sequence: 'forward' }, before: { transition: { scale3d: .85, rotateX: 3 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateY: 87, rotateX: 0 }, easing: 'easeInOutBack', duration: 1000, direction: 'horizontal' }, after: { transition: { delay: 200, rotateY: 90 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Scaling and turning rows to left (90&#176;)', rows: [5, 9], cols: 1, tile: { delay: 75, sequence: 'reverse' }, before: { transition: { scale3d: .85, rotateX: 3 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateY: - 90, rotateX: 0 }, easing: 'easeInOutBack', duration: 1000, direction: 'horizontal' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Scaling and turning rows to bottom (90&#176;)', rows: [5, 9], cols: 1, tile: { delay: 75, sequence: 'forward' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateX: - 90 }, easing: 'easeInOutBack', duration: 1000, direction: 'vertical' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Scaling and turning rows to top (90&#176;)', rows: [5, 9], cols: 1, tile: { delay: 75, sequence: 'reverse' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateX: 90 }, easing: 'easeInOutBack', duration: 1000, direction: 'vertical' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Scaling and horizontal turning rows random (90&#176;)', rows: [5, 9], cols: 1, tile: { delay: 75, sequence: 'random' }, before: { transition: { scale3d: .85, rotateX: 3 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateY: 90, rotateX: 0 }, easing: 'easeInOutBack', duration: 1000, direction: 'horizontal' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Scaling and vertical turning rows random (90&#176;)', rows: [5, 9], cols: 1, tile: { delay: 75, sequence: 'random' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateX: - 90 }, easing: 'easeInOutBack', duration: 1000, direction: 'vertical' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Scaling and horizontal turning drunk rows to right (90&#176;)', rows: [7, 11], cols: 1, tile: { delay: 75, sequence: 'forward' }, animation: { transition: { scale3d: .85, rotateX: 5, rotateY: 45 }, easing: 'easeInOutQuint', duration: 1000, direction: 'horizontal' }, after: { transition: { rotateX: 0, rotateY: 90 }, easing: 'easeInOutQuint', duration: 1000 } }, { name: 'Scaling and horizontal turning drunk rows to left (90&#176;)', rows: [7, 11], cols: 1, tile: { delay: 75, sequence: 'reverse' }, animation: { transition: { scale3d: .85, rotateX: 5, rotateY: - 45 }, easing: 'easeInOutQuint', duration: 1000, direction: 'horizontal' }, after: { transition: { rotateX: 0, rotateY: - 90 }, easing: 'easeInOutQuint', duration: 1000 } }, { name: 'Turning columns to bottom (90&#176;)', rows: 1, cols: [5, 9], tile: { delay: 75, sequence: 'forward' }, animation: { transition: { rotateX: - 90 }, easing: 'easeInOutQuart', duration: 1000, direction: 'vertical' } }, { name: 'Turning columns to top (90&#176;)', rows: 1, cols: [5, 9], tile: { delay: 75, sequence: 'reverse' }, animation: { transition: { rotateX: 90 }, easing: 'easeInOutQuart', duration: 1000, direction: 'vertical' } }, { name: 'Vertical turning columns random (90&#176;)', rows: 1, cols: [5, 9], tile: { delay: 75, sequence: 'random' }, animation: { transition: { rotateX: - 90 }, easing: 'easeInOutQuart', duration: 1000, direction: 'vertical' } }, { name: 'Scaling and turning columns to bottom (90&#176;)', rows: 1, cols: [7, 11], tile: { delay: 75, sequence: 'forward' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateX: - 90 }, easing: 'easeInOutBack', duration: 1000, direction: 'vertical' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Scaling and turning columns to top (90&#176;)', rows: 1, cols: [7, 11], tile: { delay: 75, sequence: 'reverse' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateX: 90 }, easing: 'easeInOutBack', duration: 1000, direction: 'vertical' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Scaling and turning columns to right (90&#176;)', rows: 1, cols: [7, 11], tile: { delay: 75, sequence: 'forward' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateY: 90 }, easing: 'easeInOutBack', duration: 1000, direction: 'horizontal' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Scaling and turning columns to left (90&#176;)', rows: 1, cols: [7, 11], tile: { delay: 75, sequence: 'reverse' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateY: - 90 }, easing: 'easeInOutBack', duration: 1000, direction: 'horizontal' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Scaling and horizontal turning columns random (90&#176;)', rows: 1, cols: [7, 11], tile: { delay: 75, sequence: 'random' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateY: 90 }, easing: 'easeInOutBack', duration: 1000, direction: 'horizontal' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Scaling and vertical turning columns random (90&#176;)', rows: 1, cols: [7, 11], tile: { delay: 75, sequence: 'random' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateX: - 90 }, easing: 'easeInOutBack', duration: 1000, direction: 'vertical' }, after: { transition: { delay: 200 }, easing: 'easeOutBack', duration: 600 } }, { name: 'Scaling and vertical turning drunk columns to right (90&#176;)', rows: 1, cols: [7, 11], tile: { delay: 75, sequence: 'forward' }, animation: { transition: { scale3d: .85, rotateX: 45, rotateY: - 5 }, easing: 'easeInOutQuint', duration: 1000, direction: 'vertical' }, after: { transition: { rotateX: 90, rotateY: 0 }, easing: 'easeInOutQuint', duration: 1000 } }, { name: 'Scaling and vertical turning drunk columns to left (90&#176;)', rows: 1, cols: [7, 11], tile: { delay: 75, sequence: 'reverse' }, animation: { transition: { scale3d: .85, rotateX: - 45, rotateY: - 5 }, easing: 'easeInOutQuint', duration: 1000, direction: 'vertical' }, after: { transition: { rotateX: - 90, rotateY: 0 }, easing: 'easeInOutQuint', duration: 1000 } }, { name: 'Spinning cuboid to right (180&#176;, large depth)', rows: 1, cols: 1, tile: { delay: 75, sequence: 'forward', depth: 'large' }, animation: { transition: { rotateY: 180 }, easing: 'easeInOutQuart', duration: 1500, direction: 'horizontal' } }, { name: 'Spinning cuboid to left (180&#176;, large depth)', rows: 1, cols: 1, tile: { delay: 75, sequence: 'forward', depth: 'large' }, animation: { transition: { rotateY: - 180 }, easing: 'easeInOutQuart', duration: 1500, direction: 'horizontal' } }, { name: 'Spinning cuboid to bottom (180&#176;, large depth)', rows: 1, cols: 1, tile: { delay: 75, sequence: 'forward', depth: 'large' }, animation: { transition: { rotateX: - 180 }, easing: 'easeInOutQuart', duration: 1500, direction: 'vertical' } }, { name: 'Spinning cuboid to top (180&#176;, large depth)', rows: 1, cols: 1, tile: { delay: 75, sequence: 'forward', depth: 'large' }, animation: { transition: { rotateX: 180 }, easing: 'easeInOutQuart', duration: 1500, direction: 'vertical' } }, { name: 'Scaling and spinning cuboids to right (180&#176;, large depth)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'forward', depth: 'large' }, before: { transition: { scale3d: .85 }, duration: 450, easing: 'easeInOutQuint' }, animation: { transition: { rotateY: 180 }, easing: 'easeInOutBack', duration: 1000, direction: 'horizontal' }, after: { duration: 350, easing: 'easeInOutBack' } }, { name: 'Scaling and spinning cuboids to left (180&#176;, large depth)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'reverse', depth: 'large' }, before: { transition: { scale3d: .85 }, duration: 450, easing: 'easeInOutQuint' }, animation: { transition: { rotateY: - 180 }, easing: 'easeInOutBack', duration: 1000, direction: 'horizontal' }, after: { duration: 350, easing: 'easeInOutBack' } }, { name: 'Scaling and spinning cuboids to bottom (180&#176;, large depth)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'col-forward', depth: 'large' }, before: { transition: { scale3d: .85 }, duration: 450, easing: 'easeInOutQuint' }, animation: { transition: { rotateX: - 180 }, easing: 'easeInOutBack', duration: 1000, direction: 'vertical' }, after: { duration: 350, easing: 'easeInOutBack' } }, { name: 'Scaling and spinning cuboids to top (180&#176;, large depth)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'col-reverse', depth: 'large' }, before: { transition: { scale3d: .85 }, duration: 450, easing: 'easeInOutQuint' }, animation: { transition: { rotateX: 180 }, easing: 'easeInOutBack', duration: 1000, direction: 'vertical' }, after: { duration: 350, easing: 'easeInOutBack' } }, { name: 'Scaling and horizontal spinning cuboids random (180&#176;, large depth)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'random', depth: 'large' }, before: { transition: { scale3d: .65 }, duration: 700, easing: 'easeInOutQuint' }, animation: { transition: { rotateY: 180 }, easing: 'easeInOutBack', duration: 700, direction: 'horizontal' }, after: { duration: 700, easing: 'easeInOutBack' } }, { name: 'Scaling and vertical spinning cuboids random (180&#176;, large depth)', rows: [2, 4], cols: [4, 7], tile: { delay: 75, sequence: 'random', depth: 'large' }, before: { transition: { scale3d: .65 }, duration: 700, easing: 'easeInOutQuint' }, animation: { transition: { rotateX: 180 }, easing: 'easeInOutBack', duration: 700, direction: 'vertical' }, after: { duration: 700, easing: 'easeInOutBack' } }, { name: 'Scaling and spinning rows to right (180&#176;, large depth)', rows: [5, 9], cols: 1, tile: { delay: 65, sequence: 'forward', depth: 'large' }, before: { transition: { scale3d: .85, rotateX: 3 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateY: 180, rotateX: - 3 }, easing: 'easeInOutQuart', duration: 1200, direction: 'horizontal' }, after: { transition: { delay: 200, rotateX: 0 }, easing: 'easeOutQuart', duration: 400 } }, { name: 'Scaling and spinning rows to left (180&#176;, large depth)', rows: [5, 9], cols: 1, tile: { delay: 65, sequence: 'reverse', depth: 'large' }, before: { transition: { scale3d: .85, rotateX: 3 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateY: - 180, rotateX: - 3 }, easing: 'easeInOutQuart', duration: 1200, direction: 'horizontal' }, after: { transition: { delay: 200, rotateX: 0 }, easing: 'easeOutQuart', duration: 400 } }, { name: 'Scaling and spinning rows to bottom (180&#176;, large depth)', rows: [5, 9], cols: 1, tile: { delay: 65, sequence: 'forward', depth: 'large' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateX: - 180 }, easing: 'easeInOutBack', duration: 1000, direction: 'vertical' }, after: { transition: { delay: 200 }, easing: 'easeOutQuart', duration: 400 } }, { name: 'Scaling and spinning rows to top (180&#176;, large depth)', rows: [5, 9], cols: 1, tile: { delay: 65, sequence: 'reverse', depth: 'large' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateX: 180 }, easing: 'easeInOutBack', duration: 1000, direction: 'vertical' }, after: { transition: { delay: 200 }, easing: 'easeOutQuart', duration: 400 } }, { name: 'Scaling and horizontal spinning rows random (180&#176;, large depth)', rows: [5, 9], cols: 1, tile: { delay: 65, sequence: 'random', depth: 'large' }, before: { transition: { scale3d: .85, rotateX: 3 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateY: 180, rotateX: - 3 }, easing: 'easeInOutQuart', duration: 1200, direction: 'horizontal' }, after: { transition: { delay: 200, rotateX: 0 }, easing: 'easeOutQuart', duration: 400 } }, { name: 'Scaling and vertical spinning rows random (180&#176;, large depth)', rows: [5, 9], cols: 1, tile: { delay: 65, sequence: 'random', depth: 'large' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateX: - 180 }, easing: 'easeInOutBack', duration: 1000, direction: 'vertical' }, after: { transition: { delay: 200 }, easing: 'easeOutQuart', duration: 400 } }, { name: 'Scaling and spinning columns to bottom (180&#176;, large depth)', rows: 1, cols: [7, 11], tile: { delay: 65, sequence: 'forward', depth: 'large' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateX: - 180 }, easing: 'easeInOutQuart', duration: 1200, direction: 'vertical' }, after: { transition: { delay: 200 }, easing: 'easeOutQuart', duration: 400 } }, { name: 'Scaling and spinning columns to top (180&#176;, large depth)', rows: 1, cols: [7, 11], tile: { delay: 65, sequence: 'reverse', depth: 'large' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateX: 180 }, easing: 'easeInOutQuart', duration: 1200, direction: 'vertical' }, after: { transition: { delay: 200 }, easing: 'easeOutQuart', duration: 400 } }, { name: 'Scaling and spinning columns to right (180&#176;, large depth)', rows: 1, cols: [7, 11], tile: { delay: 65, sequence: 'forward', depth: 'large' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateY: 180 }, easing: 'easeInOutBack', duration: 1000, direction: 'horizontal' }, after: { transition: { delay: 200 }, easing: 'easeOutQuart', duration: 400 } }, { name: 'Scaling and spinning columns to left (180&#176;, large depth)', rows: 1, cols: [7, 11], tile: { delay: 65, sequence: 'reverse', depth: 'large' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateY: - 180 }, easing: 'easeInOutBack', duration: 1000, direction: 'horizontal' }, after: { transition: { delay: 200 }, easing: 'easeOutQuart', duration: 400 } }, { name: 'Scaling and horizontal spinning columns random (180&#176;, large depth)', rows: 1, cols: [7, 11], tile: { delay: 65, sequence: 'random', depth: 'large' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateY: 180 }, easing: 'easeInOutBack', duration: 1000, direction: 'horizontal' }, after: { transition: { delay: 200 }, easing: 'easeOutQuart', duration: 400 } }, { name: 'Scaling and vertical spinning columns random (180&#176;, large depth)', rows: 1, cols: [7, 11], tile: { delay: 65, sequence: 'random', depth: 'large' }, before: { transition: { scale3d: .85 }, duration: 600, easing: 'easeOutBack' }, animation: { transition: { rotateX: - 180 }, easing: 'easeInOutQuart', duration: 1200, direction: 'vertical' }, after: { transition: { delay: 200 }, easing: 'easeOutQuart', duration: 400 } }] };
        ;
        (function ($, window, document, undefined) {
        'use strict';
                var cssTransitionSupport = function () {
                var s = document.body || document.documentElement, s = s.style;
                        if (s.WebkitTransition == '')
                        return '-webkit-';
                        if (s.MozTransition == '')
                        return '-moz-';
                        if (s.OTransition == '')
                        return '-o-';
                        if (s.transition == '')
                        return '';
                        return false;
                }, isCssTransitionSupport = cssTransitionSupport() === false ? false : true, cssTransitionTranslateX = function (element, positionX, speed) {
        var options = {}, prefix = cssTransitionSupport();
                options[prefix + 'transform'] = 'translateX(' + positionX + ')';
                options[prefix + 'transition'] = prefix + 'transform ' + speed + 's linear';
                element.css(options);
        }, hasTouch = ('ontouchstart' in window), hasPointers = window.navigator.pointerEnabled || window.navigator.msPointerEnabled, wasTouched = function (event) {
        if (hasTouch)
                return true;
                if (!hasPointers || typeof event === 'undefined' || typeof event.pointerType === 'undefined')
                return false;
                if (typeof event.MSPOINTER_TYPE_MOUSE !== 'undefined') {
        if (event.MSPOINTER_TYPE_MOUSE != event.pointerType)
                return true;
        }
        else if (event.pointerType != 'mouse')
                return true;
                return false;
        };
                $.fn.imageLightbox = function (options) {
                var options = $.extend({ selector: 'id="imagelightbox"', allowedTypes: 'png|jpg|jpeg|gif', animationSpeed: 250, preloadNext: true, enableKeyboard: true, quitOnEnd: false, quitOnImgClick: false, quitOnDocClick: true, onStart: false, onEnd: false, onLoadStart: false, onLoadEnd: false }, options), targets = $([]), target = $(), image = $(), imageWidth = 0, imageHeight = 0, swipeDiff = 0, inProgress = false, isTargetValid = function (element) {
                return $(element).prop('tagName').toLowerCase() == 'a' && (new RegExp('\.(' + options.allowedTypes + ')$', 'i')).test($(element).attr('href'));
                }, setImage = function () {
                if (!image.length)
                        return true;
                        var screenWidth = $(window).width() * 0.8, screenHeight = $(window).height() * 0.9, tmpImage = new Image();
                        tmpImage.src = image.attr('src');
                        tmpImage.onload = function () {
                        imageWidth = tmpImage.width;
                                imageHeight = tmpImage.height;
                                if (imageWidth > screenWidth || imageHeight > screenHeight) {
                        var ratio = imageWidth / imageHeight > screenWidth / screenHeight ? imageWidth / screenWidth : imageHeight / screenHeight;
                                imageWidth /= ratio;
                                imageHeight /= ratio;
                        }
                        image.css({ 'width': imageWidth + 'px', 'height': imageHeight + 'px', 'top': ($(window).height() - imageHeight) / 2 + 'px', 'left': ($(window).width() - imageWidth) / 2 + 'px' });
                        };
                }, loadImage = function (direction) {
                if (inProgress)
                        return false;
                        direction = typeof direction === 'undefined' ? false : direction == 'left' ? 1 : - 1;
                        if (image.length) {
                if (direction !== false && (targets.length < 2 || (options.quitOnEnd === true && ((direction === - 1 && targets.index(target) == 0) || (direction === 1 && targets.index(target) == targets.length - 1))))) {
                quitLightbox();
                        return false;
                }
                var params = { 'opacity': 0 };
                        if (isCssTransitionSupport)
                        cssTransitionTranslateX(image, (100 * direction) - swipeDiff + 'px', options.animationSpeed / 1000);
                        else
                        params.left = parseInt(image.css('left')) + 100 * direction + 'px';
                        image.animate(params, options.animationSpeed, function () {
                        removeImage();
                        });
                        swipeDiff = 0;
                }
                inProgress = true;
                        if (options.onLoadStart !== false)
                        options.onLoadStart();
                        setTimeout(function () {
                        image = $('<img ' + options.selector + ' />').attr('src', target.attr('href')).load(function () {
                        image.appendTo('body');
                                setImage();
                                var params = { 'opacity': 1 };
                                image.css('opacity', 0);
                                if (isCssTransitionSupport) {
                        cssTransitionTranslateX(image, - 100 * direction + 'px', 0);
                                setTimeout(function () {
                                cssTransitionTranslateX(image, 0 + 'px', options.animationSpeed / 1000);
                                }, 50);
                        }
                        else {
                        var imagePosLeft = parseInt(image.css('left'));
                                params.left = imagePosLeft + 'px';
                                image.css('left', imagePosLeft - 100 * direction + 'px');
                        }
                        image.animate(params, options.animationSpeed, function () {
                        inProgress = false;
                                if (options.onLoadEnd !== false)
                                options.onLoadEnd();
                        });
                        }).error(function () {
                        if (options.onLoadEnd !== false)
                                options.onLoadEnd();
                        });
                                var swipeStart = 0, swipeEnd = 0, imagePosLeft = 0;
                                image.on(hasPointers ? 'pointerup MSPointerUp' : 'click', function (e) {
                                e.preventDefault();
                                        if (options.quitOnImgClick) {
                                quitLightbox();
                                        return false;
                                }
                                if (wasTouched(e.originalEvent))
                                        return true;
                                        var posX = (e.pageX || e.originalEvent.pageX) - e.target.offsetLeft;
                                        target = targets.eq(targets.index(target) - (imageWidth / 2 > posX ? 1 : - 1));
                                        if (!target.length)
                                        target = targets.eq(imageWidth / 2 > posX ? targets.length : 0);
                                        loadImage(imageWidth / 2 > posX ? 'left' : 'right');
                                }).on('touchstart pointerdown MSPointerDown', function (e) {
                        if (!wasTouched(e.originalEvent) || options.quitOnImgClick)
                                return true;
                                if (isCssTransitionSupport)
                                imagePosLeft = parseInt(image.css('left'));
                                swipeStart = e.originalEvent.pageX || e.originalEvent.touches[0].pageX;
                        }).on('touchmove pointermove MSPointerMove', function (e) {
                        if (!wasTouched(e.originalEvent) || options.quitOnImgClick)
                                return true;
                                e.preventDefault();
                                swipeEnd = e.originalEvent.pageX || e.originalEvent.touches[0].pageX;
                                swipeDiff = swipeStart - swipeEnd;
                                if (isCssTransitionSupport)
                                cssTransitionTranslateX(image, - swipeDiff + 'px', 0);
                                else
                                image.css('left', imagePosLeft - swipeDiff + 'px');
                        }).on('touchend touchcancel pointerup pointercancel MSPointerUp MSPointerCancel', function (e) {
                        if (!wasTouched(e.originalEvent) || options.quitOnImgClick)
                                return true;
                                if (Math.abs(swipeDiff) > 50) {
                        target = targets.eq(targets.index(target) - (swipeDiff < 0 ? 1 : - 1));
                                if (!target.length)
                                target = targets.eq(swipeDiff < 0 ? targets.length : 0);
                                loadImage(swipeDiff > 0 ? 'right' : 'left');
                        }
                        else {
                        if (isCssTransitionSupport)
                                cssTransitionTranslateX(image, 0 + 'px', options.animationSpeed / 1000);
                                else
                                image.animate({ 'left': imagePosLeft + 'px' }, options.animationSpeed / 2);
                        }
                        });
                        }, options.animationSpeed + 100);
                }, removeImage = function () {
                if (!image.length)
                        return false;
                        image.remove();
                        image = $();
                }, quitLightbox = function () {
                if (!image.length)
                        return false;
                        image.animate({ 'opacity': 0 }, options.animationSpeed, function () {
                        removeImage();
                                inProgress = false;
                                if (options.onEnd !== false)
                                options.onEnd();
                        });
                };
                        $(window).on('resize', setImage);
                        if (options.quitOnDocClick) {
                $(document).on(hasTouch ? 'touchend' : 'click', function (e) {
                if (image.length && !$(e.target).is(image))
                        quitLightbox();
                });
                }
                if (options.enableKeyboard) {
                $(document).on('keyup', function (e) {
                if (!image.length)
                        return true;
                        e.preventDefault();
                        if (e.keyCode == 27)
                        quitLightbox();
                        if (e.keyCode == 37 || e.keyCode == 39) {
                target = targets.eq(targets.index(target) - (e.keyCode == 37 ? 1 : - 1));
                        if (!target.length)
                        target = targets.eq(e.keyCode == 37 ? targets.length : 0);
                        loadImage(e.keyCode == 37 ? 'left' : 'right');
                }
                });
                }
                $(document).on('click', this.selector, function (e) {
                if (!isTargetValid(this))
                        return true;
                        e.preventDefault();
                        if (inProgress)
                        return false;
                        inProgress = false;
                        if (options.onStart !== false)
                        options.onStart();
                        target = $(this);
                        loadImage();
                });
                        this.each(function () {
                        if (!isTargetValid(this))
                                return true;
                                targets = targets.add($(this));
                        });
                        this.switchImageLightbox = function (index) {
                        var tmpTarget = targets.eq(index);
                                if (tmpTarget.length) {
                        var currentIndex = targets.index(target);
                                target = tmpTarget;
                                loadImage(index < currentIndex ? 'left' : 'right');
                        }
                        return this;
                        };
                        this.quitImageLightbox = function () {
                        quitLightbox();
                                return this;
                        };
                        return this;
                };
                })(jQuery, window, document);
        jQuery(document).ready(function ($) {
$(".ls-imagelightbox").each(function () {
var $this = $(this);
        var $slider = $this.parents(".ls-wp-container");
        var $a = $("<a>").attr({ "class": "ls-lightboxa", "href": $this.parent().attr("href") || $this.parent().find(".ls-bg").attr("data-src"), "title": $this.attr("title") }).appendTo(document.body);
        $a[0].slider = $slider;
        $this.parent().removeAttr("href");
        $this.removeAttr("title").on("click", function () {
var ls = $slider.data("LayerSlider");
        if (ls.g.paused) {
if (ls.o.autoPauseSlideshow != false) {
ls.g.paused = false;
}
ls.g.originalAutoSlideshow = true;
}
else {
ls.g.originalAutoSlideshow = ls.g.autoSlideshow;
}
if (ls.o.autoPauseSlideshow != false) {
ls.stop();
}
$a.click();
});
});
        var activityIndicatorOn = function () {
        $('<div id="imagelightbox-loading"><div></div></div>').appendTo('body');
        }, activityIndicatorOff = function () {
$('#imagelightbox-loading').remove();
}, overlayOn = function () {
$('<div id="imagelightbox-overlay"></div>').appendTo('body');
}, overlayOff = function () {
$('#imagelightbox-overlay').remove();
}, closeButtonOn = function (instance) {
$('<a href="#" id="imagelightbox-close">Close</a>').appendTo('body').on('click touchend', function () {
$(this).remove();
        instance.quitImageLightbox();
        return false;
});
}, closeButtonOff = function () {
$('#imagelightbox-close').remove();
}, captionOn = function () {
var description = $('a[href="' + $('#imagelightbox').attr('src') + '"]').attr('title');
        if (description && description.length > 0)
        $('<div id="imagelightbox-caption">' + description + '</div>').appendTo('body');
}, captionOff = function () {
$('#imagelightbox-caption').remove();
};
        var instanceF = $(".ls-lightboxa").imageLightbox({ allowedTypes: 'png|jpg|jpeg|gif', animationSpeed: 250, preloadNext: true, enableKeyboard: true, quitOnEnd: false, quitOnImgClick: false, quitOnDocClick: true, onStart: function () {
overlayOn();
        closeButtonOn(instanceF);
}, onEnd: function () {
overlayOff();
        captionOff();
        closeButtonOff();
        activityIndicatorOff();
}, onLoadStart: function () {
captionOff();
        activityIndicatorOn();
}, onLoadEnd: function () {
captionOn();
        activityIndicatorOff();
} });
        });
        document.addEvent('domready', function () {
        new Skyline_ScrollToTop({ 'image': URL + 'public/img/icon/scroll-to-top-4.png', 'text': '', 'title': '', 'className': 'scrollToTop', 'duration': 500, 'transition': Fx.Transitions.linear });
                });
        window.addEvent('load', function () {
        new JCaption('img.caption');
                });
        window.addEvent('domready', function () {
        $$('.hasTip').each(function (el) {
        var title = el.get('title');
                if (title) {
        var parts = title.split('::', 2);
                el.store('tip:title', parts[0]);
                el.store('tip:text', parts[1]);
        }
        });
                var JTooltips = new Tips($$('.hasTip'), { maxTitleChars: 50, fixed: false });
                });
